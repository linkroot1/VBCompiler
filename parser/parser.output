Terminals unused in grammar

    ENDL
    ARITHMETIC_PLUS
    ARITHMETIC_MINUS
    MULTIPLICATION
    ORD_DIVISION
    ASSIGN_CONSTRUCT
    ASSIGN_MULT
    ASSIGN_ORD_DIV
    ASSIGN_INT_DIV
    ASSIGN_ADD
    ASSIGN_SUB
    ASSIGN_LSHIFT
    ASSIGN_RSHIFT
    ASSIGN_CONCAT


State 47 conflicts: 1 shift/reduce
State 48 conflicts: 1 shift/reduce
State 58 conflicts: 13 shift/reduce
State 59 conflicts: 13 shift/reduce
State 89 conflicts: 13 shift/reduce
State 90 conflicts: 13 shift/reduce
State 91 conflicts: 13 shift/reduce
State 92 conflicts: 13 shift/reduce
State 93 conflicts: 13 shift/reduce
State 94 conflicts: 13 shift/reduce
State 95 conflicts: 13 shift/reduce
State 96 conflicts: 13 shift/reduce
State 97 conflicts: 13 shift/reduce
State 98 conflicts: 13 shift/reduce
State 99 conflicts: 13 shift/reduce
State 100 conflicts: 13 shift/reduce
State 101 conflicts: 13 shift/reduce


Grammar

    0 $accept: root $end

    1 root: program_items_list

    2 program_items_list: %empty
    3                   | program_items_list_not_empty

    4 program_items_list_not_empty: program_item
    5                             | program_items_list_not_empty program_item

    6 program_item: stmt
    7             | IMPORTS IDENTIFIER

    8 stmt_ends: END_OF_LINE
    9          | stmt_ends END_OF_LINE

   10 stmt: decl_stmt stmt_ends
   11     | exec_stmt stmt_ends

   12 decl_stmt: ACCESS SUB var_name stmt END SUB
   13          | CONST var_name AS basic_literal '=' expr
   14          | DIM var_name
   15          | DIM var_name AS basic_literal
   16          | DIM var_name '=' expr
   17          | DIM var_name AS basic_literal '=' expr

   18 var_name: IDENTIFIER
   19         | IDENTIFIER '(' expr ')'

   20 exec_stmt: assign_stmt
   21          | while_stmt
   22          | if_stmt
   23          | select_stmt
   24          | case_stmt

   25 assign_stmt: IDENTIFIER '=' expr
   26            | IDENTIFIER '=' IDENTIFIER

   27 while_stmt: WHILE expr stmt_ends stmt END WHILE

   28 if_stmt: IF expr THEN stmt
   29        | IF expr THEN stmt_ends stmt ELSE stmt END IF
   30        | IF expr THEN stmt_ends stmt elseif_list ELSE stmt END IF

   31 elseif_list: ELSEIF expr THEN stmt
   32            | elseif_list ELSEIF expr THEN stmt

   33 select_stmt: SELECT CASE expr case_stmt END SELECT

   34 case_stmt: CASE expr stmt
   35          | CASE IS expr stmt
   36          | CASE expr TO expr stmt
   37          | CASE ELSE stmt

   38 expr: operand
   39     | expr '+' expr
   40     | expr '-' expr
   41     | '-' expr
   42     | '+' expr
   43     | expr '*' expr
   44     | expr '/' expr
   45     | expr ASSIGN_EQUALS expr
   46     | expr LESS expr
   47     | expr MORE expr
   48     | expr EXPONENT expr
   49     | expr INT_DIVISION expr
   50     | expr NOT_EQUAL expr
   51     | expr LESS_OR_EQUAL expr
   52     | expr MORE_OR_EQUAL expr
   53     | expr CONCAT expr

   54 operand: basic_literal
   55        | function_literal

   56 basic_literal: INT
   57              | STRING
   58              | BOOLEAN
   59              | DOUBLE

   60 function_literal: IDENTIFIER arguments

   61 arguments: '(' expr_list ')'
   62          | '(' ')'

   63 expr_list: expr
   64          | expr_list ',' expr


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 19 61 62
    ')' (41) 19 61 62
    '*' (42) 43
    '+' (43) 39 42
    ',' (44) 64
    '-' (45) 40 41
    '/' (47) 44
    '=' (61) 13 16 17 25 26
    error (256)
    INT <int_val> (258) 56
    DOUBLE <double_val> (259) 59
    STRING <str_val> (260) 57
    BOOLEAN <bool_val> (261) 58
    IDENTIFIER <id_name> (262) 7 18 19 25 26 60
    ENDL (263)
    ACCESS (264) 12
    SUB (265) 12
    END (266) 12 27 29 30 33
    CONST (267) 13
    DIM (268) 14 15 16 17
    AS (269) 13 15 17
    WHILE (270) 27
    IF (271) 28 29 30
    THEN (272) 28 29 30 31 32
    ELSE (273) 29 30 37
    ELSEIF (274) 31 32
    SELECT (275) 33
    CASE (276) 33 34 35 36 37
    UNARY_MINUS (277)
    UNARY_PLUS (278)
    ARITHMETIC_PLUS (279)
    ARITHMETIC_MINUS (280)
    EXPONENT (281) 48
    MULTIPLICATION (282)
    ORD_DIVISION (283)
    INT_DIVISION (284) 49
    LESS (285) 46
    MORE (286) 47
    LESS_OR_EQUAL (287) 51
    MORE_OR_EQUAL (288) 52
    NOT_EQUAL (289) 50
    CONCAT (290) 53
    ASSIGN_EQUALS (291) 45
    ASSIGN_CONSTRUCT (292)
    ASSIGN_MULT (293)
    ASSIGN_ORD_DIV (294)
    ASSIGN_INT_DIV (295)
    ASSIGN_ADD (296)
    ASSIGN_SUB (297)
    ASSIGN_LSHIFT (298)
    ASSIGN_RSHIFT (299)
    ASSIGN_CONCAT (300)
    IMPORTS (301) 7
    END_OF_LINE (302) 8 9
    IS (303) 35
    TO (304) 36


Nonterminals, with rules where they appear

    $accept (58)
        on left: 0
    root (59)
        on left: 1
        on right: 0
    program_items_list (60)
        on left: 2 3
        on right: 1
    program_items_list_not_empty (61)
        on left: 4 5
        on right: 3 5
    program_item (62)
        on left: 6 7
        on right: 4 5
    stmt_ends (63)
        on left: 8 9
        on right: 9 10 11 27 29 30
    stmt (64)
        on left: 10 11
        on right: 6 12 27 28 29 30 31 32 34 35 36 37
    decl_stmt (65)
        on left: 12 13 14 15 16 17
        on right: 10
    var_name (66)
        on left: 18 19
        on right: 12 13 14 15 16 17
    exec_stmt (67)
        on left: 20 21 22 23 24
        on right: 11
    assign_stmt (68)
        on left: 25 26
        on right: 20
    while_stmt (69)
        on left: 27
        on right: 21
    if_stmt (70)
        on left: 28 29 30
        on right: 22
    elseif_list (71)
        on left: 31 32
        on right: 30 32
    select_stmt (72)
        on left: 33
        on right: 23
    case_stmt (73)
        on left: 34 35 36 37
        on right: 24 33
    expr (74)
        on left: 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
        on right: 13 16 17 19 25 27 28 29 30 31 32 33 34 35 36 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 63 64
    operand (75)
        on left: 54 55
        on right: 38
    basic_literal (76)
        on left: 56 57 58 59
        on right: 13 15 17 54
    function_literal (77)
        on left: 60
        on right: 55
    arguments (78)
        on left: 61 62
        on right: 60
    expr_list (79)
        on left: 63 64
        on right: 61 64


State 0

    0 $accept: . root $end

    IDENTIFIER  shift, and go to state 1
    ACCESS      shift, and go to state 2
    CONST       shift, and go to state 3
    DIM         shift, and go to state 4
    WHILE       shift, and go to state 5
    IF          shift, and go to state 6
    SELECT      shift, and go to state 7
    CASE        shift, and go to state 8
    IMPORTS     shift, and go to state 9

    $default  reduce using rule 2 (program_items_list)

    root                          go to state 10
    program_items_list            go to state 11
    program_items_list_not_empty  go to state 12
    program_item                  go to state 13
    stmt                          go to state 14
    decl_stmt                     go to state 15
    exec_stmt                     go to state 16
    assign_stmt                   go to state 17
    while_stmt                    go to state 18
    if_stmt                       go to state 19
    select_stmt                   go to state 20
    case_stmt                     go to state 21


State 1

   25 assign_stmt: IDENTIFIER . '=' expr
   26            | IDENTIFIER . '=' IDENTIFIER

    '='  shift, and go to state 22


State 2

   12 decl_stmt: ACCESS . SUB var_name stmt END SUB

    SUB  shift, and go to state 23


State 3

   13 decl_stmt: CONST . var_name AS basic_literal '=' expr

    IDENTIFIER  shift, and go to state 24

    var_name  go to state 25


State 4

   14 decl_stmt: DIM . var_name
   15          | DIM . var_name AS basic_literal
   16          | DIM . var_name '=' expr
   17          | DIM . var_name AS basic_literal '=' expr

    IDENTIFIER  shift, and go to state 24

    var_name  go to state 26


State 5

   27 while_stmt: WHILE . expr stmt_ends stmt END WHILE

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 34
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 6

   28 if_stmt: IF . expr THEN stmt
   29        | IF . expr THEN stmt_ends stmt ELSE stmt END IF
   30        | IF . expr THEN stmt_ends stmt elseif_list ELSE stmt END IF

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 38
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 7

   33 select_stmt: SELECT . CASE expr case_stmt END SELECT

    CASE  shift, and go to state 39


State 8

   34 case_stmt: CASE . expr stmt
   35          | CASE . IS expr stmt
   36          | CASE . expr TO expr stmt
   37          | CASE . ELSE stmt

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    ELSE        shift, and go to state 40
    IS          shift, and go to state 41
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 42
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 9

    7 program_item: IMPORTS . IDENTIFIER

    IDENTIFIER  shift, and go to state 43


State 10

    0 $accept: root . $end

    $end  shift, and go to state 44


State 11

    1 root: program_items_list .

    $default  reduce using rule 1 (root)


State 12

    3 program_items_list: program_items_list_not_empty .
    5 program_items_list_not_empty: program_items_list_not_empty . program_item

    IDENTIFIER  shift, and go to state 1
    ACCESS      shift, and go to state 2
    CONST       shift, and go to state 3
    DIM         shift, and go to state 4
    WHILE       shift, and go to state 5
    IF          shift, and go to state 6
    SELECT      shift, and go to state 7
    CASE        shift, and go to state 8
    IMPORTS     shift, and go to state 9

    $default  reduce using rule 3 (program_items_list)

    program_item  go to state 45
    stmt          go to state 14
    decl_stmt     go to state 15
    exec_stmt     go to state 16
    assign_stmt   go to state 17
    while_stmt    go to state 18
    if_stmt       go to state 19
    select_stmt   go to state 20
    case_stmt     go to state 21


State 13

    4 program_items_list_not_empty: program_item .

    $default  reduce using rule 4 (program_items_list_not_empty)


State 14

    6 program_item: stmt .

    $default  reduce using rule 6 (program_item)


State 15

   10 stmt: decl_stmt . stmt_ends

    END_OF_LINE  shift, and go to state 46

    stmt_ends  go to state 47


State 16

   11 stmt: exec_stmt . stmt_ends

    END_OF_LINE  shift, and go to state 46

    stmt_ends  go to state 48


State 17

   20 exec_stmt: assign_stmt .

    $default  reduce using rule 20 (exec_stmt)


State 18

   21 exec_stmt: while_stmt .

    $default  reduce using rule 21 (exec_stmt)


State 19

   22 exec_stmt: if_stmt .

    $default  reduce using rule 22 (exec_stmt)


State 20

   23 exec_stmt: select_stmt .

    $default  reduce using rule 23 (exec_stmt)


State 21

   24 exec_stmt: case_stmt .

    $default  reduce using rule 24 (exec_stmt)


State 22

   25 assign_stmt: IDENTIFIER '=' . expr
   26            | IDENTIFIER '=' . IDENTIFIER

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 49
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 50
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 23

   12 decl_stmt: ACCESS SUB . var_name stmt END SUB

    IDENTIFIER  shift, and go to state 24

    var_name  go to state 51


State 24

   18 var_name: IDENTIFIER .
   19         | IDENTIFIER . '(' expr ')'

    '('  shift, and go to state 52

    $default  reduce using rule 18 (var_name)


State 25

   13 decl_stmt: CONST var_name . AS basic_literal '=' expr

    AS  shift, and go to state 53


State 26

   14 decl_stmt: DIM var_name .
   15          | DIM var_name . AS basic_literal
   16          | DIM var_name . '=' expr
   17          | DIM var_name . AS basic_literal '=' expr

    AS   shift, and go to state 54
    '='  shift, and go to state 55

    $default  reduce using rule 14 (decl_stmt)


State 27

   56 basic_literal: INT .

    $default  reduce using rule 56 (basic_literal)


State 28

   59 basic_literal: DOUBLE .

    $default  reduce using rule 59 (basic_literal)


State 29

   57 basic_literal: STRING .

    $default  reduce using rule 57 (basic_literal)


State 30

   58 basic_literal: BOOLEAN .

    $default  reduce using rule 58 (basic_literal)


State 31

   60 function_literal: IDENTIFIER . arguments

    '('  shift, and go to state 56

    arguments  go to state 57


State 32

   42 expr: '+' . expr

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 58
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 33

   41 expr: '-' . expr

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 59
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 34

   27 while_stmt: WHILE expr . stmt_ends stmt END WHILE
   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    END_OF_LINE    shift, and go to state 46
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    stmt_ends  go to state 73


State 35

   38 expr: operand .

    $default  reduce using rule 38 (expr)


State 36

   54 operand: basic_literal .

    $default  reduce using rule 54 (operand)


State 37

   55 operand: function_literal .

    $default  reduce using rule 55 (operand)


State 38

   28 if_stmt: IF expr . THEN stmt
   29        | IF expr . THEN stmt_ends stmt ELSE stmt END IF
   30        | IF expr . THEN stmt_ends stmt elseif_list ELSE stmt END IF
   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    THEN           shift, and go to state 74
    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72


State 39

   33 select_stmt: SELECT CASE . expr case_stmt END SELECT

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 75
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 40

   37 case_stmt: CASE ELSE . stmt

    IDENTIFIER  shift, and go to state 1
    ACCESS      shift, and go to state 2
    CONST       shift, and go to state 3
    DIM         shift, and go to state 4
    WHILE       shift, and go to state 5
    IF          shift, and go to state 6
    SELECT      shift, and go to state 7
    CASE        shift, and go to state 8

    stmt         go to state 76
    decl_stmt    go to state 15
    exec_stmt    go to state 16
    assign_stmt  go to state 17
    while_stmt   go to state 18
    if_stmt      go to state 19
    select_stmt  go to state 20
    case_stmt    go to state 21


State 41

   35 case_stmt: CASE IS . expr stmt

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 77
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 42

   34 case_stmt: CASE expr . stmt
   36          | CASE expr . TO expr stmt
   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    IDENTIFIER     shift, and go to state 1
    ACCESS         shift, and go to state 2
    CONST          shift, and go to state 3
    DIM            shift, and go to state 4
    WHILE          shift, and go to state 5
    IF             shift, and go to state 6
    SELECT         shift, and go to state 7
    CASE           shift, and go to state 8
    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    TO             shift, and go to state 78
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    stmt         go to state 79
    decl_stmt    go to state 15
    exec_stmt    go to state 16
    assign_stmt  go to state 17
    while_stmt   go to state 18
    if_stmt      go to state 19
    select_stmt  go to state 20
    case_stmt    go to state 21


State 43

    7 program_item: IMPORTS IDENTIFIER .

    $default  reduce using rule 7 (program_item)


State 44

    0 $accept: root $end .

    $default  accept


State 45

    5 program_items_list_not_empty: program_items_list_not_empty program_item .

    $default  reduce using rule 5 (program_items_list_not_empty)


State 46

    8 stmt_ends: END_OF_LINE .

    $default  reduce using rule 8 (stmt_ends)


State 47

    9 stmt_ends: stmt_ends . END_OF_LINE
   10 stmt: decl_stmt stmt_ends .

    END_OF_LINE  shift, and go to state 80

    END_OF_LINE  [reduce using rule 10 (stmt)]
    $default     reduce using rule 10 (stmt)


State 48

    9 stmt_ends: stmt_ends . END_OF_LINE
   11 stmt: exec_stmt stmt_ends .

    END_OF_LINE  shift, and go to state 80

    END_OF_LINE  [reduce using rule 11 (stmt)]
    $default     reduce using rule 11 (stmt)


State 49

   26 assign_stmt: IDENTIFIER '=' IDENTIFIER .
   60 function_literal: IDENTIFIER . arguments

    '('  shift, and go to state 56

    $default  reduce using rule 26 (assign_stmt)

    arguments  go to state 57


State 50

   25 assign_stmt: IDENTIFIER '=' expr .
   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    $default  reduce using rule 25 (assign_stmt)


State 51

   12 decl_stmt: ACCESS SUB var_name . stmt END SUB

    IDENTIFIER  shift, and go to state 1
    ACCESS      shift, and go to state 2
    CONST       shift, and go to state 3
    DIM         shift, and go to state 4
    WHILE       shift, and go to state 5
    IF          shift, and go to state 6
    SELECT      shift, and go to state 7
    CASE        shift, and go to state 8

    stmt         go to state 81
    decl_stmt    go to state 15
    exec_stmt    go to state 16
    assign_stmt  go to state 17
    while_stmt   go to state 18
    if_stmt      go to state 19
    select_stmt  go to state 20
    case_stmt    go to state 21


State 52

   19 var_name: IDENTIFIER '(' . expr ')'

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 82
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 53

   13 decl_stmt: CONST var_name AS . basic_literal '=' expr

    INT      shift, and go to state 27
    DOUBLE   shift, and go to state 28
    STRING   shift, and go to state 29
    BOOLEAN  shift, and go to state 30

    basic_literal  go to state 83


State 54

   15 decl_stmt: DIM var_name AS . basic_literal
   17          | DIM var_name AS . basic_literal '=' expr

    INT      shift, and go to state 27
    DOUBLE   shift, and go to state 28
    STRING   shift, and go to state 29
    BOOLEAN  shift, and go to state 30

    basic_literal  go to state 84


State 55

   16 decl_stmt: DIM var_name '=' . expr

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 85
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 56

   61 arguments: '(' . expr_list ')'
   62          | '(' . ')'

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    ')'         shift, and go to state 86
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 87
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37
    expr_list         go to state 88


State 57

   60 function_literal: IDENTIFIER arguments .

    $default  reduce using rule 60 (function_literal)


State 58

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   42     | '+' expr .
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    EXPONENT       [reduce using rule 42 (expr)]
    INT_DIVISION   [reduce using rule 42 (expr)]
    LESS           [reduce using rule 42 (expr)]
    MORE           [reduce using rule 42 (expr)]
    LESS_OR_EQUAL  [reduce using rule 42 (expr)]
    MORE_OR_EQUAL  [reduce using rule 42 (expr)]
    NOT_EQUAL      [reduce using rule 42 (expr)]
    CONCAT         [reduce using rule 42 (expr)]
    ASSIGN_EQUALS  [reduce using rule 42 (expr)]
    '+'            [reduce using rule 42 (expr)]
    '-'            [reduce using rule 42 (expr)]
    '*'            [reduce using rule 42 (expr)]
    '/'            [reduce using rule 42 (expr)]
    $default       reduce using rule 42 (expr)


State 59

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | '-' expr .
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    EXPONENT       [reduce using rule 41 (expr)]
    INT_DIVISION   [reduce using rule 41 (expr)]
    LESS           [reduce using rule 41 (expr)]
    MORE           [reduce using rule 41 (expr)]
    LESS_OR_EQUAL  [reduce using rule 41 (expr)]
    MORE_OR_EQUAL  [reduce using rule 41 (expr)]
    NOT_EQUAL      [reduce using rule 41 (expr)]
    CONCAT         [reduce using rule 41 (expr)]
    ASSIGN_EQUALS  [reduce using rule 41 (expr)]
    '+'            [reduce using rule 41 (expr)]
    '-'            [reduce using rule 41 (expr)]
    '*'            [reduce using rule 41 (expr)]
    '/'            [reduce using rule 41 (expr)]
    $default       reduce using rule 41 (expr)


State 60

   48 expr: expr EXPONENT . expr

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 89
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 61

   49 expr: expr INT_DIVISION . expr

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 90
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 62

   46 expr: expr LESS . expr

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 91
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 63

   47 expr: expr MORE . expr

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 92
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 64

   51 expr: expr LESS_OR_EQUAL . expr

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 93
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 65

   52 expr: expr MORE_OR_EQUAL . expr

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 94
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 66

   50 expr: expr NOT_EQUAL . expr

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 95
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 67

   53 expr: expr CONCAT . expr

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 96
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 68

   45 expr: expr ASSIGN_EQUALS . expr

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 97
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 69

   39 expr: expr '+' . expr

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 98
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 70

   40 expr: expr '-' . expr

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 99
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 71

   43 expr: expr '*' . expr

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 100
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 72

   44 expr: expr '/' . expr

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 101
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 73

    9 stmt_ends: stmt_ends . END_OF_LINE
   27 while_stmt: WHILE expr stmt_ends . stmt END WHILE

    IDENTIFIER   shift, and go to state 1
    ACCESS       shift, and go to state 2
    CONST        shift, and go to state 3
    DIM          shift, and go to state 4
    WHILE        shift, and go to state 5
    IF           shift, and go to state 6
    SELECT       shift, and go to state 7
    CASE         shift, and go to state 8
    END_OF_LINE  shift, and go to state 80

    stmt         go to state 102
    decl_stmt    go to state 15
    exec_stmt    go to state 16
    assign_stmt  go to state 17
    while_stmt   go to state 18
    if_stmt      go to state 19
    select_stmt  go to state 20
    case_stmt    go to state 21


State 74

   28 if_stmt: IF expr THEN . stmt
   29        | IF expr THEN . stmt_ends stmt ELSE stmt END IF
   30        | IF expr THEN . stmt_ends stmt elseif_list ELSE stmt END IF

    IDENTIFIER   shift, and go to state 1
    ACCESS       shift, and go to state 2
    CONST        shift, and go to state 3
    DIM          shift, and go to state 4
    WHILE        shift, and go to state 5
    IF           shift, and go to state 6
    SELECT       shift, and go to state 7
    CASE         shift, and go to state 8
    END_OF_LINE  shift, and go to state 46

    stmt_ends    go to state 103
    stmt         go to state 104
    decl_stmt    go to state 15
    exec_stmt    go to state 16
    assign_stmt  go to state 17
    while_stmt   go to state 18
    if_stmt      go to state 19
    select_stmt  go to state 20
    case_stmt    go to state 21


State 75

   33 select_stmt: SELECT CASE expr . case_stmt END SELECT
   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    CASE           shift, and go to state 8
    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    case_stmt  go to state 105


State 76

   37 case_stmt: CASE ELSE stmt .

    $default  reduce using rule 37 (case_stmt)


State 77

   35 case_stmt: CASE IS expr . stmt
   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    IDENTIFIER     shift, and go to state 1
    ACCESS         shift, and go to state 2
    CONST          shift, and go to state 3
    DIM            shift, and go to state 4
    WHILE          shift, and go to state 5
    IF             shift, and go to state 6
    SELECT         shift, and go to state 7
    CASE           shift, and go to state 8
    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    stmt         go to state 106
    decl_stmt    go to state 15
    exec_stmt    go to state 16
    assign_stmt  go to state 17
    while_stmt   go to state 18
    if_stmt      go to state 19
    select_stmt  go to state 20
    case_stmt    go to state 21


State 78

   36 case_stmt: CASE expr TO . expr stmt

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 107
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 79

   34 case_stmt: CASE expr stmt .

    $default  reduce using rule 34 (case_stmt)


State 80

    9 stmt_ends: stmt_ends END_OF_LINE .

    $default  reduce using rule 9 (stmt_ends)


State 81

   12 decl_stmt: ACCESS SUB var_name stmt . END SUB

    END  shift, and go to state 108


State 82

   19 var_name: IDENTIFIER '(' expr . ')'
   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    ')'            shift, and go to state 109
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72


State 83

   13 decl_stmt: CONST var_name AS basic_literal . '=' expr

    '='  shift, and go to state 110


State 84

   15 decl_stmt: DIM var_name AS basic_literal .
   17          | DIM var_name AS basic_literal . '=' expr

    '='  shift, and go to state 111

    $default  reduce using rule 15 (decl_stmt)


State 85

   16 decl_stmt: DIM var_name '=' expr .
   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    $default  reduce using rule 16 (decl_stmt)


State 86

   62 arguments: '(' ')' .

    $default  reduce using rule 62 (arguments)


State 87

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr
   63 expr_list: expr .

    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    $default  reduce using rule 63 (expr_list)


State 88

   61 arguments: '(' expr_list . ')'
   64 expr_list: expr_list . ',' expr

    ')'  shift, and go to state 112
    ','  shift, and go to state 113


State 89

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   48     | expr EXPONENT expr .
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    EXPONENT       [reduce using rule 48 (expr)]
    INT_DIVISION   [reduce using rule 48 (expr)]
    LESS           [reduce using rule 48 (expr)]
    MORE           [reduce using rule 48 (expr)]
    LESS_OR_EQUAL  [reduce using rule 48 (expr)]
    MORE_OR_EQUAL  [reduce using rule 48 (expr)]
    NOT_EQUAL      [reduce using rule 48 (expr)]
    CONCAT         [reduce using rule 48 (expr)]
    ASSIGN_EQUALS  [reduce using rule 48 (expr)]
    '+'            [reduce using rule 48 (expr)]
    '-'            [reduce using rule 48 (expr)]
    '*'            [reduce using rule 48 (expr)]
    '/'            [reduce using rule 48 (expr)]
    $default       reduce using rule 48 (expr)


State 90

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   49     | expr INT_DIVISION expr .
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    EXPONENT       [reduce using rule 49 (expr)]
    INT_DIVISION   [reduce using rule 49 (expr)]
    LESS           [reduce using rule 49 (expr)]
    MORE           [reduce using rule 49 (expr)]
    LESS_OR_EQUAL  [reduce using rule 49 (expr)]
    MORE_OR_EQUAL  [reduce using rule 49 (expr)]
    NOT_EQUAL      [reduce using rule 49 (expr)]
    CONCAT         [reduce using rule 49 (expr)]
    ASSIGN_EQUALS  [reduce using rule 49 (expr)]
    '+'            [reduce using rule 49 (expr)]
    '-'            [reduce using rule 49 (expr)]
    '*'            [reduce using rule 49 (expr)]
    '/'            [reduce using rule 49 (expr)]
    $default       reduce using rule 49 (expr)


State 91

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   46     | expr LESS expr .
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    EXPONENT       [reduce using rule 46 (expr)]
    INT_DIVISION   [reduce using rule 46 (expr)]
    LESS           [reduce using rule 46 (expr)]
    MORE           [reduce using rule 46 (expr)]
    LESS_OR_EQUAL  [reduce using rule 46 (expr)]
    MORE_OR_EQUAL  [reduce using rule 46 (expr)]
    NOT_EQUAL      [reduce using rule 46 (expr)]
    CONCAT         [reduce using rule 46 (expr)]
    ASSIGN_EQUALS  [reduce using rule 46 (expr)]
    '+'            [reduce using rule 46 (expr)]
    '-'            [reduce using rule 46 (expr)]
    '*'            [reduce using rule 46 (expr)]
    '/'            [reduce using rule 46 (expr)]
    $default       reduce using rule 46 (expr)


State 92

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   47     | expr MORE expr .
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    EXPONENT       [reduce using rule 47 (expr)]
    INT_DIVISION   [reduce using rule 47 (expr)]
    LESS           [reduce using rule 47 (expr)]
    MORE           [reduce using rule 47 (expr)]
    LESS_OR_EQUAL  [reduce using rule 47 (expr)]
    MORE_OR_EQUAL  [reduce using rule 47 (expr)]
    NOT_EQUAL      [reduce using rule 47 (expr)]
    CONCAT         [reduce using rule 47 (expr)]
    ASSIGN_EQUALS  [reduce using rule 47 (expr)]
    '+'            [reduce using rule 47 (expr)]
    '-'            [reduce using rule 47 (expr)]
    '*'            [reduce using rule 47 (expr)]
    '/'            [reduce using rule 47 (expr)]
    $default       reduce using rule 47 (expr)


State 93

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   51     | expr LESS_OR_EQUAL expr .
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    EXPONENT       [reduce using rule 51 (expr)]
    INT_DIVISION   [reduce using rule 51 (expr)]
    LESS           [reduce using rule 51 (expr)]
    MORE           [reduce using rule 51 (expr)]
    LESS_OR_EQUAL  [reduce using rule 51 (expr)]
    MORE_OR_EQUAL  [reduce using rule 51 (expr)]
    NOT_EQUAL      [reduce using rule 51 (expr)]
    CONCAT         [reduce using rule 51 (expr)]
    ASSIGN_EQUALS  [reduce using rule 51 (expr)]
    '+'            [reduce using rule 51 (expr)]
    '-'            [reduce using rule 51 (expr)]
    '*'            [reduce using rule 51 (expr)]
    '/'            [reduce using rule 51 (expr)]
    $default       reduce using rule 51 (expr)


State 94

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   52     | expr MORE_OR_EQUAL expr .
   53     | expr . CONCAT expr

    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    EXPONENT       [reduce using rule 52 (expr)]
    INT_DIVISION   [reduce using rule 52 (expr)]
    LESS           [reduce using rule 52 (expr)]
    MORE           [reduce using rule 52 (expr)]
    LESS_OR_EQUAL  [reduce using rule 52 (expr)]
    MORE_OR_EQUAL  [reduce using rule 52 (expr)]
    NOT_EQUAL      [reduce using rule 52 (expr)]
    CONCAT         [reduce using rule 52 (expr)]
    ASSIGN_EQUALS  [reduce using rule 52 (expr)]
    '+'            [reduce using rule 52 (expr)]
    '-'            [reduce using rule 52 (expr)]
    '*'            [reduce using rule 52 (expr)]
    '/'            [reduce using rule 52 (expr)]
    $default       reduce using rule 52 (expr)


State 95

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   50     | expr NOT_EQUAL expr .
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    EXPONENT       [reduce using rule 50 (expr)]
    INT_DIVISION   [reduce using rule 50 (expr)]
    LESS           [reduce using rule 50 (expr)]
    MORE           [reduce using rule 50 (expr)]
    LESS_OR_EQUAL  [reduce using rule 50 (expr)]
    MORE_OR_EQUAL  [reduce using rule 50 (expr)]
    NOT_EQUAL      [reduce using rule 50 (expr)]
    CONCAT         [reduce using rule 50 (expr)]
    ASSIGN_EQUALS  [reduce using rule 50 (expr)]
    '+'            [reduce using rule 50 (expr)]
    '-'            [reduce using rule 50 (expr)]
    '*'            [reduce using rule 50 (expr)]
    '/'            [reduce using rule 50 (expr)]
    $default       reduce using rule 50 (expr)


State 96

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr
   53     | expr CONCAT expr .

    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    EXPONENT       [reduce using rule 53 (expr)]
    INT_DIVISION   [reduce using rule 53 (expr)]
    LESS           [reduce using rule 53 (expr)]
    MORE           [reduce using rule 53 (expr)]
    LESS_OR_EQUAL  [reduce using rule 53 (expr)]
    MORE_OR_EQUAL  [reduce using rule 53 (expr)]
    NOT_EQUAL      [reduce using rule 53 (expr)]
    CONCAT         [reduce using rule 53 (expr)]
    ASSIGN_EQUALS  [reduce using rule 53 (expr)]
    '+'            [reduce using rule 53 (expr)]
    '-'            [reduce using rule 53 (expr)]
    '*'            [reduce using rule 53 (expr)]
    '/'            [reduce using rule 53 (expr)]
    $default       reduce using rule 53 (expr)


State 97

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   45     | expr ASSIGN_EQUALS expr .
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    EXPONENT       [reduce using rule 45 (expr)]
    INT_DIVISION   [reduce using rule 45 (expr)]
    LESS           [reduce using rule 45 (expr)]
    MORE           [reduce using rule 45 (expr)]
    LESS_OR_EQUAL  [reduce using rule 45 (expr)]
    MORE_OR_EQUAL  [reduce using rule 45 (expr)]
    NOT_EQUAL      [reduce using rule 45 (expr)]
    CONCAT         [reduce using rule 45 (expr)]
    ASSIGN_EQUALS  [reduce using rule 45 (expr)]
    '+'            [reduce using rule 45 (expr)]
    '-'            [reduce using rule 45 (expr)]
    '*'            [reduce using rule 45 (expr)]
    '/'            [reduce using rule 45 (expr)]
    $default       reduce using rule 45 (expr)


State 98

   39 expr: expr . '+' expr
   39     | expr '+' expr .
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    EXPONENT       [reduce using rule 39 (expr)]
    INT_DIVISION   [reduce using rule 39 (expr)]
    LESS           [reduce using rule 39 (expr)]
    MORE           [reduce using rule 39 (expr)]
    LESS_OR_EQUAL  [reduce using rule 39 (expr)]
    MORE_OR_EQUAL  [reduce using rule 39 (expr)]
    NOT_EQUAL      [reduce using rule 39 (expr)]
    CONCAT         [reduce using rule 39 (expr)]
    ASSIGN_EQUALS  [reduce using rule 39 (expr)]
    '+'            [reduce using rule 39 (expr)]
    '-'            [reduce using rule 39 (expr)]
    '*'            [reduce using rule 39 (expr)]
    '/'            [reduce using rule 39 (expr)]
    $default       reduce using rule 39 (expr)


State 99

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   40     | expr '-' expr .
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    EXPONENT       [reduce using rule 40 (expr)]
    INT_DIVISION   [reduce using rule 40 (expr)]
    LESS           [reduce using rule 40 (expr)]
    MORE           [reduce using rule 40 (expr)]
    LESS_OR_EQUAL  [reduce using rule 40 (expr)]
    MORE_OR_EQUAL  [reduce using rule 40 (expr)]
    NOT_EQUAL      [reduce using rule 40 (expr)]
    CONCAT         [reduce using rule 40 (expr)]
    ASSIGN_EQUALS  [reduce using rule 40 (expr)]
    '+'            [reduce using rule 40 (expr)]
    '-'            [reduce using rule 40 (expr)]
    '*'            [reduce using rule 40 (expr)]
    '/'            [reduce using rule 40 (expr)]
    $default       reduce using rule 40 (expr)


State 100

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   43     | expr '*' expr .
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    EXPONENT       [reduce using rule 43 (expr)]
    INT_DIVISION   [reduce using rule 43 (expr)]
    LESS           [reduce using rule 43 (expr)]
    MORE           [reduce using rule 43 (expr)]
    LESS_OR_EQUAL  [reduce using rule 43 (expr)]
    MORE_OR_EQUAL  [reduce using rule 43 (expr)]
    NOT_EQUAL      [reduce using rule 43 (expr)]
    CONCAT         [reduce using rule 43 (expr)]
    ASSIGN_EQUALS  [reduce using rule 43 (expr)]
    '+'            [reduce using rule 43 (expr)]
    '-'            [reduce using rule 43 (expr)]
    '*'            [reduce using rule 43 (expr)]
    '/'            [reduce using rule 43 (expr)]
    $default       reduce using rule 43 (expr)


State 101

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   44     | expr '/' expr .
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    EXPONENT       [reduce using rule 44 (expr)]
    INT_DIVISION   [reduce using rule 44 (expr)]
    LESS           [reduce using rule 44 (expr)]
    MORE           [reduce using rule 44 (expr)]
    LESS_OR_EQUAL  [reduce using rule 44 (expr)]
    MORE_OR_EQUAL  [reduce using rule 44 (expr)]
    NOT_EQUAL      [reduce using rule 44 (expr)]
    CONCAT         [reduce using rule 44 (expr)]
    ASSIGN_EQUALS  [reduce using rule 44 (expr)]
    '+'            [reduce using rule 44 (expr)]
    '-'            [reduce using rule 44 (expr)]
    '*'            [reduce using rule 44 (expr)]
    '/'            [reduce using rule 44 (expr)]
    $default       reduce using rule 44 (expr)


State 102

   27 while_stmt: WHILE expr stmt_ends stmt . END WHILE

    END  shift, and go to state 114


State 103

    9 stmt_ends: stmt_ends . END_OF_LINE
   29 if_stmt: IF expr THEN stmt_ends . stmt ELSE stmt END IF
   30        | IF expr THEN stmt_ends . stmt elseif_list ELSE stmt END IF

    IDENTIFIER   shift, and go to state 1
    ACCESS       shift, and go to state 2
    CONST        shift, and go to state 3
    DIM          shift, and go to state 4
    WHILE        shift, and go to state 5
    IF           shift, and go to state 6
    SELECT       shift, and go to state 7
    CASE         shift, and go to state 8
    END_OF_LINE  shift, and go to state 80

    stmt         go to state 115
    decl_stmt    go to state 15
    exec_stmt    go to state 16
    assign_stmt  go to state 17
    while_stmt   go to state 18
    if_stmt      go to state 19
    select_stmt  go to state 20
    case_stmt    go to state 21


State 104

   28 if_stmt: IF expr THEN stmt .

    $default  reduce using rule 28 (if_stmt)


State 105

   33 select_stmt: SELECT CASE expr case_stmt . END SELECT

    END  shift, and go to state 116


State 106

   35 case_stmt: CASE IS expr stmt .

    $default  reduce using rule 35 (case_stmt)


State 107

   36 case_stmt: CASE expr TO expr . stmt
   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    IDENTIFIER     shift, and go to state 1
    ACCESS         shift, and go to state 2
    CONST          shift, and go to state 3
    DIM            shift, and go to state 4
    WHILE          shift, and go to state 5
    IF             shift, and go to state 6
    SELECT         shift, and go to state 7
    CASE           shift, and go to state 8
    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    stmt         go to state 117
    decl_stmt    go to state 15
    exec_stmt    go to state 16
    assign_stmt  go to state 17
    while_stmt   go to state 18
    if_stmt      go to state 19
    select_stmt  go to state 20
    case_stmt    go to state 21


State 108

   12 decl_stmt: ACCESS SUB var_name stmt END . SUB

    SUB  shift, and go to state 118


State 109

   19 var_name: IDENTIFIER '(' expr ')' .

    $default  reduce using rule 19 (var_name)


State 110

   13 decl_stmt: CONST var_name AS basic_literal '=' . expr

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 119
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 111

   17 decl_stmt: DIM var_name AS basic_literal '=' . expr

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 120
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 112

   61 arguments: '(' expr_list ')' .

    $default  reduce using rule 61 (arguments)


State 113

   64 expr_list: expr_list ',' . expr

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 121
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 114

   27 while_stmt: WHILE expr stmt_ends stmt END . WHILE

    WHILE  shift, and go to state 122


State 115

   29 if_stmt: IF expr THEN stmt_ends stmt . ELSE stmt END IF
   30        | IF expr THEN stmt_ends stmt . elseif_list ELSE stmt END IF

    ELSE    shift, and go to state 123
    ELSEIF  shift, and go to state 124

    elseif_list  go to state 125


State 116

   33 select_stmt: SELECT CASE expr case_stmt END . SELECT

    SELECT  shift, and go to state 126


State 117

   36 case_stmt: CASE expr TO expr stmt .

    $default  reduce using rule 36 (case_stmt)


State 118

   12 decl_stmt: ACCESS SUB var_name stmt END SUB .

    $default  reduce using rule 12 (decl_stmt)


State 119

   13 decl_stmt: CONST var_name AS basic_literal '=' expr .
   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    $default  reduce using rule 13 (decl_stmt)


State 120

   17 decl_stmt: DIM var_name AS basic_literal '=' expr .
   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    $default  reduce using rule 17 (decl_stmt)


State 121

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr
   64 expr_list: expr_list ',' expr .

    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72

    $default  reduce using rule 64 (expr_list)


State 122

   27 while_stmt: WHILE expr stmt_ends stmt END WHILE .

    $default  reduce using rule 27 (while_stmt)


State 123

   29 if_stmt: IF expr THEN stmt_ends stmt ELSE . stmt END IF

    IDENTIFIER  shift, and go to state 1
    ACCESS      shift, and go to state 2
    CONST       shift, and go to state 3
    DIM         shift, and go to state 4
    WHILE       shift, and go to state 5
    IF          shift, and go to state 6
    SELECT      shift, and go to state 7
    CASE        shift, and go to state 8

    stmt         go to state 127
    decl_stmt    go to state 15
    exec_stmt    go to state 16
    assign_stmt  go to state 17
    while_stmt   go to state 18
    if_stmt      go to state 19
    select_stmt  go to state 20
    case_stmt    go to state 21


State 124

   31 elseif_list: ELSEIF . expr THEN stmt

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 128
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 125

   30 if_stmt: IF expr THEN stmt_ends stmt elseif_list . ELSE stmt END IF
   32 elseif_list: elseif_list . ELSEIF expr THEN stmt

    ELSE    shift, and go to state 129
    ELSEIF  shift, and go to state 130


State 126

   33 select_stmt: SELECT CASE expr case_stmt END SELECT .

    $default  reduce using rule 33 (select_stmt)


State 127

   29 if_stmt: IF expr THEN stmt_ends stmt ELSE stmt . END IF

    END  shift, and go to state 131


State 128

   31 elseif_list: ELSEIF expr . THEN stmt
   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    THEN           shift, and go to state 132
    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72


State 129

   30 if_stmt: IF expr THEN stmt_ends stmt elseif_list ELSE . stmt END IF

    IDENTIFIER  shift, and go to state 1
    ACCESS      shift, and go to state 2
    CONST       shift, and go to state 3
    DIM         shift, and go to state 4
    WHILE       shift, and go to state 5
    IF          shift, and go to state 6
    SELECT      shift, and go to state 7
    CASE        shift, and go to state 8

    stmt         go to state 133
    decl_stmt    go to state 15
    exec_stmt    go to state 16
    assign_stmt  go to state 17
    while_stmt   go to state 18
    if_stmt      go to state 19
    select_stmt  go to state 20
    case_stmt    go to state 21


State 130

   32 elseif_list: elseif_list ELSEIF . expr THEN stmt

    INT         shift, and go to state 27
    DOUBLE      shift, and go to state 28
    STRING      shift, and go to state 29
    BOOLEAN     shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    '+'         shift, and go to state 32
    '-'         shift, and go to state 33

    expr              go to state 134
    operand           go to state 35
    basic_literal     go to state 36
    function_literal  go to state 37


State 131

   29 if_stmt: IF expr THEN stmt_ends stmt ELSE stmt END . IF

    IF  shift, and go to state 135


State 132

   31 elseif_list: ELSEIF expr THEN . stmt

    IDENTIFIER  shift, and go to state 1
    ACCESS      shift, and go to state 2
    CONST       shift, and go to state 3
    DIM         shift, and go to state 4
    WHILE       shift, and go to state 5
    IF          shift, and go to state 6
    SELECT      shift, and go to state 7
    CASE        shift, and go to state 8

    stmt         go to state 136
    decl_stmt    go to state 15
    exec_stmt    go to state 16
    assign_stmt  go to state 17
    while_stmt   go to state 18
    if_stmt      go to state 19
    select_stmt  go to state 20
    case_stmt    go to state 21


State 133

   30 if_stmt: IF expr THEN stmt_ends stmt elseif_list ELSE stmt . END IF

    END  shift, and go to state 137


State 134

   32 elseif_list: elseif_list ELSEIF expr . THEN stmt
   39 expr: expr . '+' expr
   40     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . ASSIGN_EQUALS expr
   46     | expr . LESS expr
   47     | expr . MORE expr
   48     | expr . EXPONENT expr
   49     | expr . INT_DIVISION expr
   50     | expr . NOT_EQUAL expr
   51     | expr . LESS_OR_EQUAL expr
   52     | expr . MORE_OR_EQUAL expr
   53     | expr . CONCAT expr

    THEN           shift, and go to state 138
    EXPONENT       shift, and go to state 60
    INT_DIVISION   shift, and go to state 61
    LESS           shift, and go to state 62
    MORE           shift, and go to state 63
    LESS_OR_EQUAL  shift, and go to state 64
    MORE_OR_EQUAL  shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    CONCAT         shift, and go to state 67
    ASSIGN_EQUALS  shift, and go to state 68
    '+'            shift, and go to state 69
    '-'            shift, and go to state 70
    '*'            shift, and go to state 71
    '/'            shift, and go to state 72


State 135

   29 if_stmt: IF expr THEN stmt_ends stmt ELSE stmt END IF .

    $default  reduce using rule 29 (if_stmt)


State 136

   31 elseif_list: ELSEIF expr THEN stmt .

    $default  reduce using rule 31 (elseif_list)


State 137

   30 if_stmt: IF expr THEN stmt_ends stmt elseif_list ELSE stmt END . IF

    IF  shift, and go to state 139


State 138

   32 elseif_list: elseif_list ELSEIF expr THEN . stmt

    IDENTIFIER  shift, and go to state 1
    ACCESS      shift, and go to state 2
    CONST       shift, and go to state 3
    DIM         shift, and go to state 4
    WHILE       shift, and go to state 5
    IF          shift, and go to state 6
    SELECT      shift, and go to state 7
    CASE        shift, and go to state 8

    stmt         go to state 140
    decl_stmt    go to state 15
    exec_stmt    go to state 16
    assign_stmt  go to state 17
    while_stmt   go to state 18
    if_stmt      go to state 19
    select_stmt  go to state 20
    case_stmt    go to state 21


State 139

   30 if_stmt: IF expr THEN stmt_ends stmt elseif_list ELSE stmt END IF .

    $default  reduce using rule 30 (if_stmt)


State 140

   32 elseif_list: elseif_list ELSEIF expr THEN stmt .

    $default  reduce using rule 32 (elseif_list)
