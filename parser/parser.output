Terminals unused in grammar

    ENDL
    OF
    ASSIGN_CONSTRUCT
    ASSIGN_MULT
    ASSIGN_ORD_DIV
    ASSIGN_INT_DIV
    ASSIGN_ADD
    ASSIGN_SUB
    ASSIGN_LSHIFT
    ASSIGN_RSHIFT
    ASSIGN_CONCAT


Grammar

    0 $accept: root $end

    1 root: program_items_list

    2 program_items_list: %empty
    3                   | program_items_list_not_empty

    4 program_items_list_not_empty: program_item
    5                             | program_items_list_not_empty program_item

    6 program_item: module
    7             | IMPORTS IDENTIFIER stmt_ends

    8 module: MODULE IDENTIFIER stmt_ends END MODULE
    9       | MODULE IDENTIFIER stmt_ends functions_and_sub_list END MODULE
   10       | access MODULE IDENTIFIER stmt_ends END MODULE
   11       | access MODULE IDENTIFIER stmt_ends functions_and_sub_list END MODULE

   12 functions_and_sub_list: function_or_sub
   13                       | functions_and_sub_list stmt_ends function_or_sub

   14 function_or_sub: function
   15                | sub_bloc

   16 function: FUNCTION IDENTIFIER arguments stmt_ends END FUNCTION
   17         | FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION
   18         | FUNCTION IDENTIFIER arguments stmt_ends stmt_list END FUNCTION
   19         | FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION
   20         | access FUNCTION IDENTIFIER arguments stmt_ends END FUNCTION
   21         | access FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION
   22         | access FUNCTION IDENTIFIER arguments stmt_ends stmt_list END FUNCTION
   23         | access FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION

   24 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB
   25         | SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB
   26         | access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB
   27         | access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

   28 parameterlist_or_empty: %empty
   29                       | parameterlist_with_type
   30                       | END_OF_LINE parameterlist_with_type END_OF_LINE
   31                       | END_OF_LINE parameterlist_with_type
   32                       | parameterlist_with_type END_OF_LINE
   33                       | parameterlist_without_type
   34                       | END_OF_LINE parameterlist_without_type END_OF_LINE
   35                       | parameterlist_without_type END_OF_LINE
   36                       | END_OF_LINE parameterlist_without_type

   37 parameterlist_with_type: parameter_with_type
   38                        | parameterlist_with_type ',' parameter_with_type
   39                        | parameterlist_with_type ',' END_OF_LINE parameter_with_type

   40 parameterlist_without_type: parameter_without_type
   41                           | parameterlist_without_type ',' parameter_without_type
   42                           | parameterlist_without_type ',' END_OF_LINE parameter_without_type

   43 parameter_with_type: IDENTIFIER AS basic_literal
   44                    | IDENTIFIER AS basic_literal '(' ')'

   45 parameter_without_type: IDENTIFIER

   46 stmt_list: stmt
   47          | stmt_list stmt

   48 stmt: multi_line_stmt
   49     | single_line_stmt stmt_ends

   50 single_line_stmt: if_stmt_single_line
   51                 | decl_stmt_single_line
   52                 | function_call_singleline
   53                 | assign_stmt_singleline

   54 multi_line_stmt: decl_stmt stmt_ends
   55                | assign_stmt_multiline stmt_ends
   56                | while_stmt stmt_ends
   57                | do_loop_stmt
   58                | for_loop_stmt
   59                | for_each_loop_stmt
   60                | select_stmt stmt_ends
   61                | if_stmt_multi_line stmt_ends
   62                | function_call_multiline

   63 stmt_ends: END_OF_LINE
   64          | stmt_ends END_OF_LINE

   65 decl_stmt: CONST var_name AS basic_literal '=' END_OF_LINE expr
   66          | DIM var_name AS basic_literal '=' END_OF_LINE expr
   67          | DIM var_name '=' END_OF_LINE expr

   68 decl_stmt_single_line: access SUB var_name stmt_list END SUB
   69                      | CONST var_name AS basic_literal '=' expr
   70                      | DIM var_name AS basic_literal '=' expr
   71                      | DIM var_name AS basic_literal
   72                      | DIM var_name '=' expr
   73                      | DIM var_name

   74 var_name: IDENTIFIER '(' expr ')'
   75         | IDENTIFIER

   76 access: PUBLIC
   77       | PROTECTED
   78       | FRIEND
   79       | PRIVATE
   80       | PROTECTED FRIEND
   81       | PRIVATE FRIEND

   82 assign_stmt_singleline: IDENTIFIER '=' expr
   83                       | IDENTIFIER '=' IDENTIFIER
   84                       | IDENTIFIER '=' function_call_singleline

   85 assign_stmt_multiline: IDENTIFIER '=' function_call_multiline

   86 while_stmt: WHILE expr stmt_ends stmt_list END WHILE

   87 do_loop_stmt: DO do_loop_condition stmt_ends stmt_list LOOP
   88             | DO stmt_ends stmt_list LOOP do_loop_condition

   89 do_loop_condition: UNTIL expr
   90                  | WHILE expr

   91 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal stmt_ends stmt_list NEXT
   92              | FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal STEP basic_literal stmt_ends stmt_list NEXT

   93 for_each_loop_stmt: FOR EACH IDENTIFIER AS basic_literal IN IDENTIFIER stmt_ends stmt_list NEXT

   94 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list END IF
   95                   | IF expr THEN stmt_ends stmt_list ELSE stmt_list END IF
   96                   | IF expr THEN stmt_ends stmt_list elseif_list END IF
   97                   | IF expr THEN stmt_ends stmt_list elseif_list ELSE stmt_list END IF

   98 elseif_list: ELSEIF expr THEN stmt_list
   99            | elseif_list ELSEIF expr THEN stmt_list

  100 if_stmt_single_line: IF expr THEN single_line_stmt
  101                    | IF expr THEN single_line_stmt ELSE single_line_stmt

  102 select_stmt: SELECT CASE expr stmt_ends case_list END SELECT

  103 case_list: case_stmt
  104          | case_list case_stmt

  105 case_stmt: CASE expr stmt_ends stmt_list
  106          | CASE IS expr stmt_ends stmt_list
  107          | CASE expr TO expr stmt_ends stmt_list
  108          | CASE ELSE stmt_ends stmt_list

  109 function_call_multiline: IDENTIFIER arguments_multiline

  110 function_call_singleline: IDENTIFIER arguments_singleline

  111 expr: basic_literal
  112     | '-' expr
  113     | '+' expr
  114     | expr '+' expr
  115     | expr '-' expr
  116     | expr '*' expr
  117     | expr '/' expr
  118     | expr INT_DIV expr
  119     | expr '=' expr
  120     | expr '<' expr
  121     | expr '>' expr
  122     | expr '^' expr
  123     | expr NOT_EQUAL expr
  124     | expr LESS_OR_EQUAL expr
  125     | expr MORE_OR_EQUAL expr
  126     | expr '&' expr

  127 basic_literal: INT
  128              | STRING
  129              | BOOLEAN
  130              | DOUBLE

  131 arguments_multiline: '(' END_OF_LINE expr_list ')'
  132                    | '(' END_OF_LINE expr_list END_OF_LINE ')'
  133                    | '(' expr_list END_OF_LINE ')'

  134 arguments_singleline: '(' expr_list ')'
  135                     | '(' ')'

  136 arguments: arguments_multiline
  137          | arguments_singleline

  138 expr_list: expr
  139          | expr_list ',' expr


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 126
    '(' (40) 24 25 26 27 44 74 131 132 133 134 135
    ')' (41) 24 25 26 27 44 74 131 132 133 134 135
    '*' (42) 116
    '+' (43) 113 114
    ',' (44) 38 39 41 42 139
    '-' (45) 112 115
    '/' (47) 117
    '<' (60) 120
    '=' (61) 65 66 67 69 70 72 82 83 84 85 91 92 119
    '>' (62) 121
    '^' (94) 122
    error (256)
    INT <int_val> (258) 127
    DOUBLE <double_val> (259) 130
    STRING <str_val> (260) 128
    BOOLEAN <bool_val> (261) 129
    IDENTIFIER <id_name> (262) 7 8 9 10 11 16 17 18 19 20 21 22 23 24 25 26 27 43 44 45 74 75 82 83 84 85 91 92 93 109 110
    ENDL (263)
    SUB (264) 24 25 26 27 68
    END (265) 8 9 10 11 16 17 18 19 20 21 22 23 24 25 26 27 68 86 94 95 96 97 102
    CONST (266) 65 69
    DIM (267) 66 67 70 71 72 73
    AS (268) 43 44 65 66 69 70 71 91 92 93
    WHILE (269) 86 90
    IF (270) 94 95 96 97 100 101
    ELSEIF (271) 98 99
    SELECT (272) 102
    CASE (273) 102 105 106 107 108
    IS (274) 106
    TO (275) 91 92 107
    IMPORTS (276) 7
    MODULE (277) 8 9 10 11
    FUNCTION (278) 16 17 18 19 20 21 22 23
    RETURN (279) 17 19 21 23
    DO (280) 87 88
    LOOP (281) 87 88
    UNTIL (282) 89
    FOR (283) 91 92 93
    NEXT (284) 91 92 93
    STEP (285) 92
    OF (286)
    IN (287) 93
    EACH (288) 93
    END_OF_LINE (289) 30 31 32 34 35 36 39 42 63 64 65 66 67 131 132 133
    UNARY_MINUS (290)
    UNARY_PLUS (291)
    ASSIGN_CONSTRUCT (292)
    ASSIGN_MULT (293)
    ASSIGN_ORD_DIV (294)
    ASSIGN_INT_DIV (295)
    ASSIGN_ADD (296)
    ASSIGN_SUB (297)
    ASSIGN_LSHIFT (298)
    ASSIGN_RSHIFT (299)
    ASSIGN_CONCAT (300)
    PRIVATE (301) 79 81
    PROTECTED (302) 77 80
    PUBLIC (303) 76
    FRIEND (304) 78 80 81
    INT_DIV (305) 118
    NOT_EQUAL (306) 123
    LESS_OR_EQUAL (307) 124
    MORE_OR_EQUAL (308) 125
    THEN (309) 94 95 96 97 98 99 100 101
    ELSE (310) 95 97 101 108


Nonterminals, with rules where they appear

    $accept (68)
        on left: 0
    root (69)
        on left: 1
        on right: 0
    program_items_list (70)
        on left: 2 3
        on right: 1
    program_items_list_not_empty (71)
        on left: 4 5
        on right: 3 5
    program_item (72)
        on left: 6 7
        on right: 4 5
    module (73)
        on left: 8 9 10 11
        on right: 6
    functions_and_sub_list (74)
        on left: 12 13
        on right: 9 11 13
    function_or_sub (75)
        on left: 14 15
        on right: 12 13
    function (76)
        on left: 16 17 18 19 20 21 22 23
        on right: 14
    sub_bloc (77)
        on left: 24 25 26 27
        on right: 15
    parameterlist_or_empty (78)
        on left: 28 29 30 31 32 33 34 35 36
        on right: 24 25 26 27
    parameterlist_with_type (79)
        on left: 37 38 39
        on right: 29 30 31 32 38 39
    parameterlist_without_type (80)
        on left: 40 41 42
        on right: 33 34 35 36 41 42
    parameter_with_type (81)
        on left: 43 44
        on right: 37 38 39
    parameter_without_type (82)
        on left: 45
        on right: 40 41 42
    stmt_list (83)
        on left: 46 47
        on right: 18 19 22 23 25 27 47 68 86 87 88 91 92 93 94 95 96 97 98 99 105 106 107 108
    stmt (84)
        on left: 48 49
        on right: 46 47
    single_line_stmt (85)
        on left: 50 51 52 53
        on right: 49 100 101
    multi_line_stmt (86)
        on left: 54 55 56 57 58 59 60 61 62
        on right: 48
    stmt_ends (87)
        on left: 63 64
        on right: 7 8 9 10 11 13 16 17 18 19 20 21 22 23 24 25 26 27 49 54 55 56 60 61 64 86 87 88 91 92 93 94 95 96 97 102 105 106 107 108
    decl_stmt (88)
        on left: 65 66 67
        on right: 54
    decl_stmt_single_line (89)
        on left: 68 69 70 71 72 73
        on right: 51
    var_name (90)
        on left: 74 75
        on right: 65 66 67 68 69 70 71 72 73
    access (91)
        on left: 76 77 78 79 80 81
        on right: 10 11 20 21 22 23 26 27 68
    assign_stmt_singleline (92)
        on left: 82 83 84
        on right: 53
    assign_stmt_multiline (93)
        on left: 85
        on right: 55
    while_stmt (94)
        on left: 86
        on right: 56
    do_loop_stmt (95)
        on left: 87 88
        on right: 57
    do_loop_condition (96)
        on left: 89 90
        on right: 87 88
    for_loop_stmt (97)
        on left: 91 92
        on right: 58
    for_each_loop_stmt (98)
        on left: 93
        on right: 59
    if_stmt_multi_line (99)
        on left: 94 95 96 97
        on right: 61
    elseif_list (100)
        on left: 98 99
        on right: 96 97 99
    if_stmt_single_line (101)
        on left: 100 101
        on right: 50
    select_stmt (102)
        on left: 102
        on right: 60
    case_list (103)
        on left: 103 104
        on right: 102 104
    case_stmt (104)
        on left: 105 106 107 108
        on right: 103 104
    function_call_multiline (105)
        on left: 109
        on right: 62 85
    function_call_singleline (106)
        on left: 110
        on right: 52 84
    expr (107)
        on left: 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126
        on right: 17 19 21 23 65 66 67 69 70 72 74 82 86 89 90 94 95 96 97 98 99 100 101 102 105 106 107 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 138 139
    basic_literal (108)
        on left: 127 128 129 130
        on right: 43 44 65 66 69 70 71 91 92 93 111
    arguments_multiline (109)
        on left: 131 132 133
        on right: 109 136
    arguments_singleline (110)
        on left: 134 135
        on right: 110 137
    arguments (111)
        on left: 136 137
        on right: 16 17 18 19 20 21 22 23
    expr_list (112)
        on left: 138 139
        on right: 131 132 133 134 139


State 0

    0 $accept: . root $end

    IMPORTS    shift, and go to state 1
    MODULE     shift, and go to state 2
    PRIVATE    shift, and go to state 3
    PROTECTED  shift, and go to state 4
    PUBLIC     shift, and go to state 5
    FRIEND     shift, and go to state 6

    $default  reduce using rule 2 (program_items_list)

    root                          go to state 7
    program_items_list            go to state 8
    program_items_list_not_empty  go to state 9
    program_item                  go to state 10
    module                        go to state 11
    access                        go to state 12


State 1

    7 program_item: IMPORTS . IDENTIFIER stmt_ends

    IDENTIFIER  shift, and go to state 13


State 2

    8 module: MODULE . IDENTIFIER stmt_ends END MODULE
    9       | MODULE . IDENTIFIER stmt_ends functions_and_sub_list END MODULE

    IDENTIFIER  shift, and go to state 14


State 3

   79 access: PRIVATE .
   81       | PRIVATE . FRIEND

    FRIEND  shift, and go to state 15

    $default  reduce using rule 79 (access)


State 4

   77 access: PROTECTED .
   80       | PROTECTED . FRIEND

    FRIEND  shift, and go to state 16

    $default  reduce using rule 77 (access)


State 5

   76 access: PUBLIC .

    $default  reduce using rule 76 (access)


State 6

   78 access: FRIEND .

    $default  reduce using rule 78 (access)


State 7

    0 $accept: root . $end

    $end  shift, and go to state 17


State 8

    1 root: program_items_list .

    $default  reduce using rule 1 (root)


State 9

    3 program_items_list: program_items_list_not_empty .
    5 program_items_list_not_empty: program_items_list_not_empty . program_item

    IMPORTS    shift, and go to state 1
    MODULE     shift, and go to state 2
    PRIVATE    shift, and go to state 3
    PROTECTED  shift, and go to state 4
    PUBLIC     shift, and go to state 5
    FRIEND     shift, and go to state 6

    $default  reduce using rule 3 (program_items_list)

    program_item  go to state 18
    module        go to state 11
    access        go to state 12


State 10

    4 program_items_list_not_empty: program_item .

    $default  reduce using rule 4 (program_items_list_not_empty)


State 11

    6 program_item: module .

    $default  reduce using rule 6 (program_item)


State 12

   10 module: access . MODULE IDENTIFIER stmt_ends END MODULE
   11       | access . MODULE IDENTIFIER stmt_ends functions_and_sub_list END MODULE

    MODULE  shift, and go to state 19


State 13

    7 program_item: IMPORTS IDENTIFIER . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 21


State 14

    8 module: MODULE IDENTIFIER . stmt_ends END MODULE
    9       | MODULE IDENTIFIER . stmt_ends functions_and_sub_list END MODULE

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 22


State 15

   81 access: PRIVATE FRIEND .

    $default  reduce using rule 81 (access)


State 16

   80 access: PROTECTED FRIEND .

    $default  reduce using rule 80 (access)


State 17

    0 $accept: root $end .

    $default  accept


State 18

    5 program_items_list_not_empty: program_items_list_not_empty program_item .

    $default  reduce using rule 5 (program_items_list_not_empty)


State 19

   10 module: access MODULE . IDENTIFIER stmt_ends END MODULE
   11       | access MODULE . IDENTIFIER stmt_ends functions_and_sub_list END MODULE

    IDENTIFIER  shift, and go to state 23


State 20

   63 stmt_ends: END_OF_LINE .

    $default  reduce using rule 63 (stmt_ends)


State 21

    7 program_item: IMPORTS IDENTIFIER stmt_ends .
   64 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 7 (program_item)


State 22

    8 module: MODULE IDENTIFIER stmt_ends . END MODULE
    9       | MODULE IDENTIFIER stmt_ends . functions_and_sub_list END MODULE
   64 stmt_ends: stmt_ends . END_OF_LINE

    SUB          shift, and go to state 25
    END          shift, and go to state 26
    FUNCTION     shift, and go to state 27
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    functions_and_sub_list  go to state 28
    function_or_sub         go to state 29
    function                go to state 30
    sub_bloc                go to state 31
    access                  go to state 32


State 23

   10 module: access MODULE IDENTIFIER . stmt_ends END MODULE
   11       | access MODULE IDENTIFIER . stmt_ends functions_and_sub_list END MODULE

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 33


State 24

   64 stmt_ends: stmt_ends END_OF_LINE .

    $default  reduce using rule 64 (stmt_ends)


State 25

   24 sub_bloc: SUB . IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB
   25         | SUB . IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    IDENTIFIER  shift, and go to state 34


State 26

    8 module: MODULE IDENTIFIER stmt_ends END . MODULE

    MODULE  shift, and go to state 35


State 27

   16 function: FUNCTION . IDENTIFIER arguments stmt_ends END FUNCTION
   17         | FUNCTION . IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION
   18         | FUNCTION . IDENTIFIER arguments stmt_ends stmt_list END FUNCTION
   19         | FUNCTION . IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION

    IDENTIFIER  shift, and go to state 36


State 28

    9 module: MODULE IDENTIFIER stmt_ends functions_and_sub_list . END MODULE
   13 functions_and_sub_list: functions_and_sub_list . stmt_ends function_or_sub

    END          shift, and go to state 37
    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 38


State 29

   12 functions_and_sub_list: function_or_sub .

    $default  reduce using rule 12 (functions_and_sub_list)


State 30

   14 function_or_sub: function .

    $default  reduce using rule 14 (function_or_sub)


State 31

   15 function_or_sub: sub_bloc .

    $default  reduce using rule 15 (function_or_sub)


State 32

   20 function: access . FUNCTION IDENTIFIER arguments stmt_ends END FUNCTION
   21         | access . FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION
   22         | access . FUNCTION IDENTIFIER arguments stmt_ends stmt_list END FUNCTION
   23         | access . FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION
   26 sub_bloc: access . SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB
   27         | access . SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    SUB       shift, and go to state 39
    FUNCTION  shift, and go to state 40


State 33

   10 module: access MODULE IDENTIFIER stmt_ends . END MODULE
   11       | access MODULE IDENTIFIER stmt_ends . functions_and_sub_list END MODULE
   64 stmt_ends: stmt_ends . END_OF_LINE

    SUB          shift, and go to state 25
    END          shift, and go to state 41
    FUNCTION     shift, and go to state 27
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    functions_and_sub_list  go to state 42
    function_or_sub         go to state 29
    function                go to state 30
    sub_bloc                go to state 31
    access                  go to state 32


State 34

   24 sub_bloc: SUB IDENTIFIER . '(' parameterlist_or_empty ')' stmt_ends END SUB
   25         | SUB IDENTIFIER . '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    '('  shift, and go to state 43


State 35

    8 module: MODULE IDENTIFIER stmt_ends END MODULE .

    $default  reduce using rule 8 (module)


State 36

   16 function: FUNCTION IDENTIFIER . arguments stmt_ends END FUNCTION
   17         | FUNCTION IDENTIFIER . arguments stmt_ends RETURN expr END FUNCTION
   18         | FUNCTION IDENTIFIER . arguments stmt_ends stmt_list END FUNCTION
   19         | FUNCTION IDENTIFIER . arguments stmt_ends stmt_list RETURN expr END FUNCTION

    '('  shift, and go to state 44

    arguments_multiline   go to state 45
    arguments_singleline  go to state 46
    arguments             go to state 47


State 37

    9 module: MODULE IDENTIFIER stmt_ends functions_and_sub_list END . MODULE

    MODULE  shift, and go to state 48


State 38

   13 functions_and_sub_list: functions_and_sub_list stmt_ends . function_or_sub
   64 stmt_ends: stmt_ends . END_OF_LINE

    SUB          shift, and go to state 25
    FUNCTION     shift, and go to state 27
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    function_or_sub  go to state 49
    function         go to state 30
    sub_bloc         go to state 31
    access           go to state 32


State 39

   26 sub_bloc: access SUB . IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB
   27         | access SUB . IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    IDENTIFIER  shift, and go to state 50


State 40

   20 function: access FUNCTION . IDENTIFIER arguments stmt_ends END FUNCTION
   21         | access FUNCTION . IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION
   22         | access FUNCTION . IDENTIFIER arguments stmt_ends stmt_list END FUNCTION
   23         | access FUNCTION . IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION

    IDENTIFIER  shift, and go to state 51


State 41

   10 module: access MODULE IDENTIFIER stmt_ends END . MODULE

    MODULE  shift, and go to state 52


State 42

   11 module: access MODULE IDENTIFIER stmt_ends functions_and_sub_list . END MODULE
   13 functions_and_sub_list: functions_and_sub_list . stmt_ends function_or_sub

    END          shift, and go to state 53
    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 38


State 43

   24 sub_bloc: SUB IDENTIFIER '(' . parameterlist_or_empty ')' stmt_ends END SUB
   25         | SUB IDENTIFIER '(' . parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    IDENTIFIER   shift, and go to state 54
    END_OF_LINE  shift, and go to state 55

    $default  reduce using rule 28 (parameterlist_or_empty)

    parameterlist_or_empty      go to state 56
    parameterlist_with_type     go to state 57
    parameterlist_without_type  go to state 58
    parameter_with_type         go to state 59
    parameter_without_type      go to state 60


State 44

  131 arguments_multiline: '(' . END_OF_LINE expr_list ')'
  132                    | '(' . END_OF_LINE expr_list END_OF_LINE ')'
  133                    | '(' . expr_list END_OF_LINE ')'
  134 arguments_singleline: '(' . expr_list ')'
  135                     | '(' . ')'

    INT          shift, and go to state 61
    DOUBLE       shift, and go to state 62
    STRING       shift, and go to state 63
    BOOLEAN      shift, and go to state 64
    END_OF_LINE  shift, and go to state 65
    '+'          shift, and go to state 66
    '-'          shift, and go to state 67
    ')'          shift, and go to state 68

    expr           go to state 69
    basic_literal  go to state 70
    expr_list      go to state 71


State 45

  136 arguments: arguments_multiline .

    $default  reduce using rule 136 (arguments)


State 46

  137 arguments: arguments_singleline .

    $default  reduce using rule 137 (arguments)


State 47

   16 function: FUNCTION IDENTIFIER arguments . stmt_ends END FUNCTION
   17         | FUNCTION IDENTIFIER arguments . stmt_ends RETURN expr END FUNCTION
   18         | FUNCTION IDENTIFIER arguments . stmt_ends stmt_list END FUNCTION
   19         | FUNCTION IDENTIFIER arguments . stmt_ends stmt_list RETURN expr END FUNCTION

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 72


State 48

    9 module: MODULE IDENTIFIER stmt_ends functions_and_sub_list END MODULE .

    $default  reduce using rule 9 (module)


State 49

   13 functions_and_sub_list: functions_and_sub_list stmt_ends function_or_sub .

    $default  reduce using rule 13 (functions_and_sub_list)


State 50

   26 sub_bloc: access SUB IDENTIFIER . '(' parameterlist_or_empty ')' stmt_ends END SUB
   27         | access SUB IDENTIFIER . '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    '('  shift, and go to state 73


State 51

   20 function: access FUNCTION IDENTIFIER . arguments stmt_ends END FUNCTION
   21         | access FUNCTION IDENTIFIER . arguments stmt_ends RETURN expr END FUNCTION
   22         | access FUNCTION IDENTIFIER . arguments stmt_ends stmt_list END FUNCTION
   23         | access FUNCTION IDENTIFIER . arguments stmt_ends stmt_list RETURN expr END FUNCTION

    '('  shift, and go to state 44

    arguments_multiline   go to state 45
    arguments_singleline  go to state 46
    arguments             go to state 74


State 52

   10 module: access MODULE IDENTIFIER stmt_ends END MODULE .

    $default  reduce using rule 10 (module)


State 53

   11 module: access MODULE IDENTIFIER stmt_ends functions_and_sub_list END . MODULE

    MODULE  shift, and go to state 75


State 54

   43 parameter_with_type: IDENTIFIER . AS basic_literal
   44                    | IDENTIFIER . AS basic_literal '(' ')'
   45 parameter_without_type: IDENTIFIER .

    AS  shift, and go to state 76

    $default  reduce using rule 45 (parameter_without_type)


State 55

   30 parameterlist_or_empty: END_OF_LINE . parameterlist_with_type END_OF_LINE
   31                       | END_OF_LINE . parameterlist_with_type
   34                       | END_OF_LINE . parameterlist_without_type END_OF_LINE
   36                       | END_OF_LINE . parameterlist_without_type

    IDENTIFIER  shift, and go to state 54

    parameterlist_with_type     go to state 77
    parameterlist_without_type  go to state 78
    parameter_with_type         go to state 59
    parameter_without_type      go to state 60


State 56

   24 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty . ')' stmt_ends END SUB
   25         | SUB IDENTIFIER '(' parameterlist_or_empty . ')' stmt_ends stmt_list END SUB

    ')'  shift, and go to state 79


State 57

   29 parameterlist_or_empty: parameterlist_with_type .
   32                       | parameterlist_with_type . END_OF_LINE
   38 parameterlist_with_type: parameterlist_with_type . ',' parameter_with_type
   39                        | parameterlist_with_type . ',' END_OF_LINE parameter_with_type

    END_OF_LINE  shift, and go to state 80
    ','          shift, and go to state 81

    $default  reduce using rule 29 (parameterlist_or_empty)


State 58

   33 parameterlist_or_empty: parameterlist_without_type .
   35                       | parameterlist_without_type . END_OF_LINE
   41 parameterlist_without_type: parameterlist_without_type . ',' parameter_without_type
   42                           | parameterlist_without_type . ',' END_OF_LINE parameter_without_type

    END_OF_LINE  shift, and go to state 82
    ','          shift, and go to state 83

    $default  reduce using rule 33 (parameterlist_or_empty)


State 59

   37 parameterlist_with_type: parameter_with_type .

    $default  reduce using rule 37 (parameterlist_with_type)


State 60

   40 parameterlist_without_type: parameter_without_type .

    $default  reduce using rule 40 (parameterlist_without_type)


State 61

  127 basic_literal: INT .

    $default  reduce using rule 127 (basic_literal)


State 62

  130 basic_literal: DOUBLE .

    $default  reduce using rule 130 (basic_literal)


State 63

  128 basic_literal: STRING .

    $default  reduce using rule 128 (basic_literal)


State 64

  129 basic_literal: BOOLEAN .

    $default  reduce using rule 129 (basic_literal)


State 65

  131 arguments_multiline: '(' END_OF_LINE . expr_list ')'
  132                    | '(' END_OF_LINE . expr_list END_OF_LINE ')'

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 69
    basic_literal  go to state 70
    expr_list      go to state 84


State 66

  113 expr: '+' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 85
    basic_literal  go to state 70


State 67

  112 expr: '-' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 86
    basic_literal  go to state 70


State 68

  135 arguments_singleline: '(' ')' .

    $default  reduce using rule 135 (arguments_singleline)


State 69

  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr
  138 expr_list: expr .

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 138 (expr_list)


State 70

  111 expr: basic_literal .

    $default  reduce using rule 111 (expr)


State 71

  133 arguments_multiline: '(' expr_list . END_OF_LINE ')'
  134 arguments_singleline: '(' expr_list . ')'
  139 expr_list: expr_list . ',' expr

    END_OF_LINE  shift, and go to state 100
    ')'          shift, and go to state 101
    ','          shift, and go to state 102


State 72

   16 function: FUNCTION IDENTIFIER arguments stmt_ends . END FUNCTION
   17         | FUNCTION IDENTIFIER arguments stmt_ends . RETURN expr END FUNCTION
   18         | FUNCTION IDENTIFIER arguments stmt_ends . stmt_list END FUNCTION
   19         | FUNCTION IDENTIFIER arguments stmt_ends . stmt_list RETURN expr END FUNCTION
   64 stmt_ends: stmt_ends . END_OF_LINE

    IDENTIFIER   shift, and go to state 103
    END          shift, and go to state 104
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    RETURN       shift, and go to state 110
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list                 go to state 113
    stmt                      go to state 114
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 73

   26 sub_bloc: access SUB IDENTIFIER '(' . parameterlist_or_empty ')' stmt_ends END SUB
   27         | access SUB IDENTIFIER '(' . parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    IDENTIFIER   shift, and go to state 54
    END_OF_LINE  shift, and go to state 55

    $default  reduce using rule 28 (parameterlist_or_empty)

    parameterlist_or_empty      go to state 131
    parameterlist_with_type     go to state 57
    parameterlist_without_type  go to state 58
    parameter_with_type         go to state 59
    parameter_without_type      go to state 60


State 74

   20 function: access FUNCTION IDENTIFIER arguments . stmt_ends END FUNCTION
   21         | access FUNCTION IDENTIFIER arguments . stmt_ends RETURN expr END FUNCTION
   22         | access FUNCTION IDENTIFIER arguments . stmt_ends stmt_list END FUNCTION
   23         | access FUNCTION IDENTIFIER arguments . stmt_ends stmt_list RETURN expr END FUNCTION

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 132


State 75

   11 module: access MODULE IDENTIFIER stmt_ends functions_and_sub_list END MODULE .

    $default  reduce using rule 11 (module)


State 76

   43 parameter_with_type: IDENTIFIER AS . basic_literal
   44                    | IDENTIFIER AS . basic_literal '(' ')'

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 133


State 77

   30 parameterlist_or_empty: END_OF_LINE parameterlist_with_type . END_OF_LINE
   31                       | END_OF_LINE parameterlist_with_type .
   38 parameterlist_with_type: parameterlist_with_type . ',' parameter_with_type
   39                        | parameterlist_with_type . ',' END_OF_LINE parameter_with_type

    END_OF_LINE  shift, and go to state 134
    ','          shift, and go to state 81

    $default  reduce using rule 31 (parameterlist_or_empty)


State 78

   34 parameterlist_or_empty: END_OF_LINE parameterlist_without_type . END_OF_LINE
   36                       | END_OF_LINE parameterlist_without_type .
   41 parameterlist_without_type: parameterlist_without_type . ',' parameter_without_type
   42                           | parameterlist_without_type . ',' END_OF_LINE parameter_without_type

    END_OF_LINE  shift, and go to state 135
    ','          shift, and go to state 83

    $default  reduce using rule 36 (parameterlist_or_empty)


State 79

   24 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' . stmt_ends END SUB
   25         | SUB IDENTIFIER '(' parameterlist_or_empty ')' . stmt_ends stmt_list END SUB

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 136


State 80

   32 parameterlist_or_empty: parameterlist_with_type END_OF_LINE .

    $default  reduce using rule 32 (parameterlist_or_empty)


State 81

   38 parameterlist_with_type: parameterlist_with_type ',' . parameter_with_type
   39                        | parameterlist_with_type ',' . END_OF_LINE parameter_with_type

    IDENTIFIER   shift, and go to state 137
    END_OF_LINE  shift, and go to state 138

    parameter_with_type  go to state 139


State 82

   35 parameterlist_or_empty: parameterlist_without_type END_OF_LINE .

    $default  reduce using rule 35 (parameterlist_or_empty)


State 83

   41 parameterlist_without_type: parameterlist_without_type ',' . parameter_without_type
   42                           | parameterlist_without_type ',' . END_OF_LINE parameter_without_type

    IDENTIFIER   shift, and go to state 140
    END_OF_LINE  shift, and go to state 141

    parameter_without_type  go to state 142


State 84

  131 arguments_multiline: '(' END_OF_LINE expr_list . ')'
  132                    | '(' END_OF_LINE expr_list . END_OF_LINE ')'
  139 expr_list: expr_list . ',' expr

    END_OF_LINE  shift, and go to state 143
    ')'          shift, and go to state 144
    ','          shift, and go to state 102


State 85

  113 expr: '+' expr .
  114     | expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 113 (expr)


State 86

  112 expr: '-' expr .
  114     | expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 112 (expr)


State 87

  122 expr: expr '^' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 145
    basic_literal  go to state 70


State 88

  116 expr: expr '*' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 146
    basic_literal  go to state 70


State 89

  117 expr: expr '/' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 147
    basic_literal  go to state 70


State 90

  118 expr: expr INT_DIV . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 148
    basic_literal  go to state 70


State 91

  114 expr: expr '+' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 149
    basic_literal  go to state 70


State 92

  115 expr: expr '-' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 150
    basic_literal  go to state 70


State 93

  119 expr: expr '=' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 151
    basic_literal  go to state 70


State 94

  123 expr: expr NOT_EQUAL . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 152
    basic_literal  go to state 70


State 95

  124 expr: expr LESS_OR_EQUAL . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 153
    basic_literal  go to state 70


State 96

  125 expr: expr MORE_OR_EQUAL . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 154
    basic_literal  go to state 70


State 97

  121 expr: expr '>' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 155
    basic_literal  go to state 70


State 98

  120 expr: expr '<' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 156
    basic_literal  go to state 70


State 99

  126 expr: expr '&' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 157
    basic_literal  go to state 70


State 100

  133 arguments_multiline: '(' expr_list END_OF_LINE . ')'

    ')'  shift, and go to state 158


State 101

  134 arguments_singleline: '(' expr_list ')' .

    $default  reduce using rule 134 (arguments_singleline)


State 102

  139 expr_list: expr_list ',' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 159
    basic_literal  go to state 70


State 103

   82 assign_stmt_singleline: IDENTIFIER . '=' expr
   83                       | IDENTIFIER . '=' IDENTIFIER
   84                       | IDENTIFIER . '=' function_call_singleline
   85 assign_stmt_multiline: IDENTIFIER . '=' function_call_multiline
  109 function_call_multiline: IDENTIFIER . arguments_multiline
  110 function_call_singleline: IDENTIFIER . arguments_singleline

    '='  shift, and go to state 160
    '('  shift, and go to state 44

    arguments_multiline   go to state 161
    arguments_singleline  go to state 162


State 104

   16 function: FUNCTION IDENTIFIER arguments stmt_ends END . FUNCTION

    FUNCTION  shift, and go to state 163


State 105

   65 decl_stmt: CONST . var_name AS basic_literal '=' END_OF_LINE expr
   69 decl_stmt_single_line: CONST . var_name AS basic_literal '=' expr

    IDENTIFIER  shift, and go to state 164

    var_name  go to state 165


State 106

   66 decl_stmt: DIM . var_name AS basic_literal '=' END_OF_LINE expr
   67          | DIM . var_name '=' END_OF_LINE expr
   70 decl_stmt_single_line: DIM . var_name AS basic_literal '=' expr
   71                      | DIM . var_name AS basic_literal
   72                      | DIM . var_name '=' expr
   73                      | DIM . var_name

    IDENTIFIER  shift, and go to state 164

    var_name  go to state 166


State 107

   86 while_stmt: WHILE . expr stmt_ends stmt_list END WHILE

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 167
    basic_literal  go to state 70


State 108

   94 if_stmt_multi_line: IF . expr THEN stmt_ends stmt_list END IF
   95                   | IF . expr THEN stmt_ends stmt_list ELSE stmt_list END IF
   96                   | IF . expr THEN stmt_ends stmt_list elseif_list END IF
   97                   | IF . expr THEN stmt_ends stmt_list elseif_list ELSE stmt_list END IF
  100 if_stmt_single_line: IF . expr THEN single_line_stmt
  101                    | IF . expr THEN single_line_stmt ELSE single_line_stmt

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 168
    basic_literal  go to state 70


State 109

  102 select_stmt: SELECT . CASE expr stmt_ends case_list END SELECT

    CASE  shift, and go to state 169


State 110

   17 function: FUNCTION IDENTIFIER arguments stmt_ends RETURN . expr END FUNCTION

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 170
    basic_literal  go to state 70


State 111

   87 do_loop_stmt: DO . do_loop_condition stmt_ends stmt_list LOOP
   88             | DO . stmt_ends stmt_list LOOP do_loop_condition

    WHILE        shift, and go to state 171
    UNTIL        shift, and go to state 172
    END_OF_LINE  shift, and go to state 20

    stmt_ends          go to state 173
    do_loop_condition  go to state 174


State 112

   91 for_loop_stmt: FOR . IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal stmt_ends stmt_list NEXT
   92              | FOR . IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal STEP basic_literal stmt_ends stmt_list NEXT
   93 for_each_loop_stmt: FOR . EACH IDENTIFIER AS basic_literal IN IDENTIFIER stmt_ends stmt_list NEXT

    IDENTIFIER  shift, and go to state 175
    EACH        shift, and go to state 176


State 113

   18 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list . END FUNCTION
   19         | FUNCTION IDENTIFIER arguments stmt_ends stmt_list . RETURN expr END FUNCTION
   47 stmt_list: stmt_list . stmt

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 177
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    RETURN      shift, and go to state 178
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                      go to state 179
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 114

   46 stmt_list: stmt .

    $default  reduce using rule 46 (stmt_list)


State 115

   49 stmt: single_line_stmt . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 180


State 116

   48 stmt: multi_line_stmt .

    $default  reduce using rule 48 (stmt)


State 117

   54 multi_line_stmt: decl_stmt . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 181


State 118

   51 single_line_stmt: decl_stmt_single_line .

    $default  reduce using rule 51 (single_line_stmt)


State 119

   68 decl_stmt_single_line: access . SUB var_name stmt_list END SUB

    SUB  shift, and go to state 182


State 120

   53 single_line_stmt: assign_stmt_singleline .

    $default  reduce using rule 53 (single_line_stmt)


State 121

   55 multi_line_stmt: assign_stmt_multiline . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 183


State 122

   56 multi_line_stmt: while_stmt . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 184


State 123

   57 multi_line_stmt: do_loop_stmt .

    $default  reduce using rule 57 (multi_line_stmt)


State 124

   58 multi_line_stmt: for_loop_stmt .

    $default  reduce using rule 58 (multi_line_stmt)


State 125

   59 multi_line_stmt: for_each_loop_stmt .

    $default  reduce using rule 59 (multi_line_stmt)


State 126

   61 multi_line_stmt: if_stmt_multi_line . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 185


State 127

   50 single_line_stmt: if_stmt_single_line .

    $default  reduce using rule 50 (single_line_stmt)


State 128

   60 multi_line_stmt: select_stmt . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 186


State 129

   62 multi_line_stmt: function_call_multiline .

    $default  reduce using rule 62 (multi_line_stmt)


State 130

   52 single_line_stmt: function_call_singleline .

    $default  reduce using rule 52 (single_line_stmt)


State 131

   26 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty . ')' stmt_ends END SUB
   27         | access SUB IDENTIFIER '(' parameterlist_or_empty . ')' stmt_ends stmt_list END SUB

    ')'  shift, and go to state 187


State 132

   20 function: access FUNCTION IDENTIFIER arguments stmt_ends . END FUNCTION
   21         | access FUNCTION IDENTIFIER arguments stmt_ends . RETURN expr END FUNCTION
   22         | access FUNCTION IDENTIFIER arguments stmt_ends . stmt_list END FUNCTION
   23         | access FUNCTION IDENTIFIER arguments stmt_ends . stmt_list RETURN expr END FUNCTION
   64 stmt_ends: stmt_ends . END_OF_LINE

    IDENTIFIER   shift, and go to state 103
    END          shift, and go to state 188
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    RETURN       shift, and go to state 189
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list                 go to state 190
    stmt                      go to state 114
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 133

   43 parameter_with_type: IDENTIFIER AS basic_literal .
   44                    | IDENTIFIER AS basic_literal . '(' ')'

    '('  shift, and go to state 191

    $default  reduce using rule 43 (parameter_with_type)


State 134

   30 parameterlist_or_empty: END_OF_LINE parameterlist_with_type END_OF_LINE .

    $default  reduce using rule 30 (parameterlist_or_empty)


State 135

   34 parameterlist_or_empty: END_OF_LINE parameterlist_without_type END_OF_LINE .

    $default  reduce using rule 34 (parameterlist_or_empty)


State 136

   24 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends . END SUB
   25         | SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends . stmt_list END SUB
   64 stmt_ends: stmt_ends . END_OF_LINE

    IDENTIFIER   shift, and go to state 103
    END          shift, and go to state 192
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list                 go to state 193
    stmt                      go to state 114
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 137

   43 parameter_with_type: IDENTIFIER . AS basic_literal
   44                    | IDENTIFIER . AS basic_literal '(' ')'

    AS  shift, and go to state 76


State 138

   39 parameterlist_with_type: parameterlist_with_type ',' END_OF_LINE . parameter_with_type

    IDENTIFIER  shift, and go to state 137

    parameter_with_type  go to state 194


State 139

   38 parameterlist_with_type: parameterlist_with_type ',' parameter_with_type .

    $default  reduce using rule 38 (parameterlist_with_type)


State 140

   45 parameter_without_type: IDENTIFIER .

    $default  reduce using rule 45 (parameter_without_type)


State 141

   42 parameterlist_without_type: parameterlist_without_type ',' END_OF_LINE . parameter_without_type

    IDENTIFIER  shift, and go to state 140

    parameter_without_type  go to state 195


State 142

   41 parameterlist_without_type: parameterlist_without_type ',' parameter_without_type .

    $default  reduce using rule 41 (parameterlist_without_type)


State 143

  132 arguments_multiline: '(' END_OF_LINE expr_list END_OF_LINE . ')'

    ')'  shift, and go to state 196


State 144

  131 arguments_multiline: '(' END_OF_LINE expr_list ')' .

    $default  reduce using rule 131 (arguments_multiline)


State 145

  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  122     | expr '^' expr .
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 122 (expr)


State 146

  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  116     | expr '*' expr .
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 116 (expr)


State 147

  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  117     | expr '/' expr .
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 117 (expr)


State 148

  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  118     | expr INT_DIV expr .
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 118 (expr)


State 149

  114 expr: expr . '+' expr
  114     | expr '+' expr .
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 114 (expr)


State 150

  114 expr: expr . '+' expr
  115     | expr . '-' expr
  115     | expr '-' expr .
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 115 (expr)


State 151

  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  119     | expr '=' expr .
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    '&'  shift, and go to state 99

    $default  reduce using rule 119 (expr)


State 152

  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  123     | expr NOT_EQUAL expr .
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    '&'  shift, and go to state 99

    $default  reduce using rule 123 (expr)


State 153

  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  124     | expr LESS_OR_EQUAL expr .
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    '&'  shift, and go to state 99

    $default  reduce using rule 124 (expr)


State 154

  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  125     | expr MORE_OR_EQUAL expr .
  126     | expr . '&' expr

    '&'  shift, and go to state 99

    $default  reduce using rule 125 (expr)


State 155

  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  121     | expr '>' expr .
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    '&'  shift, and go to state 99

    $default  reduce using rule 121 (expr)


State 156

  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  120     | expr '<' expr .
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    '&'  shift, and go to state 99

    $default  reduce using rule 120 (expr)


State 157

  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr
  126     | expr '&' expr .

    $default  reduce using rule 126 (expr)


State 158

  133 arguments_multiline: '(' expr_list END_OF_LINE ')' .

    $default  reduce using rule 133 (arguments_multiline)


State 159

  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr
  139 expr_list: expr_list ',' expr .

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 139 (expr_list)


State 160

   82 assign_stmt_singleline: IDENTIFIER '=' . expr
   83                       | IDENTIFIER '=' . IDENTIFIER
   84                       | IDENTIFIER '=' . function_call_singleline
   85 assign_stmt_multiline: IDENTIFIER '=' . function_call_multiline

    INT         shift, and go to state 61
    DOUBLE      shift, and go to state 62
    STRING      shift, and go to state 63
    BOOLEAN     shift, and go to state 64
    IDENTIFIER  shift, and go to state 197
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    function_call_multiline   go to state 198
    function_call_singleline  go to state 199
    expr                      go to state 200
    basic_literal             go to state 70


State 161

  109 function_call_multiline: IDENTIFIER arguments_multiline .

    $default  reduce using rule 109 (function_call_multiline)


State 162

  110 function_call_singleline: IDENTIFIER arguments_singleline .

    $default  reduce using rule 110 (function_call_singleline)


State 163

   16 function: FUNCTION IDENTIFIER arguments stmt_ends END FUNCTION .

    $default  reduce using rule 16 (function)


State 164

   74 var_name: IDENTIFIER . '(' expr ')'
   75         | IDENTIFIER .

    '('  shift, and go to state 201

    $default  reduce using rule 75 (var_name)


State 165

   65 decl_stmt: CONST var_name . AS basic_literal '=' END_OF_LINE expr
   69 decl_stmt_single_line: CONST var_name . AS basic_literal '=' expr

    AS  shift, and go to state 202


State 166

   66 decl_stmt: DIM var_name . AS basic_literal '=' END_OF_LINE expr
   67          | DIM var_name . '=' END_OF_LINE expr
   70 decl_stmt_single_line: DIM var_name . AS basic_literal '=' expr
   71                      | DIM var_name . AS basic_literal
   72                      | DIM var_name . '=' expr
   73                      | DIM var_name .

    AS   shift, and go to state 203
    '='  shift, and go to state 204

    $default  reduce using rule 73 (decl_stmt_single_line)


State 167

   86 while_stmt: WHILE expr . stmt_ends stmt_list END WHILE
  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    END_OF_LINE    shift, and go to state 20
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    stmt_ends  go to state 205


State 168

   94 if_stmt_multi_line: IF expr . THEN stmt_ends stmt_list END IF
   95                   | IF expr . THEN stmt_ends stmt_list ELSE stmt_list END IF
   96                   | IF expr . THEN stmt_ends stmt_list elseif_list END IF
   97                   | IF expr . THEN stmt_ends stmt_list elseif_list ELSE stmt_list END IF
  100 if_stmt_single_line: IF expr . THEN single_line_stmt
  101                    | IF expr . THEN single_line_stmt ELSE single_line_stmt
  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99
    THEN           shift, and go to state 206


State 169

  102 select_stmt: SELECT CASE . expr stmt_ends case_list END SELECT

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 207
    basic_literal  go to state 70


State 170

   17 function: FUNCTION IDENTIFIER arguments stmt_ends RETURN expr . END FUNCTION
  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    END            shift, and go to state 208
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99


State 171

   90 do_loop_condition: WHILE . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 209
    basic_literal  go to state 70


State 172

   89 do_loop_condition: UNTIL . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 210
    basic_literal  go to state 70


State 173

   64 stmt_ends: stmt_ends . END_OF_LINE
   88 do_loop_stmt: DO stmt_ends . stmt_list LOOP do_loop_condition

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list                 go to state 211
    stmt                      go to state 114
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 174

   87 do_loop_stmt: DO do_loop_condition . stmt_ends stmt_list LOOP

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 212


State 175

   91 for_loop_stmt: FOR IDENTIFIER . AS basic_literal '=' basic_literal TO basic_literal stmt_ends stmt_list NEXT
   92              | FOR IDENTIFIER . AS basic_literal '=' basic_literal TO basic_literal STEP basic_literal stmt_ends stmt_list NEXT

    AS  shift, and go to state 213


State 176

   93 for_each_loop_stmt: FOR EACH . IDENTIFIER AS basic_literal IN IDENTIFIER stmt_ends stmt_list NEXT

    IDENTIFIER  shift, and go to state 214


State 177

   18 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list END . FUNCTION

    FUNCTION  shift, and go to state 215


State 178

   19 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN . expr END FUNCTION

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 216
    basic_literal  go to state 70


State 179

   47 stmt_list: stmt_list stmt .

    $default  reduce using rule 47 (stmt_list)


State 180

   49 stmt: single_line_stmt stmt_ends .
   64 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 49 (stmt)


State 181

   54 multi_line_stmt: decl_stmt stmt_ends .
   64 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 54 (multi_line_stmt)


State 182

   68 decl_stmt_single_line: access SUB . var_name stmt_list END SUB

    IDENTIFIER  shift, and go to state 164

    var_name  go to state 217


State 183

   55 multi_line_stmt: assign_stmt_multiline stmt_ends .
   64 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 55 (multi_line_stmt)


State 184

   56 multi_line_stmt: while_stmt stmt_ends .
   64 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 56 (multi_line_stmt)


State 185

   61 multi_line_stmt: if_stmt_multi_line stmt_ends .
   64 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 61 (multi_line_stmt)


State 186

   60 multi_line_stmt: select_stmt stmt_ends .
   64 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 60 (multi_line_stmt)


State 187

   26 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' . stmt_ends END SUB
   27         | access SUB IDENTIFIER '(' parameterlist_or_empty ')' . stmt_ends stmt_list END SUB

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 218


State 188

   20 function: access FUNCTION IDENTIFIER arguments stmt_ends END . FUNCTION

    FUNCTION  shift, and go to state 219


State 189

   21 function: access FUNCTION IDENTIFIER arguments stmt_ends RETURN . expr END FUNCTION

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 220
    basic_literal  go to state 70


State 190

   22 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list . END FUNCTION
   23         | access FUNCTION IDENTIFIER arguments stmt_ends stmt_list . RETURN expr END FUNCTION
   47 stmt_list: stmt_list . stmt

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 221
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    RETURN      shift, and go to state 222
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                      go to state 179
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 191

   44 parameter_with_type: IDENTIFIER AS basic_literal '(' . ')'

    ')'  shift, and go to state 223


State 192

   24 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END . SUB

    SUB  shift, and go to state 224


State 193

   25 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list . END SUB
   47 stmt_list: stmt_list . stmt

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 225
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                      go to state 179
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 194

   39 parameterlist_with_type: parameterlist_with_type ',' END_OF_LINE parameter_with_type .

    $default  reduce using rule 39 (parameterlist_with_type)


State 195

   42 parameterlist_without_type: parameterlist_without_type ',' END_OF_LINE parameter_without_type .

    $default  reduce using rule 42 (parameterlist_without_type)


State 196

  132 arguments_multiline: '(' END_OF_LINE expr_list END_OF_LINE ')' .

    $default  reduce using rule 132 (arguments_multiline)


State 197

   83 assign_stmt_singleline: IDENTIFIER '=' IDENTIFIER .
  109 function_call_multiline: IDENTIFIER . arguments_multiline
  110 function_call_singleline: IDENTIFIER . arguments_singleline

    '('  shift, and go to state 44

    $default  reduce using rule 83 (assign_stmt_singleline)

    arguments_multiline   go to state 161
    arguments_singleline  go to state 162


State 198

   85 assign_stmt_multiline: IDENTIFIER '=' function_call_multiline .

    $default  reduce using rule 85 (assign_stmt_multiline)


State 199

   84 assign_stmt_singleline: IDENTIFIER '=' function_call_singleline .

    $default  reduce using rule 84 (assign_stmt_singleline)


State 200

   82 assign_stmt_singleline: IDENTIFIER '=' expr .
  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 82 (assign_stmt_singleline)


State 201

   74 var_name: IDENTIFIER '(' . expr ')'

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 226
    basic_literal  go to state 70


State 202

   65 decl_stmt: CONST var_name AS . basic_literal '=' END_OF_LINE expr
   69 decl_stmt_single_line: CONST var_name AS . basic_literal '=' expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 227


State 203

   66 decl_stmt: DIM var_name AS . basic_literal '=' END_OF_LINE expr
   70 decl_stmt_single_line: DIM var_name AS . basic_literal '=' expr
   71                      | DIM var_name AS . basic_literal

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 228


State 204

   67 decl_stmt: DIM var_name '=' . END_OF_LINE expr
   72 decl_stmt_single_line: DIM var_name '=' . expr

    INT          shift, and go to state 61
    DOUBLE       shift, and go to state 62
    STRING       shift, and go to state 63
    BOOLEAN      shift, and go to state 64
    END_OF_LINE  shift, and go to state 229
    '+'          shift, and go to state 66
    '-'          shift, and go to state 67

    expr           go to state 230
    basic_literal  go to state 70


State 205

   64 stmt_ends: stmt_ends . END_OF_LINE
   86 while_stmt: WHILE expr stmt_ends . stmt_list END WHILE

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list                 go to state 231
    stmt                      go to state 114
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 206

   94 if_stmt_multi_line: IF expr THEN . stmt_ends stmt_list END IF
   95                   | IF expr THEN . stmt_ends stmt_list ELSE stmt_list END IF
   96                   | IF expr THEN . stmt_ends stmt_list elseif_list END IF
   97                   | IF expr THEN . stmt_ends stmt_list elseif_list ELSE stmt_list END IF
  100 if_stmt_single_line: IF expr THEN . single_line_stmt
  101                    | IF expr THEN . single_line_stmt ELSE single_line_stmt

    IDENTIFIER   shift, and go to state 232
    CONST        shift, and go to state 233
    DIM          shift, and go to state 234
    IF           shift, and go to state 235
    END_OF_LINE  shift, and go to state 20
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    single_line_stmt          go to state 236
    stmt_ends                 go to state 237
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    if_stmt_single_line       go to state 127
    function_call_singleline  go to state 130


State 207

  102 select_stmt: SELECT CASE expr . stmt_ends case_list END SELECT
  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    END_OF_LINE    shift, and go to state 20
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    stmt_ends  go to state 238


State 208

   17 function: FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END . FUNCTION

    FUNCTION  shift, and go to state 239


State 209

   90 do_loop_condition: WHILE expr .
  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 90 (do_loop_condition)


State 210

   89 do_loop_condition: UNTIL expr .
  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 89 (do_loop_condition)


State 211

   47 stmt_list: stmt_list . stmt
   88 do_loop_stmt: DO stmt_ends stmt_list . LOOP do_loop_condition

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    LOOP        shift, and go to state 240
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                      go to state 179
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 212

   64 stmt_ends: stmt_ends . END_OF_LINE
   87 do_loop_stmt: DO do_loop_condition stmt_ends . stmt_list LOOP

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list                 go to state 241
    stmt                      go to state 114
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 213

   91 for_loop_stmt: FOR IDENTIFIER AS . basic_literal '=' basic_literal TO basic_literal stmt_ends stmt_list NEXT
   92              | FOR IDENTIFIER AS . basic_literal '=' basic_literal TO basic_literal STEP basic_literal stmt_ends stmt_list NEXT

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 242


State 214

   93 for_each_loop_stmt: FOR EACH IDENTIFIER . AS basic_literal IN IDENTIFIER stmt_ends stmt_list NEXT

    AS  shift, and go to state 243


State 215

   18 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list END FUNCTION .

    $default  reduce using rule 18 (function)


State 216

   19 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr . END FUNCTION
  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    END            shift, and go to state 244
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99


State 217

   68 decl_stmt_single_line: access SUB var_name . stmt_list END SUB

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt_list                 go to state 245
    stmt                      go to state 114
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 218

   26 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends . END SUB
   27         | access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends . stmt_list END SUB
   64 stmt_ends: stmt_ends . END_OF_LINE

    IDENTIFIER   shift, and go to state 103
    END          shift, and go to state 246
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list                 go to state 247
    stmt                      go to state 114
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 219

   20 function: access FUNCTION IDENTIFIER arguments stmt_ends END FUNCTION .

    $default  reduce using rule 20 (function)


State 220

   21 function: access FUNCTION IDENTIFIER arguments stmt_ends RETURN expr . END FUNCTION
  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    END            shift, and go to state 248
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99


State 221

   22 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list END . FUNCTION

    FUNCTION  shift, and go to state 249


State 222

   23 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN . expr END FUNCTION

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 250
    basic_literal  go to state 70


State 223

   44 parameter_with_type: IDENTIFIER AS basic_literal '(' ')' .

    $default  reduce using rule 44 (parameter_with_type)


State 224

   24 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB .

    $default  reduce using rule 24 (sub_bloc)


State 225

   25 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END . SUB

    SUB  shift, and go to state 251


State 226

   74 var_name: IDENTIFIER '(' expr . ')'
  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99
    ')'            shift, and go to state 252


State 227

   65 decl_stmt: CONST var_name AS basic_literal . '=' END_OF_LINE expr
   69 decl_stmt_single_line: CONST var_name AS basic_literal . '=' expr

    '='  shift, and go to state 253


State 228

   66 decl_stmt: DIM var_name AS basic_literal . '=' END_OF_LINE expr
   70 decl_stmt_single_line: DIM var_name AS basic_literal . '=' expr
   71                      | DIM var_name AS basic_literal .

    '='  shift, and go to state 254

    $default  reduce using rule 71 (decl_stmt_single_line)


State 229

   67 decl_stmt: DIM var_name '=' END_OF_LINE . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 255
    basic_literal  go to state 70


State 230

   72 decl_stmt_single_line: DIM var_name '=' expr .
  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 72 (decl_stmt_single_line)


State 231

   47 stmt_list: stmt_list . stmt
   86 while_stmt: WHILE expr stmt_ends stmt_list . END WHILE

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 256
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                      go to state 179
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 232

   82 assign_stmt_singleline: IDENTIFIER . '=' expr
   83                       | IDENTIFIER . '=' IDENTIFIER
   84                       | IDENTIFIER . '=' function_call_singleline
  110 function_call_singleline: IDENTIFIER . arguments_singleline

    '='  shift, and go to state 257
    '('  shift, and go to state 258

    arguments_singleline  go to state 162


State 233

   69 decl_stmt_single_line: CONST . var_name AS basic_literal '=' expr

    IDENTIFIER  shift, and go to state 164

    var_name  go to state 259


State 234

   70 decl_stmt_single_line: DIM . var_name AS basic_literal '=' expr
   71                      | DIM . var_name AS basic_literal
   72                      | DIM . var_name '=' expr
   73                      | DIM . var_name

    IDENTIFIER  shift, and go to state 164

    var_name  go to state 260


State 235

  100 if_stmt_single_line: IF . expr THEN single_line_stmt
  101                    | IF . expr THEN single_line_stmt ELSE single_line_stmt

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 261
    basic_literal  go to state 70


State 236

  100 if_stmt_single_line: IF expr THEN single_line_stmt .
  101                    | IF expr THEN single_line_stmt . ELSE single_line_stmt

    ELSE  shift, and go to state 262

    $default  reduce using rule 100 (if_stmt_single_line)


State 237

   64 stmt_ends: stmt_ends . END_OF_LINE
   94 if_stmt_multi_line: IF expr THEN stmt_ends . stmt_list END IF
   95                   | IF expr THEN stmt_ends . stmt_list ELSE stmt_list END IF
   96                   | IF expr THEN stmt_ends . stmt_list elseif_list END IF
   97                   | IF expr THEN stmt_ends . stmt_list elseif_list ELSE stmt_list END IF

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list                 go to state 263
    stmt                      go to state 114
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 238

   64 stmt_ends: stmt_ends . END_OF_LINE
  102 select_stmt: SELECT CASE expr stmt_ends . case_list END SELECT

    CASE         shift, and go to state 264
    END_OF_LINE  shift, and go to state 24

    case_list  go to state 265
    case_stmt  go to state 266


State 239

   17 function: FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION .

    $default  reduce using rule 17 (function)


State 240

   88 do_loop_stmt: DO stmt_ends stmt_list LOOP . do_loop_condition

    WHILE  shift, and go to state 171
    UNTIL  shift, and go to state 172

    do_loop_condition  go to state 267


State 241

   47 stmt_list: stmt_list . stmt
   87 do_loop_stmt: DO do_loop_condition stmt_ends stmt_list . LOOP

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    LOOP        shift, and go to state 268
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                      go to state 179
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 242

   91 for_loop_stmt: FOR IDENTIFIER AS basic_literal . '=' basic_literal TO basic_literal stmt_ends stmt_list NEXT
   92              | FOR IDENTIFIER AS basic_literal . '=' basic_literal TO basic_literal STEP basic_literal stmt_ends stmt_list NEXT

    '='  shift, and go to state 269


State 243

   93 for_each_loop_stmt: FOR EACH IDENTIFIER AS . basic_literal IN IDENTIFIER stmt_ends stmt_list NEXT

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 270


State 244

   19 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END . FUNCTION

    FUNCTION  shift, and go to state 271


State 245

   47 stmt_list: stmt_list . stmt
   68 decl_stmt_single_line: access SUB var_name stmt_list . END SUB

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 272
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                      go to state 179
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 246

   26 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END . SUB

    SUB  shift, and go to state 273


State 247

   27 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list . END SUB
   47 stmt_list: stmt_list . stmt

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 274
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                      go to state 179
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 248

   21 function: access FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END . FUNCTION

    FUNCTION  shift, and go to state 275


State 249

   22 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list END FUNCTION .

    $default  reduce using rule 22 (function)


State 250

   23 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr . END FUNCTION
  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    END            shift, and go to state 276
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99


State 251

   25 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB .

    $default  reduce using rule 25 (sub_bloc)


State 252

   74 var_name: IDENTIFIER '(' expr ')' .

    $default  reduce using rule 74 (var_name)


State 253

   65 decl_stmt: CONST var_name AS basic_literal '=' . END_OF_LINE expr
   69 decl_stmt_single_line: CONST var_name AS basic_literal '=' . expr

    INT          shift, and go to state 61
    DOUBLE       shift, and go to state 62
    STRING       shift, and go to state 63
    BOOLEAN      shift, and go to state 64
    END_OF_LINE  shift, and go to state 277
    '+'          shift, and go to state 66
    '-'          shift, and go to state 67

    expr           go to state 278
    basic_literal  go to state 70


State 254

   66 decl_stmt: DIM var_name AS basic_literal '=' . END_OF_LINE expr
   70 decl_stmt_single_line: DIM var_name AS basic_literal '=' . expr

    INT          shift, and go to state 61
    DOUBLE       shift, and go to state 62
    STRING       shift, and go to state 63
    BOOLEAN      shift, and go to state 64
    END_OF_LINE  shift, and go to state 279
    '+'          shift, and go to state 66
    '-'          shift, and go to state 67

    expr           go to state 280
    basic_literal  go to state 70


State 255

   67 decl_stmt: DIM var_name '=' END_OF_LINE expr .
  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 67 (decl_stmt)


State 256

   86 while_stmt: WHILE expr stmt_ends stmt_list END . WHILE

    WHILE  shift, and go to state 281


State 257

   82 assign_stmt_singleline: IDENTIFIER '=' . expr
   83                       | IDENTIFIER '=' . IDENTIFIER
   84                       | IDENTIFIER '=' . function_call_singleline

    INT         shift, and go to state 61
    DOUBLE      shift, and go to state 62
    STRING      shift, and go to state 63
    BOOLEAN     shift, and go to state 64
    IDENTIFIER  shift, and go to state 282
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    function_call_singleline  go to state 199
    expr                      go to state 200
    basic_literal             go to state 70


State 258

  134 arguments_singleline: '(' . expr_list ')'
  135                     | '(' . ')'

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67
    ')'      shift, and go to state 68

    expr           go to state 69
    basic_literal  go to state 70
    expr_list      go to state 283


State 259

   69 decl_stmt_single_line: CONST var_name . AS basic_literal '=' expr

    AS  shift, and go to state 284


State 260

   70 decl_stmt_single_line: DIM var_name . AS basic_literal '=' expr
   71                      | DIM var_name . AS basic_literal
   72                      | DIM var_name . '=' expr
   73                      | DIM var_name .

    AS   shift, and go to state 285
    '='  shift, and go to state 286

    $default  reduce using rule 73 (decl_stmt_single_line)


State 261

  100 if_stmt_single_line: IF expr . THEN single_line_stmt
  101                    | IF expr . THEN single_line_stmt ELSE single_line_stmt
  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99
    THEN           shift, and go to state 287


State 262

  101 if_stmt_single_line: IF expr THEN single_line_stmt ELSE . single_line_stmt

    IDENTIFIER  shift, and go to state 232
    CONST       shift, and go to state 233
    DIM         shift, and go to state 234
    IF          shift, and go to state 235
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    single_line_stmt          go to state 288
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    if_stmt_single_line       go to state 127
    function_call_singleline  go to state 130


State 263

   47 stmt_list: stmt_list . stmt
   94 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list . END IF
   95                   | IF expr THEN stmt_ends stmt_list . ELSE stmt_list END IF
   96                   | IF expr THEN stmt_ends stmt_list . elseif_list END IF
   97                   | IF expr THEN stmt_ends stmt_list . elseif_list ELSE stmt_list END IF

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 289
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    ELSEIF      shift, and go to state 290
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6
    ELSE        shift, and go to state 291

    stmt                      go to state 179
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    elseif_list               go to state 292
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 264

  105 case_stmt: CASE . expr stmt_ends stmt_list
  106          | CASE . IS expr stmt_ends stmt_list
  107          | CASE . expr TO expr stmt_ends stmt_list
  108          | CASE . ELSE stmt_ends stmt_list

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    IS       shift, and go to state 293
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67
    ELSE     shift, and go to state 294

    expr           go to state 295
    basic_literal  go to state 70


State 265

  102 select_stmt: SELECT CASE expr stmt_ends case_list . END SELECT
  104 case_list: case_list . case_stmt

    END   shift, and go to state 296
    CASE  shift, and go to state 264

    case_stmt  go to state 297


State 266

  103 case_list: case_stmt .

    $default  reduce using rule 103 (case_list)


State 267

   88 do_loop_stmt: DO stmt_ends stmt_list LOOP do_loop_condition .

    $default  reduce using rule 88 (do_loop_stmt)


State 268

   87 do_loop_stmt: DO do_loop_condition stmt_ends stmt_list LOOP .

    $default  reduce using rule 87 (do_loop_stmt)


State 269

   91 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' . basic_literal TO basic_literal stmt_ends stmt_list NEXT
   92              | FOR IDENTIFIER AS basic_literal '=' . basic_literal TO basic_literal STEP basic_literal stmt_ends stmt_list NEXT

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 298


State 270

   93 for_each_loop_stmt: FOR EACH IDENTIFIER AS basic_literal . IN IDENTIFIER stmt_ends stmt_list NEXT

    IN  shift, and go to state 299


State 271

   19 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION .

    $default  reduce using rule 19 (function)


State 272

   68 decl_stmt_single_line: access SUB var_name stmt_list END . SUB

    SUB  shift, and go to state 300


State 273

   26 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB .

    $default  reduce using rule 26 (sub_bloc)


State 274

   27 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END . SUB

    SUB  shift, and go to state 301


State 275

   21 function: access FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION .

    $default  reduce using rule 21 (function)


State 276

   23 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END . FUNCTION

    FUNCTION  shift, and go to state 302


State 277

   65 decl_stmt: CONST var_name AS basic_literal '=' END_OF_LINE . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 303
    basic_literal  go to state 70


State 278

   69 decl_stmt_single_line: CONST var_name AS basic_literal '=' expr .
  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 69 (decl_stmt_single_line)


State 279

   66 decl_stmt: DIM var_name AS basic_literal '=' END_OF_LINE . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 304
    basic_literal  go to state 70


State 280

   70 decl_stmt_single_line: DIM var_name AS basic_literal '=' expr .
  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 70 (decl_stmt_single_line)


State 281

   86 while_stmt: WHILE expr stmt_ends stmt_list END WHILE .

    $default  reduce using rule 86 (while_stmt)


State 282

   83 assign_stmt_singleline: IDENTIFIER '=' IDENTIFIER .
  110 function_call_singleline: IDENTIFIER . arguments_singleline

    '('  shift, and go to state 258

    $default  reduce using rule 83 (assign_stmt_singleline)

    arguments_singleline  go to state 162


State 283

  134 arguments_singleline: '(' expr_list . ')'
  139 expr_list: expr_list . ',' expr

    ')'  shift, and go to state 101
    ','  shift, and go to state 102


State 284

   69 decl_stmt_single_line: CONST var_name AS . basic_literal '=' expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 305


State 285

   70 decl_stmt_single_line: DIM var_name AS . basic_literal '=' expr
   71                      | DIM var_name AS . basic_literal

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 306


State 286

   72 decl_stmt_single_line: DIM var_name '=' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 230
    basic_literal  go to state 70


State 287

  100 if_stmt_single_line: IF expr THEN . single_line_stmt
  101                    | IF expr THEN . single_line_stmt ELSE single_line_stmt

    IDENTIFIER  shift, and go to state 232
    CONST       shift, and go to state 233
    DIM         shift, and go to state 234
    IF          shift, and go to state 235
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    single_line_stmt          go to state 236
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    if_stmt_single_line       go to state 127
    function_call_singleline  go to state 130


State 288

  101 if_stmt_single_line: IF expr THEN single_line_stmt ELSE single_line_stmt .

    $default  reduce using rule 101 (if_stmt_single_line)


State 289

   94 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list END . IF

    IF  shift, and go to state 307


State 290

   98 elseif_list: ELSEIF . expr THEN stmt_list

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 308
    basic_literal  go to state 70


State 291

   95 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list ELSE . stmt_list END IF

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt_list                 go to state 309
    stmt                      go to state 114
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 292

   96 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list . END IF
   97                   | IF expr THEN stmt_ends stmt_list elseif_list . ELSE stmt_list END IF
   99 elseif_list: elseif_list . ELSEIF expr THEN stmt_list

    END     shift, and go to state 310
    ELSEIF  shift, and go to state 311
    ELSE    shift, and go to state 312


State 293

  106 case_stmt: CASE IS . expr stmt_ends stmt_list

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 313
    basic_literal  go to state 70


State 294

  108 case_stmt: CASE ELSE . stmt_ends stmt_list

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 314


State 295

  105 case_stmt: CASE expr . stmt_ends stmt_list
  107          | CASE expr . TO expr stmt_ends stmt_list
  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    TO             shift, and go to state 315
    END_OF_LINE    shift, and go to state 20
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    stmt_ends  go to state 316


State 296

  102 select_stmt: SELECT CASE expr stmt_ends case_list END . SELECT

    SELECT  shift, and go to state 317


State 297

  104 case_list: case_list case_stmt .

    $default  reduce using rule 104 (case_list)


State 298

   91 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal . TO basic_literal stmt_ends stmt_list NEXT
   92              | FOR IDENTIFIER AS basic_literal '=' basic_literal . TO basic_literal STEP basic_literal stmt_ends stmt_list NEXT

    TO  shift, and go to state 318


State 299

   93 for_each_loop_stmt: FOR EACH IDENTIFIER AS basic_literal IN . IDENTIFIER stmt_ends stmt_list NEXT

    IDENTIFIER  shift, and go to state 319


State 300

   68 decl_stmt_single_line: access SUB var_name stmt_list END SUB .

    $default  reduce using rule 68 (decl_stmt_single_line)


State 301

   27 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB .

    $default  reduce using rule 27 (sub_bloc)


State 302

   23 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION .

    $default  reduce using rule 23 (function)


State 303

   65 decl_stmt: CONST var_name AS basic_literal '=' END_OF_LINE expr .
  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 65 (decl_stmt)


State 304

   66 decl_stmt: DIM var_name AS basic_literal '=' END_OF_LINE expr .
  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 66 (decl_stmt)


State 305

   69 decl_stmt_single_line: CONST var_name AS basic_literal . '=' expr

    '='  shift, and go to state 320


State 306

   70 decl_stmt_single_line: DIM var_name AS basic_literal . '=' expr
   71                      | DIM var_name AS basic_literal .

    '='  shift, and go to state 321

    $default  reduce using rule 71 (decl_stmt_single_line)


State 307

   94 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list END IF .

    $default  reduce using rule 94 (if_stmt_multi_line)


State 308

   98 elseif_list: ELSEIF expr . THEN stmt_list
  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99
    THEN           shift, and go to state 322


State 309

   47 stmt_list: stmt_list . stmt
   95 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list ELSE stmt_list . END IF

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 323
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                      go to state 179
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 310

   96 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list END . IF

    IF  shift, and go to state 324


State 311

   99 elseif_list: elseif_list ELSEIF . expr THEN stmt_list

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 325
    basic_literal  go to state 70


State 312

   97 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list ELSE . stmt_list END IF

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt_list                 go to state 326
    stmt                      go to state 114
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 313

  106 case_stmt: CASE IS expr . stmt_ends stmt_list
  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    END_OF_LINE    shift, and go to state 20
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    stmt_ends  go to state 327


State 314

   64 stmt_ends: stmt_ends . END_OF_LINE
  108 case_stmt: CASE ELSE stmt_ends . stmt_list

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list                 go to state 328
    stmt                      go to state 114
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 315

  107 case_stmt: CASE expr TO . expr stmt_ends stmt_list

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 329
    basic_literal  go to state 70


State 316

   64 stmt_ends: stmt_ends . END_OF_LINE
  105 case_stmt: CASE expr stmt_ends . stmt_list

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list                 go to state 330
    stmt                      go to state 114
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 317

  102 select_stmt: SELECT CASE expr stmt_ends case_list END SELECT .

    $default  reduce using rule 102 (select_stmt)


State 318

   91 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO . basic_literal stmt_ends stmt_list NEXT
   92              | FOR IDENTIFIER AS basic_literal '=' basic_literal TO . basic_literal STEP basic_literal stmt_ends stmt_list NEXT

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 331


State 319

   93 for_each_loop_stmt: FOR EACH IDENTIFIER AS basic_literal IN IDENTIFIER . stmt_ends stmt_list NEXT

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 332


State 320

   69 decl_stmt_single_line: CONST var_name AS basic_literal '=' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 278
    basic_literal  go to state 70


State 321

   70 decl_stmt_single_line: DIM var_name AS basic_literal '=' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 280
    basic_literal  go to state 70


State 322

   98 elseif_list: ELSEIF expr THEN . stmt_list

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt_list                 go to state 333
    stmt                      go to state 114
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 323

   95 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list ELSE stmt_list END . IF

    IF  shift, and go to state 334


State 324

   96 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list END IF .

    $default  reduce using rule 96 (if_stmt_multi_line)


State 325

   99 elseif_list: elseif_list ELSEIF expr . THEN stmt_list
  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99
    THEN           shift, and go to state 335


State 326

   47 stmt_list: stmt_list . stmt
   97 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list ELSE stmt_list . END IF

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 336
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                      go to state 179
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 327

   64 stmt_ends: stmt_ends . END_OF_LINE
  106 case_stmt: CASE IS expr stmt_ends . stmt_list

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list                 go to state 337
    stmt                      go to state 114
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 328

   47 stmt_list: stmt_list . stmt
  108 case_stmt: CASE ELSE stmt_ends stmt_list .

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    $default  reduce using rule 108 (case_stmt)

    stmt                      go to state 179
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 329

  107 case_stmt: CASE expr TO expr . stmt_ends stmt_list
  114 expr: expr . '+' expr
  115     | expr . '-' expr
  116     | expr . '*' expr
  117     | expr . '/' expr
  118     | expr . INT_DIV expr
  119     | expr . '=' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | expr . '^' expr
  123     | expr . NOT_EQUAL expr
  124     | expr . LESS_OR_EQUAL expr
  125     | expr . MORE_OR_EQUAL expr
  126     | expr . '&' expr

    END_OF_LINE    shift, and go to state 20
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    stmt_ends  go to state 338


State 330

   47 stmt_list: stmt_list . stmt
  105 case_stmt: CASE expr stmt_ends stmt_list .

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    $default  reduce using rule 105 (case_stmt)

    stmt                      go to state 179
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 331

   91 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal . stmt_ends stmt_list NEXT
   92              | FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal . STEP basic_literal stmt_ends stmt_list NEXT

    STEP         shift, and go to state 339
    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 340


State 332

   64 stmt_ends: stmt_ends . END_OF_LINE
   93 for_each_loop_stmt: FOR EACH IDENTIFIER AS basic_literal IN IDENTIFIER stmt_ends . stmt_list NEXT

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list                 go to state 341
    stmt                      go to state 114
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 333

   47 stmt_list: stmt_list . stmt
   98 elseif_list: ELSEIF expr THEN stmt_list .

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    $default  reduce using rule 98 (elseif_list)

    stmt                      go to state 179
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 334

   95 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list ELSE stmt_list END IF .

    $default  reduce using rule 95 (if_stmt_multi_line)


State 335

   99 elseif_list: elseif_list ELSEIF expr THEN . stmt_list

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt_list                 go to state 342
    stmt                      go to state 114
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 336

   97 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list ELSE stmt_list END . IF

    IF  shift, and go to state 343


State 337

   47 stmt_list: stmt_list . stmt
  106 case_stmt: CASE IS expr stmt_ends stmt_list .

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    $default  reduce using rule 106 (case_stmt)

    stmt                      go to state 179
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 338

   64 stmt_ends: stmt_ends . END_OF_LINE
  107 case_stmt: CASE expr TO expr stmt_ends . stmt_list

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list                 go to state 344
    stmt                      go to state 114
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 339

   92 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal STEP . basic_literal stmt_ends stmt_list NEXT

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 345


State 340

   64 stmt_ends: stmt_ends . END_OF_LINE
   91 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal stmt_ends . stmt_list NEXT

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list                 go to state 346
    stmt                      go to state 114
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 341

   47 stmt_list: stmt_list . stmt
   93 for_each_loop_stmt: FOR EACH IDENTIFIER AS basic_literal IN IDENTIFIER stmt_ends stmt_list . NEXT

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    NEXT        shift, and go to state 347
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                      go to state 179
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 342

   47 stmt_list: stmt_list . stmt
   99 elseif_list: elseif_list ELSEIF expr THEN stmt_list .

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    $default  reduce using rule 99 (elseif_list)

    stmt                      go to state 179
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 343

   97 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list ELSE stmt_list END IF .

    $default  reduce using rule 97 (if_stmt_multi_line)


State 344

   47 stmt_list: stmt_list . stmt
  107 case_stmt: CASE expr TO expr stmt_ends stmt_list .

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    $default  reduce using rule 107 (case_stmt)

    stmt                      go to state 179
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 345

   92 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal STEP basic_literal . stmt_ends stmt_list NEXT

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 348


State 346

   47 stmt_list: stmt_list . stmt
   91 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal stmt_ends stmt_list . NEXT

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    NEXT        shift, and go to state 349
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                      go to state 179
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 347

   93 for_each_loop_stmt: FOR EACH IDENTIFIER AS basic_literal IN IDENTIFIER stmt_ends stmt_list NEXT .

    $default  reduce using rule 93 (for_each_loop_stmt)


State 348

   64 stmt_ends: stmt_ends . END_OF_LINE
   92 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal STEP basic_literal stmt_ends . stmt_list NEXT

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list                 go to state 350
    stmt                      go to state 114
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 349

   91 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal stmt_ends stmt_list NEXT .

    $default  reduce using rule 91 (for_loop_stmt)


State 350

   47 stmt_list: stmt_list . stmt
   92 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal STEP basic_literal stmt_ends stmt_list . NEXT

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    NEXT        shift, and go to state 351
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                      go to state 179
    single_line_stmt          go to state 115
    multi_line_stmt           go to state 116
    decl_stmt                 go to state 117
    decl_stmt_single_line     go to state 118
    access                    go to state 119
    assign_stmt_singleline    go to state 120
    assign_stmt_multiline     go to state 121
    while_stmt                go to state 122
    do_loop_stmt              go to state 123
    for_loop_stmt             go to state 124
    for_each_loop_stmt        go to state 125
    if_stmt_multi_line        go to state 126
    if_stmt_single_line       go to state 127
    select_stmt               go to state 128
    function_call_multiline   go to state 129
    function_call_singleline  go to state 130


State 351

   92 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal STEP basic_literal stmt_ends stmt_list NEXT .

    $default  reduce using rule 92 (for_loop_stmt)
