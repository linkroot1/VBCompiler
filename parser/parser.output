Nonterminals useless in grammar

    single_line_stmt
    if_stmt_single_line


Terminals unused in grammar

    ENDL
    ASSIGN_CONSTRUCT
    ASSIGN_MULT
    ASSIGN_ORD_DIV
    ASSIGN_INT_DIV
    ASSIGN_ADD
    ASSIGN_SUB
    ASSIGN_LSHIFT
    ASSIGN_RSHIFT
    ASSIGN_CONCAT


Rules useless in grammar

  128 stmt: single_line_stmt stmt_ends

  129 single_line_stmt: if_stmt_single_line

  130 if_stmt_single_line: IF expr THEN single_line_stmt
  131                    | IF expr THEN single_line_stmt ELSE single_line_stmt


Grammar

    0 $accept: root $end

    1 root: program_items_list

    2 program_items_list: %empty
    3                   | program_items_list_not_empty

    4 program_items_list_not_empty: program_item
    5                             | program_items_list_not_empty program_item

    6 program_item: module
    7             | IMPORTS IDENTIFIER stmt_ends

    8 module: MODULE IDENTIFIER stmt_ends END MODULE
    9       | MODULE IDENTIFIER stmt_ends functions_and_sub_list END MODULE
   10       | access MODULE IDENTIFIER stmt_ends END MODULE
   11       | access MODULE IDENTIFIER stmt_ends functions_and_sub_list END MODULE

   12 functions_and_sub_list: function_or_sub
   13                       | functions_and_sub_list stmt_ends function_or_sub

   14 function_or_sub: function
   15                | sub_bloc

   16 function: FUNCTION IDENTIFIER arguments stmt_ends END FUNCTION
   17         | FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION
   18         | FUNCTION IDENTIFIER arguments stmt_ends stmt_list END FUNCTION
   19         | FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION
   20         | access FUNCTION IDENTIFIER arguments stmt_ends END FUNCTION
   21         | access FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION
   22         | access FUNCTION IDENTIFIER arguments stmt_ends stmt_list END FUNCTION
   23         | access FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION

   24 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB
   25         | SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB
   26         | access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB
   27         | access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

   28 parameterlist_or_empty: %empty
   29                       | parameterlist_with_type
   30                       | END_OF_LINE parameterlist_with_type END_OF_LINE
   31                       | END_OF_LINE parameterlist_with_type
   32                       | parameterlist_with_type END_OF_LINE
   33                       | parameterlist_without_type
   34                       | END_OF_LINE parameterlist_without_type END_OF_LINE
   35                       | parameterlist_without_type END_OF_LINE
   36                       | END_OF_LINE parameterlist_without_type

   37 parameterlist_with_type: parameter_with_type
   38                        | parameterlist_with_type ',' parameter_with_type
   39                        | parameterlist_with_type ',' END_OF_LINE parameter_with_type

   40 parameterlist_without_type: parameter_without_type
   41                           | parameterlist_without_type ',' parameter_without_type
   42                           | parameterlist_without_type ',' END_OF_LINE parameter_without_type

   43 parameter_with_type: IDENTIFIER AS basic_literal
   44                    | IDENTIFIER AS basic_literal '(' ')'

   45 parameter_without_type: IDENTIFIER

   46 stmt_list: stmt
   47          | stmt_list stmt

   48 stmt: multi_line_stmt

   49 multi_line_stmt: decl_stmt stmt_ends
   50                | assign_stmt stmt_ends
   51                | while_stmt stmt_ends
   52                | do_loop_stmt
   53                | select_stmt stmt_ends
   54                | if_stmt_multi_line stmt_ends

   55 stmt_ends: END_OF_LINE
   56          | stmt_ends END_OF_LINE

   57 decl_stmt: access SUB var_name stmt_list END SUB
   58          | CONST var_name AS basic_literal '=' END_OF_LINE expr
   59          | CONST var_name AS basic_literal '=' expr
   60          | DIM var_name AS basic_literal '=' END_OF_LINE expr
   61          | DIM var_name AS basic_literal '=' expr
   62          | DIM var_name AS basic_literal
   63          | DIM var_name '=' END_OF_LINE expr
   64          | DIM var_name '=' expr
   65          | DIM var_name

   66 var_name: IDENTIFIER '(' expr ')'
   67         | IDENTIFIER

   68 access: PUBLIC
   69       | PROTECTED
   70       | FRIEND
   71       | PRIVATE
   72       | PROTECTED FRIEND
   73       | PRIVATE FRIEND

   74 assign_stmt: IDENTIFIER '=' expr
   75            | IDENTIFIER '=' IDENTIFIER
   76            | IDENTIFIER '=' function_calls

   77 while_stmt: WHILE expr stmt_ends stmt_list END WHILE

   78 do_loop_stmt: DO do_loop_condition stmt_ends stmt_list LOOP
   79             | DO stmt_ends stmt_list LOOP do_loop_condition

   80 do_loop_condition: UNTIL expr
   81                  | WHILE expr

   82 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list END IF
   83                   | IF expr THEN stmt_ends stmt_list ELSE stmt_list END IF
   84                   | IF expr THEN stmt_ends stmt_list elseif_list END IF
   85                   | IF expr THEN stmt_ends stmt_list elseif_list ELSE stmt_list END IF

   86 elseif_list: ELSEIF expr THEN stmt_list
   87            | elseif_list ELSEIF expr THEN stmt_list

   88 select_stmt: SELECT CASE expr stmt_ends case_list END SELECT

   89 case_list: case_stmt
   90          | case_list case_stmt

   91 case_stmt: CASE expr stmt_ends stmt_list
   92          | CASE IS expr stmt_ends stmt_list
   93          | CASE expr TO expr stmt_ends stmt_list
   94          | CASE ELSE stmt_ends stmt_list

   95 function_call_multiline: IDENTIFIER arguments_multiline

   96 function_call_singleline: IDENTIFIER arguments_singleline

   97 function_calls: function_call_multiline
   98               | function_call_singleline

   99 expr: basic_literal
  100     | '-' expr
  101     | '+' expr
  102     | expr '+' expr
  103     | expr '-' expr
  104     | expr '*' expr
  105     | expr '/' expr
  106     | expr INT_DIV expr
  107     | expr '=' expr
  108     | expr '<' expr
  109     | expr '>' expr
  110     | expr '^' expr
  111     | expr NOT_EQUAL expr
  112     | expr LESS_OR_EQUAL expr
  113     | expr MORE_OR_EQUAL expr
  114     | expr '&' expr

  115 basic_literal: INT
  116              | STRING
  117              | BOOLEAN
  118              | DOUBLE

  119 arguments_multiline: '(' END_OF_LINE expr_list ')'
  120                    | '(' END_OF_LINE expr_list END_OF_LINE ')'
  121                    | '(' expr_list END_OF_LINE ')'

  122 arguments_singleline: '(' expr_list ')'
  123                     | '(' ')'

  124 arguments: arguments_multiline
  125          | arguments_singleline

  126 expr_list: expr
  127          | expr_list ',' expr


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 114
    '(' (40) 24 25 26 27 44 66 119 120 121 122 123
    ')' (41) 24 25 26 27 44 66 119 120 121 122 123
    '*' (42) 104
    '+' (43) 101 102
    ',' (44) 38 39 41 42 127
    '-' (45) 100 103
    '/' (47) 105
    '<' (60) 108
    '=' (61) 58 59 60 61 63 64 74 75 76 107
    '>' (62) 109
    '^' (94) 110
    error (256)
    INT <int_val> (258) 115
    DOUBLE <double_val> (259) 118
    STRING <str_val> (260) 116
    BOOLEAN <bool_val> (261) 117
    IDENTIFIER <id_name> (262) 7 8 9 10 11 16 17 18 19 20 21 22 23 24 25 26 27 43 44 45 66 67 74 75 76 95 96
    ENDL (263)
    SUB (264) 24 25 26 27 57
    END (265) 8 9 10 11 16 17 18 19 20 21 22 23 24 25 26 27 57 77 82 83 84 85 88
    CONST (266) 58 59
    DIM (267) 60 61 62 63 64 65
    AS (268) 43 44 58 59 60 61 62
    WHILE (269) 77 81
    IF (270) 82 83 84 85
    THEN (271) 82 83 84 85 86 87
    ELSE (272) 83 85 94
    ELSEIF (273) 86 87
    SELECT (274) 88
    CASE (275) 88 91 92 93 94
    IS (276) 92
    TO (277) 93
    IMPORTS (278) 7
    MODULE (279) 8 9 10 11
    FUNCTION (280) 16 17 18 19 20 21 22 23
    RETURN (281) 17 19 21 23
    DO (282) 78 79
    LOOP (283) 78 79
    UNTIL (284) 80
    END_OF_LINE (285) 30 31 32 34 35 36 39 42 55 56 58 60 63 119 120 121
    UNARY_MINUS (286)
    UNARY_PLUS (287)
    ASSIGN_CONSTRUCT (288)
    ASSIGN_MULT (289)
    ASSIGN_ORD_DIV (290)
    ASSIGN_INT_DIV (291)
    ASSIGN_ADD (292)
    ASSIGN_SUB (293)
    ASSIGN_LSHIFT (294)
    ASSIGN_RSHIFT (295)
    ASSIGN_CONCAT (296)
    PRIVATE (297) 71 73
    PROTECTED (298) 69 72
    PUBLIC (299) 68
    FRIEND (300) 70 72 73
    INT_DIV (301) 106
    NOT_EQUAL (302) 111
    LESS_OR_EQUAL (303) 112
    MORE_OR_EQUAL (304) 113


Nonterminals, with rules where they appear

    $accept (62)
        on left: 0
    root (63)
        on left: 1
        on right: 0
    program_items_list (64)
        on left: 2 3
        on right: 1
    program_items_list_not_empty (65)
        on left: 4 5
        on right: 3 5
    program_item (66)
        on left: 6 7
        on right: 4 5
    module (67)
        on left: 8 9 10 11
        on right: 6
    functions_and_sub_list (68)
        on left: 12 13
        on right: 9 11 13
    function_or_sub (69)
        on left: 14 15
        on right: 12 13
    function (70)
        on left: 16 17 18 19 20 21 22 23
        on right: 14
    sub_bloc (71)
        on left: 24 25 26 27
        on right: 15
    parameterlist_or_empty (72)
        on left: 28 29 30 31 32 33 34 35 36
        on right: 24 25 26 27
    parameterlist_with_type (73)
        on left: 37 38 39
        on right: 29 30 31 32 38 39
    parameterlist_without_type (74)
        on left: 40 41 42
        on right: 33 34 35 36 41 42
    parameter_with_type (75)
        on left: 43 44
        on right: 37 38 39
    parameter_without_type (76)
        on left: 45
        on right: 40 41 42
    stmt_list (77)
        on left: 46 47
        on right: 18 19 22 23 25 27 47 57 77 78 79 82 83 84 85 86 87 91 92 93 94
    stmt (78)
        on left: 48
        on right: 46 47
    multi_line_stmt (79)
        on left: 49 50 51 52 53 54
        on right: 48
    stmt_ends (80)
        on left: 55 56
        on right: 7 8 9 10 11 13 16 17 18 19 20 21 22 23 24 25 26 27 49 50 51 53 54 56 77 78 79 82 83 84 85 88 91 92 93 94
    decl_stmt (81)
        on left: 57 58 59 60 61 62 63 64 65
        on right: 49
    var_name (82)
        on left: 66 67
        on right: 57 58 59 60 61 62 63 64 65
    access (83)
        on left: 68 69 70 71 72 73
        on right: 10 11 20 21 22 23 26 27 57
    assign_stmt (84)
        on left: 74 75 76
        on right: 50
    while_stmt (85)
        on left: 77
        on right: 51
    do_loop_stmt (86)
        on left: 78 79
        on right: 52
    do_loop_condition (87)
        on left: 80 81
        on right: 78 79
    if_stmt_multi_line (88)
        on left: 82 83 84 85
        on right: 54
    elseif_list (89)
        on left: 86 87
        on right: 84 85 87
    select_stmt (90)
        on left: 88
        on right: 53
    case_list (91)
        on left: 89 90
        on right: 88 90
    case_stmt (92)
        on left: 91 92 93 94
        on right: 89 90
    function_call_multiline (93)
        on left: 95
        on right: 97
    function_call_singleline (94)
        on left: 96
        on right: 98
    function_calls (95)
        on left: 97 98
        on right: 76
    expr (96)
        on left: 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114
        on right: 17 19 21 23 58 59 60 61 63 64 66 74 77 80 81 82 83 84 85 86 87 88 91 92 93 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 126 127
    basic_literal (97)
        on left: 115 116 117 118
        on right: 43 44 58 59 60 61 62 99
    arguments_multiline (98)
        on left: 119 120 121
        on right: 95 124
    arguments_singleline (99)
        on left: 122 123
        on right: 96 125
    arguments (100)
        on left: 124 125
        on right: 16 17 18 19 20 21 22 23
    expr_list (101)
        on left: 126 127
        on right: 119 120 121 122 127


State 0

    0 $accept: . root $end

    IMPORTS    shift, and go to state 1
    MODULE     shift, and go to state 2
    PRIVATE    shift, and go to state 3
    PROTECTED  shift, and go to state 4
    PUBLIC     shift, and go to state 5
    FRIEND     shift, and go to state 6

    $default  reduce using rule 2 (program_items_list)

    root                          go to state 7
    program_items_list            go to state 8
    program_items_list_not_empty  go to state 9
    program_item                  go to state 10
    module                        go to state 11
    access                        go to state 12


State 1

    7 program_item: IMPORTS . IDENTIFIER stmt_ends

    IDENTIFIER  shift, and go to state 13


State 2

    8 module: MODULE . IDENTIFIER stmt_ends END MODULE
    9       | MODULE . IDENTIFIER stmt_ends functions_and_sub_list END MODULE

    IDENTIFIER  shift, and go to state 14


State 3

   71 access: PRIVATE .
   73       | PRIVATE . FRIEND

    FRIEND  shift, and go to state 15

    $default  reduce using rule 71 (access)


State 4

   69 access: PROTECTED .
   72       | PROTECTED . FRIEND

    FRIEND  shift, and go to state 16

    $default  reduce using rule 69 (access)


State 5

   68 access: PUBLIC .

    $default  reduce using rule 68 (access)


State 6

   70 access: FRIEND .

    $default  reduce using rule 70 (access)


State 7

    0 $accept: root . $end

    $end  shift, and go to state 17


State 8

    1 root: program_items_list .

    $default  reduce using rule 1 (root)


State 9

    3 program_items_list: program_items_list_not_empty .
    5 program_items_list_not_empty: program_items_list_not_empty . program_item

    IMPORTS    shift, and go to state 1
    MODULE     shift, and go to state 2
    PRIVATE    shift, and go to state 3
    PROTECTED  shift, and go to state 4
    PUBLIC     shift, and go to state 5
    FRIEND     shift, and go to state 6

    $default  reduce using rule 3 (program_items_list)

    program_item  go to state 18
    module        go to state 11
    access        go to state 12


State 10

    4 program_items_list_not_empty: program_item .

    $default  reduce using rule 4 (program_items_list_not_empty)


State 11

    6 program_item: module .

    $default  reduce using rule 6 (program_item)


State 12

   10 module: access . MODULE IDENTIFIER stmt_ends END MODULE
   11       | access . MODULE IDENTIFIER stmt_ends functions_and_sub_list END MODULE

    MODULE  shift, and go to state 19


State 13

    7 program_item: IMPORTS IDENTIFIER . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 21


State 14

    8 module: MODULE IDENTIFIER . stmt_ends END MODULE
    9       | MODULE IDENTIFIER . stmt_ends functions_and_sub_list END MODULE

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 22


State 15

   73 access: PRIVATE FRIEND .

    $default  reduce using rule 73 (access)


State 16

   72 access: PROTECTED FRIEND .

    $default  reduce using rule 72 (access)


State 17

    0 $accept: root $end .

    $default  accept


State 18

    5 program_items_list_not_empty: program_items_list_not_empty program_item .

    $default  reduce using rule 5 (program_items_list_not_empty)


State 19

   10 module: access MODULE . IDENTIFIER stmt_ends END MODULE
   11       | access MODULE . IDENTIFIER stmt_ends functions_and_sub_list END MODULE

    IDENTIFIER  shift, and go to state 23


State 20

   55 stmt_ends: END_OF_LINE .

    $default  reduce using rule 55 (stmt_ends)


State 21

    7 program_item: IMPORTS IDENTIFIER stmt_ends .
   56 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 7 (program_item)


State 22

    8 module: MODULE IDENTIFIER stmt_ends . END MODULE
    9       | MODULE IDENTIFIER stmt_ends . functions_and_sub_list END MODULE
   56 stmt_ends: stmt_ends . END_OF_LINE

    SUB          shift, and go to state 25
    END          shift, and go to state 26
    FUNCTION     shift, and go to state 27
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    functions_and_sub_list  go to state 28
    function_or_sub         go to state 29
    function                go to state 30
    sub_bloc                go to state 31
    access                  go to state 32


State 23

   10 module: access MODULE IDENTIFIER . stmt_ends END MODULE
   11       | access MODULE IDENTIFIER . stmt_ends functions_and_sub_list END MODULE

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 33


State 24

   56 stmt_ends: stmt_ends END_OF_LINE .

    $default  reduce using rule 56 (stmt_ends)


State 25

   24 sub_bloc: SUB . IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB
   25         | SUB . IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    IDENTIFIER  shift, and go to state 34


State 26

    8 module: MODULE IDENTIFIER stmt_ends END . MODULE

    MODULE  shift, and go to state 35


State 27

   16 function: FUNCTION . IDENTIFIER arguments stmt_ends END FUNCTION
   17         | FUNCTION . IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION
   18         | FUNCTION . IDENTIFIER arguments stmt_ends stmt_list END FUNCTION
   19         | FUNCTION . IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION

    IDENTIFIER  shift, and go to state 36


State 28

    9 module: MODULE IDENTIFIER stmt_ends functions_and_sub_list . END MODULE
   13 functions_and_sub_list: functions_and_sub_list . stmt_ends function_or_sub

    END          shift, and go to state 37
    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 38


State 29

   12 functions_and_sub_list: function_or_sub .

    $default  reduce using rule 12 (functions_and_sub_list)


State 30

   14 function_or_sub: function .

    $default  reduce using rule 14 (function_or_sub)


State 31

   15 function_or_sub: sub_bloc .

    $default  reduce using rule 15 (function_or_sub)


State 32

   20 function: access . FUNCTION IDENTIFIER arguments stmt_ends END FUNCTION
   21         | access . FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION
   22         | access . FUNCTION IDENTIFIER arguments stmt_ends stmt_list END FUNCTION
   23         | access . FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION
   26 sub_bloc: access . SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB
   27         | access . SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    SUB       shift, and go to state 39
    FUNCTION  shift, and go to state 40


State 33

   10 module: access MODULE IDENTIFIER stmt_ends . END MODULE
   11       | access MODULE IDENTIFIER stmt_ends . functions_and_sub_list END MODULE
   56 stmt_ends: stmt_ends . END_OF_LINE

    SUB          shift, and go to state 25
    END          shift, and go to state 41
    FUNCTION     shift, and go to state 27
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    functions_and_sub_list  go to state 42
    function_or_sub         go to state 29
    function                go to state 30
    sub_bloc                go to state 31
    access                  go to state 32


State 34

   24 sub_bloc: SUB IDENTIFIER . '(' parameterlist_or_empty ')' stmt_ends END SUB
   25         | SUB IDENTIFIER . '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    '('  shift, and go to state 43


State 35

    8 module: MODULE IDENTIFIER stmt_ends END MODULE .

    $default  reduce using rule 8 (module)


State 36

   16 function: FUNCTION IDENTIFIER . arguments stmt_ends END FUNCTION
   17         | FUNCTION IDENTIFIER . arguments stmt_ends RETURN expr END FUNCTION
   18         | FUNCTION IDENTIFIER . arguments stmt_ends stmt_list END FUNCTION
   19         | FUNCTION IDENTIFIER . arguments stmt_ends stmt_list RETURN expr END FUNCTION

    '('  shift, and go to state 44

    arguments_multiline   go to state 45
    arguments_singleline  go to state 46
    arguments             go to state 47


State 37

    9 module: MODULE IDENTIFIER stmt_ends functions_and_sub_list END . MODULE

    MODULE  shift, and go to state 48


State 38

   13 functions_and_sub_list: functions_and_sub_list stmt_ends . function_or_sub
   56 stmt_ends: stmt_ends . END_OF_LINE

    SUB          shift, and go to state 25
    FUNCTION     shift, and go to state 27
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    function_or_sub  go to state 49
    function         go to state 30
    sub_bloc         go to state 31
    access           go to state 32


State 39

   26 sub_bloc: access SUB . IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB
   27         | access SUB . IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    IDENTIFIER  shift, and go to state 50


State 40

   20 function: access FUNCTION . IDENTIFIER arguments stmt_ends END FUNCTION
   21         | access FUNCTION . IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION
   22         | access FUNCTION . IDENTIFIER arguments stmt_ends stmt_list END FUNCTION
   23         | access FUNCTION . IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION

    IDENTIFIER  shift, and go to state 51


State 41

   10 module: access MODULE IDENTIFIER stmt_ends END . MODULE

    MODULE  shift, and go to state 52


State 42

   11 module: access MODULE IDENTIFIER stmt_ends functions_and_sub_list . END MODULE
   13 functions_and_sub_list: functions_and_sub_list . stmt_ends function_or_sub

    END          shift, and go to state 53
    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 38


State 43

   24 sub_bloc: SUB IDENTIFIER '(' . parameterlist_or_empty ')' stmt_ends END SUB
   25         | SUB IDENTIFIER '(' . parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    IDENTIFIER   shift, and go to state 54
    END_OF_LINE  shift, and go to state 55

    $default  reduce using rule 28 (parameterlist_or_empty)

    parameterlist_or_empty      go to state 56
    parameterlist_with_type     go to state 57
    parameterlist_without_type  go to state 58
    parameter_with_type         go to state 59
    parameter_without_type      go to state 60


State 44

  119 arguments_multiline: '(' . END_OF_LINE expr_list ')'
  120                    | '(' . END_OF_LINE expr_list END_OF_LINE ')'
  121                    | '(' . expr_list END_OF_LINE ')'
  122 arguments_singleline: '(' . expr_list ')'
  123                     | '(' . ')'

    INT          shift, and go to state 61
    DOUBLE       shift, and go to state 62
    STRING       shift, and go to state 63
    BOOLEAN      shift, and go to state 64
    END_OF_LINE  shift, and go to state 65
    '+'          shift, and go to state 66
    '-'          shift, and go to state 67
    ')'          shift, and go to state 68

    expr           go to state 69
    basic_literal  go to state 70
    expr_list      go to state 71


State 45

  124 arguments: arguments_multiline .

    $default  reduce using rule 124 (arguments)


State 46

  125 arguments: arguments_singleline .

    $default  reduce using rule 125 (arguments)


State 47

   16 function: FUNCTION IDENTIFIER arguments . stmt_ends END FUNCTION
   17         | FUNCTION IDENTIFIER arguments . stmt_ends RETURN expr END FUNCTION
   18         | FUNCTION IDENTIFIER arguments . stmt_ends stmt_list END FUNCTION
   19         | FUNCTION IDENTIFIER arguments . stmt_ends stmt_list RETURN expr END FUNCTION

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 72


State 48

    9 module: MODULE IDENTIFIER stmt_ends functions_and_sub_list END MODULE .

    $default  reduce using rule 9 (module)


State 49

   13 functions_and_sub_list: functions_and_sub_list stmt_ends function_or_sub .

    $default  reduce using rule 13 (functions_and_sub_list)


State 50

   26 sub_bloc: access SUB IDENTIFIER . '(' parameterlist_or_empty ')' stmt_ends END SUB
   27         | access SUB IDENTIFIER . '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    '('  shift, and go to state 73


State 51

   20 function: access FUNCTION IDENTIFIER . arguments stmt_ends END FUNCTION
   21         | access FUNCTION IDENTIFIER . arguments stmt_ends RETURN expr END FUNCTION
   22         | access FUNCTION IDENTIFIER . arguments stmt_ends stmt_list END FUNCTION
   23         | access FUNCTION IDENTIFIER . arguments stmt_ends stmt_list RETURN expr END FUNCTION

    '('  shift, and go to state 44

    arguments_multiline   go to state 45
    arguments_singleline  go to state 46
    arguments             go to state 74


State 52

   10 module: access MODULE IDENTIFIER stmt_ends END MODULE .

    $default  reduce using rule 10 (module)


State 53

   11 module: access MODULE IDENTIFIER stmt_ends functions_and_sub_list END . MODULE

    MODULE  shift, and go to state 75


State 54

   43 parameter_with_type: IDENTIFIER . AS basic_literal
   44                    | IDENTIFIER . AS basic_literal '(' ')'
   45 parameter_without_type: IDENTIFIER .

    AS  shift, and go to state 76

    $default  reduce using rule 45 (parameter_without_type)


State 55

   30 parameterlist_or_empty: END_OF_LINE . parameterlist_with_type END_OF_LINE
   31                       | END_OF_LINE . parameterlist_with_type
   34                       | END_OF_LINE . parameterlist_without_type END_OF_LINE
   36                       | END_OF_LINE . parameterlist_without_type

    IDENTIFIER  shift, and go to state 54

    parameterlist_with_type     go to state 77
    parameterlist_without_type  go to state 78
    parameter_with_type         go to state 59
    parameter_without_type      go to state 60


State 56

   24 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty . ')' stmt_ends END SUB
   25         | SUB IDENTIFIER '(' parameterlist_or_empty . ')' stmt_ends stmt_list END SUB

    ')'  shift, and go to state 79


State 57

   29 parameterlist_or_empty: parameterlist_with_type .
   32                       | parameterlist_with_type . END_OF_LINE
   38 parameterlist_with_type: parameterlist_with_type . ',' parameter_with_type
   39                        | parameterlist_with_type . ',' END_OF_LINE parameter_with_type

    END_OF_LINE  shift, and go to state 80
    ','          shift, and go to state 81

    $default  reduce using rule 29 (parameterlist_or_empty)


State 58

   33 parameterlist_or_empty: parameterlist_without_type .
   35                       | parameterlist_without_type . END_OF_LINE
   41 parameterlist_without_type: parameterlist_without_type . ',' parameter_without_type
   42                           | parameterlist_without_type . ',' END_OF_LINE parameter_without_type

    END_OF_LINE  shift, and go to state 82
    ','          shift, and go to state 83

    $default  reduce using rule 33 (parameterlist_or_empty)


State 59

   37 parameterlist_with_type: parameter_with_type .

    $default  reduce using rule 37 (parameterlist_with_type)


State 60

   40 parameterlist_without_type: parameter_without_type .

    $default  reduce using rule 40 (parameterlist_without_type)


State 61

  115 basic_literal: INT .

    $default  reduce using rule 115 (basic_literal)


State 62

  118 basic_literal: DOUBLE .

    $default  reduce using rule 118 (basic_literal)


State 63

  116 basic_literal: STRING .

    $default  reduce using rule 116 (basic_literal)


State 64

  117 basic_literal: BOOLEAN .

    $default  reduce using rule 117 (basic_literal)


State 65

  119 arguments_multiline: '(' END_OF_LINE . expr_list ')'
  120                    | '(' END_OF_LINE . expr_list END_OF_LINE ')'

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 69
    basic_literal  go to state 70
    expr_list      go to state 84


State 66

  101 expr: '+' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 85
    basic_literal  go to state 70


State 67

  100 expr: '-' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 86
    basic_literal  go to state 70


State 68

  123 arguments_singleline: '(' ')' .

    $default  reduce using rule 123 (arguments_singleline)


State 69

  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr
  126 expr_list: expr .

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 126 (expr_list)


State 70

   99 expr: basic_literal .

    $default  reduce using rule 99 (expr)


State 71

  121 arguments_multiline: '(' expr_list . END_OF_LINE ')'
  122 arguments_singleline: '(' expr_list . ')'
  127 expr_list: expr_list . ',' expr

    END_OF_LINE  shift, and go to state 100
    ')'          shift, and go to state 101
    ','          shift, and go to state 102


State 72

   16 function: FUNCTION IDENTIFIER arguments stmt_ends . END FUNCTION
   17         | FUNCTION IDENTIFIER arguments stmt_ends . RETURN expr END FUNCTION
   18         | FUNCTION IDENTIFIER arguments stmt_ends . stmt_list END FUNCTION
   19         | FUNCTION IDENTIFIER arguments stmt_ends . stmt_list RETURN expr END FUNCTION
   56 stmt_ends: stmt_ends . END_OF_LINE

    IDENTIFIER   shift, and go to state 103
    END          shift, and go to state 104
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    RETURN       shift, and go to state 110
    DO           shift, and go to state 111
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 112
    stmt                go to state 113
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 73

   26 sub_bloc: access SUB IDENTIFIER '(' . parameterlist_or_empty ')' stmt_ends END SUB
   27         | access SUB IDENTIFIER '(' . parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    IDENTIFIER   shift, and go to state 54
    END_OF_LINE  shift, and go to state 55

    $default  reduce using rule 28 (parameterlist_or_empty)

    parameterlist_or_empty      go to state 122
    parameterlist_with_type     go to state 57
    parameterlist_without_type  go to state 58
    parameter_with_type         go to state 59
    parameter_without_type      go to state 60


State 74

   20 function: access FUNCTION IDENTIFIER arguments . stmt_ends END FUNCTION
   21         | access FUNCTION IDENTIFIER arguments . stmt_ends RETURN expr END FUNCTION
   22         | access FUNCTION IDENTIFIER arguments . stmt_ends stmt_list END FUNCTION
   23         | access FUNCTION IDENTIFIER arguments . stmt_ends stmt_list RETURN expr END FUNCTION

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 123


State 75

   11 module: access MODULE IDENTIFIER stmt_ends functions_and_sub_list END MODULE .

    $default  reduce using rule 11 (module)


State 76

   43 parameter_with_type: IDENTIFIER AS . basic_literal
   44                    | IDENTIFIER AS . basic_literal '(' ')'

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 124


State 77

   30 parameterlist_or_empty: END_OF_LINE parameterlist_with_type . END_OF_LINE
   31                       | END_OF_LINE parameterlist_with_type .
   38 parameterlist_with_type: parameterlist_with_type . ',' parameter_with_type
   39                        | parameterlist_with_type . ',' END_OF_LINE parameter_with_type

    END_OF_LINE  shift, and go to state 125
    ','          shift, and go to state 81

    $default  reduce using rule 31 (parameterlist_or_empty)


State 78

   34 parameterlist_or_empty: END_OF_LINE parameterlist_without_type . END_OF_LINE
   36                       | END_OF_LINE parameterlist_without_type .
   41 parameterlist_without_type: parameterlist_without_type . ',' parameter_without_type
   42                           | parameterlist_without_type . ',' END_OF_LINE parameter_without_type

    END_OF_LINE  shift, and go to state 126
    ','          shift, and go to state 83

    $default  reduce using rule 36 (parameterlist_or_empty)


State 79

   24 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' . stmt_ends END SUB
   25         | SUB IDENTIFIER '(' parameterlist_or_empty ')' . stmt_ends stmt_list END SUB

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 127


State 80

   32 parameterlist_or_empty: parameterlist_with_type END_OF_LINE .

    $default  reduce using rule 32 (parameterlist_or_empty)


State 81

   38 parameterlist_with_type: parameterlist_with_type ',' . parameter_with_type
   39                        | parameterlist_with_type ',' . END_OF_LINE parameter_with_type

    IDENTIFIER   shift, and go to state 128
    END_OF_LINE  shift, and go to state 129

    parameter_with_type  go to state 130


State 82

   35 parameterlist_or_empty: parameterlist_without_type END_OF_LINE .

    $default  reduce using rule 35 (parameterlist_or_empty)


State 83

   41 parameterlist_without_type: parameterlist_without_type ',' . parameter_without_type
   42                           | parameterlist_without_type ',' . END_OF_LINE parameter_without_type

    IDENTIFIER   shift, and go to state 131
    END_OF_LINE  shift, and go to state 132

    parameter_without_type  go to state 133


State 84

  119 arguments_multiline: '(' END_OF_LINE expr_list . ')'
  120                    | '(' END_OF_LINE expr_list . END_OF_LINE ')'
  127 expr_list: expr_list . ',' expr

    END_OF_LINE  shift, and go to state 134
    ')'          shift, and go to state 135
    ','          shift, and go to state 102


State 85

  101 expr: '+' expr .
  102     | expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 101 (expr)


State 86

  100 expr: '-' expr .
  102     | expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 100 (expr)


State 87

  110 expr: expr '^' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 136
    basic_literal  go to state 70


State 88

  104 expr: expr '*' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 137
    basic_literal  go to state 70


State 89

  105 expr: expr '/' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 138
    basic_literal  go to state 70


State 90

  106 expr: expr INT_DIV . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 139
    basic_literal  go to state 70


State 91

  102 expr: expr '+' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 140
    basic_literal  go to state 70


State 92

  103 expr: expr '-' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 141
    basic_literal  go to state 70


State 93

  107 expr: expr '=' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 142
    basic_literal  go to state 70


State 94

  111 expr: expr NOT_EQUAL . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 143
    basic_literal  go to state 70


State 95

  112 expr: expr LESS_OR_EQUAL . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 144
    basic_literal  go to state 70


State 96

  113 expr: expr MORE_OR_EQUAL . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 145
    basic_literal  go to state 70


State 97

  109 expr: expr '>' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 146
    basic_literal  go to state 70


State 98

  108 expr: expr '<' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 147
    basic_literal  go to state 70


State 99

  114 expr: expr '&' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 148
    basic_literal  go to state 70


State 100

  121 arguments_multiline: '(' expr_list END_OF_LINE . ')'

    ')'  shift, and go to state 149


State 101

  122 arguments_singleline: '(' expr_list ')' .

    $default  reduce using rule 122 (arguments_singleline)


State 102

  127 expr_list: expr_list ',' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 150
    basic_literal  go to state 70


State 103

   74 assign_stmt: IDENTIFIER . '=' expr
   75            | IDENTIFIER . '=' IDENTIFIER
   76            | IDENTIFIER . '=' function_calls

    '='  shift, and go to state 151


State 104

   16 function: FUNCTION IDENTIFIER arguments stmt_ends END . FUNCTION

    FUNCTION  shift, and go to state 152


State 105

   58 decl_stmt: CONST . var_name AS basic_literal '=' END_OF_LINE expr
   59          | CONST . var_name AS basic_literal '=' expr

    IDENTIFIER  shift, and go to state 153

    var_name  go to state 154


State 106

   60 decl_stmt: DIM . var_name AS basic_literal '=' END_OF_LINE expr
   61          | DIM . var_name AS basic_literal '=' expr
   62          | DIM . var_name AS basic_literal
   63          | DIM . var_name '=' END_OF_LINE expr
   64          | DIM . var_name '=' expr
   65          | DIM . var_name

    IDENTIFIER  shift, and go to state 153

    var_name  go to state 155


State 107

   77 while_stmt: WHILE . expr stmt_ends stmt_list END WHILE

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 156
    basic_literal  go to state 70


State 108

   82 if_stmt_multi_line: IF . expr THEN stmt_ends stmt_list END IF
   83                   | IF . expr THEN stmt_ends stmt_list ELSE stmt_list END IF
   84                   | IF . expr THEN stmt_ends stmt_list elseif_list END IF
   85                   | IF . expr THEN stmt_ends stmt_list elseif_list ELSE stmt_list END IF

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 157
    basic_literal  go to state 70


State 109

   88 select_stmt: SELECT . CASE expr stmt_ends case_list END SELECT

    CASE  shift, and go to state 158


State 110

   17 function: FUNCTION IDENTIFIER arguments stmt_ends RETURN . expr END FUNCTION

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 159
    basic_literal  go to state 70


State 111

   78 do_loop_stmt: DO . do_loop_condition stmt_ends stmt_list LOOP
   79             | DO . stmt_ends stmt_list LOOP do_loop_condition

    WHILE        shift, and go to state 160
    UNTIL        shift, and go to state 161
    END_OF_LINE  shift, and go to state 20

    stmt_ends          go to state 162
    do_loop_condition  go to state 163


State 112

   18 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list . END FUNCTION
   19         | FUNCTION IDENTIFIER arguments stmt_ends stmt_list . RETURN expr END FUNCTION
   47 stmt_list: stmt_list . stmt

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 164
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    RETURN      shift, and go to state 165
    DO          shift, and go to state 111
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                go to state 166
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 113

   46 stmt_list: stmt .

    $default  reduce using rule 46 (stmt_list)


State 114

   48 stmt: multi_line_stmt .

    $default  reduce using rule 48 (stmt)


State 115

   49 multi_line_stmt: decl_stmt . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 167


State 116

   57 decl_stmt: access . SUB var_name stmt_list END SUB

    SUB  shift, and go to state 168


State 117

   50 multi_line_stmt: assign_stmt . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 169


State 118

   51 multi_line_stmt: while_stmt . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 170


State 119

   52 multi_line_stmt: do_loop_stmt .

    $default  reduce using rule 52 (multi_line_stmt)


State 120

   54 multi_line_stmt: if_stmt_multi_line . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 171


State 121

   53 multi_line_stmt: select_stmt . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 172


State 122

   26 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty . ')' stmt_ends END SUB
   27         | access SUB IDENTIFIER '(' parameterlist_or_empty . ')' stmt_ends stmt_list END SUB

    ')'  shift, and go to state 173


State 123

   20 function: access FUNCTION IDENTIFIER arguments stmt_ends . END FUNCTION
   21         | access FUNCTION IDENTIFIER arguments stmt_ends . RETURN expr END FUNCTION
   22         | access FUNCTION IDENTIFIER arguments stmt_ends . stmt_list END FUNCTION
   23         | access FUNCTION IDENTIFIER arguments stmt_ends . stmt_list RETURN expr END FUNCTION
   56 stmt_ends: stmt_ends . END_OF_LINE

    IDENTIFIER   shift, and go to state 103
    END          shift, and go to state 174
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    RETURN       shift, and go to state 175
    DO           shift, and go to state 111
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 176
    stmt                go to state 113
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 124

   43 parameter_with_type: IDENTIFIER AS basic_literal .
   44                    | IDENTIFIER AS basic_literal . '(' ')'

    '('  shift, and go to state 177

    $default  reduce using rule 43 (parameter_with_type)


State 125

   30 parameterlist_or_empty: END_OF_LINE parameterlist_with_type END_OF_LINE .

    $default  reduce using rule 30 (parameterlist_or_empty)


State 126

   34 parameterlist_or_empty: END_OF_LINE parameterlist_without_type END_OF_LINE .

    $default  reduce using rule 34 (parameterlist_or_empty)


State 127

   24 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends . END SUB
   25         | SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends . stmt_list END SUB
   56 stmt_ends: stmt_ends . END_OF_LINE

    IDENTIFIER   shift, and go to state 103
    END          shift, and go to state 178
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 179
    stmt                go to state 113
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 128

   43 parameter_with_type: IDENTIFIER . AS basic_literal
   44                    | IDENTIFIER . AS basic_literal '(' ')'

    AS  shift, and go to state 76


State 129

   39 parameterlist_with_type: parameterlist_with_type ',' END_OF_LINE . parameter_with_type

    IDENTIFIER  shift, and go to state 128

    parameter_with_type  go to state 180


State 130

   38 parameterlist_with_type: parameterlist_with_type ',' parameter_with_type .

    $default  reduce using rule 38 (parameterlist_with_type)


State 131

   45 parameter_without_type: IDENTIFIER .

    $default  reduce using rule 45 (parameter_without_type)


State 132

   42 parameterlist_without_type: parameterlist_without_type ',' END_OF_LINE . parameter_without_type

    IDENTIFIER  shift, and go to state 131

    parameter_without_type  go to state 181


State 133

   41 parameterlist_without_type: parameterlist_without_type ',' parameter_without_type .

    $default  reduce using rule 41 (parameterlist_without_type)


State 134

  120 arguments_multiline: '(' END_OF_LINE expr_list END_OF_LINE . ')'

    ')'  shift, and go to state 182


State 135

  119 arguments_multiline: '(' END_OF_LINE expr_list ')' .

    $default  reduce using rule 119 (arguments_multiline)


State 136

  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  110     | expr '^' expr .
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 110 (expr)


State 137

  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  104     | expr '*' expr .
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 104 (expr)


State 138

  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  105     | expr '/' expr .
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 105 (expr)


State 139

  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  106     | expr INT_DIV expr .
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 106 (expr)


State 140

  102 expr: expr . '+' expr
  102     | expr '+' expr .
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 102 (expr)


State 141

  102 expr: expr . '+' expr
  103     | expr . '-' expr
  103     | expr '-' expr .
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 103 (expr)


State 142

  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  107     | expr '=' expr .
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    '&'  shift, and go to state 99

    $default  reduce using rule 107 (expr)


State 143

  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  111     | expr NOT_EQUAL expr .
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    '&'  shift, and go to state 99

    $default  reduce using rule 111 (expr)


State 144

  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  112     | expr LESS_OR_EQUAL expr .
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    '&'  shift, and go to state 99

    $default  reduce using rule 112 (expr)


State 145

  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  113     | expr MORE_OR_EQUAL expr .
  114     | expr . '&' expr

    '&'  shift, and go to state 99

    $default  reduce using rule 113 (expr)


State 146

  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  109     | expr '>' expr .
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    '&'  shift, and go to state 99

    $default  reduce using rule 109 (expr)


State 147

  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  108     | expr '<' expr .
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    '&'  shift, and go to state 99

    $default  reduce using rule 108 (expr)


State 148

  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr
  114     | expr '&' expr .

    $default  reduce using rule 114 (expr)


State 149

  121 arguments_multiline: '(' expr_list END_OF_LINE ')' .

    $default  reduce using rule 121 (arguments_multiline)


State 150

  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr
  127 expr_list: expr_list ',' expr .

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 127 (expr_list)


State 151

   74 assign_stmt: IDENTIFIER '=' . expr
   75            | IDENTIFIER '=' . IDENTIFIER
   76            | IDENTIFIER '=' . function_calls

    INT         shift, and go to state 61
    DOUBLE      shift, and go to state 62
    STRING      shift, and go to state 63
    BOOLEAN     shift, and go to state 64
    IDENTIFIER  shift, and go to state 183
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    function_call_multiline   go to state 184
    function_call_singleline  go to state 185
    function_calls            go to state 186
    expr                      go to state 187
    basic_literal             go to state 70


State 152

   16 function: FUNCTION IDENTIFIER arguments stmt_ends END FUNCTION .

    $default  reduce using rule 16 (function)


State 153

   66 var_name: IDENTIFIER . '(' expr ')'
   67         | IDENTIFIER .

    '('  shift, and go to state 188

    $default  reduce using rule 67 (var_name)


State 154

   58 decl_stmt: CONST var_name . AS basic_literal '=' END_OF_LINE expr
   59          | CONST var_name . AS basic_literal '=' expr

    AS  shift, and go to state 189


State 155

   60 decl_stmt: DIM var_name . AS basic_literal '=' END_OF_LINE expr
   61          | DIM var_name . AS basic_literal '=' expr
   62          | DIM var_name . AS basic_literal
   63          | DIM var_name . '=' END_OF_LINE expr
   64          | DIM var_name . '=' expr
   65          | DIM var_name .

    AS   shift, and go to state 190
    '='  shift, and go to state 191

    $default  reduce using rule 65 (decl_stmt)


State 156

   77 while_stmt: WHILE expr . stmt_ends stmt_list END WHILE
  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    END_OF_LINE    shift, and go to state 20
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    stmt_ends  go to state 192


State 157

   82 if_stmt_multi_line: IF expr . THEN stmt_ends stmt_list END IF
   83                   | IF expr . THEN stmt_ends stmt_list ELSE stmt_list END IF
   84                   | IF expr . THEN stmt_ends stmt_list elseif_list END IF
   85                   | IF expr . THEN stmt_ends stmt_list elseif_list ELSE stmt_list END IF
  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    THEN           shift, and go to state 193
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99


State 158

   88 select_stmt: SELECT CASE . expr stmt_ends case_list END SELECT

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 194
    basic_literal  go to state 70


State 159

   17 function: FUNCTION IDENTIFIER arguments stmt_ends RETURN expr . END FUNCTION
  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    END            shift, and go to state 195
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99


State 160

   81 do_loop_condition: WHILE . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 196
    basic_literal  go to state 70


State 161

   80 do_loop_condition: UNTIL . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 197
    basic_literal  go to state 70


State 162

   56 stmt_ends: stmt_ends . END_OF_LINE
   79 do_loop_stmt: DO stmt_ends . stmt_list LOOP do_loop_condition

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 198
    stmt                go to state 113
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 163

   78 do_loop_stmt: DO do_loop_condition . stmt_ends stmt_list LOOP

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 199


State 164

   18 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list END . FUNCTION

    FUNCTION  shift, and go to state 200


State 165

   19 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN . expr END FUNCTION

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 201
    basic_literal  go to state 70


State 166

   47 stmt_list: stmt_list stmt .

    $default  reduce using rule 47 (stmt_list)


State 167

   49 multi_line_stmt: decl_stmt stmt_ends .
   56 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 49 (multi_line_stmt)


State 168

   57 decl_stmt: access SUB . var_name stmt_list END SUB

    IDENTIFIER  shift, and go to state 153

    var_name  go to state 202


State 169

   50 multi_line_stmt: assign_stmt stmt_ends .
   56 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 50 (multi_line_stmt)


State 170

   51 multi_line_stmt: while_stmt stmt_ends .
   56 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 51 (multi_line_stmt)


State 171

   54 multi_line_stmt: if_stmt_multi_line stmt_ends .
   56 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 54 (multi_line_stmt)


State 172

   53 multi_line_stmt: select_stmt stmt_ends .
   56 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 53 (multi_line_stmt)


State 173

   26 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' . stmt_ends END SUB
   27         | access SUB IDENTIFIER '(' parameterlist_or_empty ')' . stmt_ends stmt_list END SUB

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 203


State 174

   20 function: access FUNCTION IDENTIFIER arguments stmt_ends END . FUNCTION

    FUNCTION  shift, and go to state 204


State 175

   21 function: access FUNCTION IDENTIFIER arguments stmt_ends RETURN . expr END FUNCTION

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 205
    basic_literal  go to state 70


State 176

   22 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list . END FUNCTION
   23         | access FUNCTION IDENTIFIER arguments stmt_ends stmt_list . RETURN expr END FUNCTION
   47 stmt_list: stmt_list . stmt

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 206
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    RETURN      shift, and go to state 207
    DO          shift, and go to state 111
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                go to state 166
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 177

   44 parameter_with_type: IDENTIFIER AS basic_literal '(' . ')'

    ')'  shift, and go to state 208


State 178

   24 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END . SUB

    SUB  shift, and go to state 209


State 179

   25 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list . END SUB
   47 stmt_list: stmt_list . stmt

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 210
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                go to state 166
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 180

   39 parameterlist_with_type: parameterlist_with_type ',' END_OF_LINE parameter_with_type .

    $default  reduce using rule 39 (parameterlist_with_type)


State 181

   42 parameterlist_without_type: parameterlist_without_type ',' END_OF_LINE parameter_without_type .

    $default  reduce using rule 42 (parameterlist_without_type)


State 182

  120 arguments_multiline: '(' END_OF_LINE expr_list END_OF_LINE ')' .

    $default  reduce using rule 120 (arguments_multiline)


State 183

   75 assign_stmt: IDENTIFIER '=' IDENTIFIER .
   95 function_call_multiline: IDENTIFIER . arguments_multiline
   96 function_call_singleline: IDENTIFIER . arguments_singleline

    '('  shift, and go to state 44

    $default  reduce using rule 75 (assign_stmt)

    arguments_multiline   go to state 211
    arguments_singleline  go to state 212


State 184

   97 function_calls: function_call_multiline .

    $default  reduce using rule 97 (function_calls)


State 185

   98 function_calls: function_call_singleline .

    $default  reduce using rule 98 (function_calls)


State 186

   76 assign_stmt: IDENTIFIER '=' function_calls .

    $default  reduce using rule 76 (assign_stmt)


State 187

   74 assign_stmt: IDENTIFIER '=' expr .
  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 74 (assign_stmt)


State 188

   66 var_name: IDENTIFIER '(' . expr ')'

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 213
    basic_literal  go to state 70


State 189

   58 decl_stmt: CONST var_name AS . basic_literal '=' END_OF_LINE expr
   59          | CONST var_name AS . basic_literal '=' expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 214


State 190

   60 decl_stmt: DIM var_name AS . basic_literal '=' END_OF_LINE expr
   61          | DIM var_name AS . basic_literal '=' expr
   62          | DIM var_name AS . basic_literal

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 215


State 191

   63 decl_stmt: DIM var_name '=' . END_OF_LINE expr
   64          | DIM var_name '=' . expr

    INT          shift, and go to state 61
    DOUBLE       shift, and go to state 62
    STRING       shift, and go to state 63
    BOOLEAN      shift, and go to state 64
    END_OF_LINE  shift, and go to state 216
    '+'          shift, and go to state 66
    '-'          shift, and go to state 67

    expr           go to state 217
    basic_literal  go to state 70


State 192

   56 stmt_ends: stmt_ends . END_OF_LINE
   77 while_stmt: WHILE expr stmt_ends . stmt_list END WHILE

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 218
    stmt                go to state 113
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 193

   82 if_stmt_multi_line: IF expr THEN . stmt_ends stmt_list END IF
   83                   | IF expr THEN . stmt_ends stmt_list ELSE stmt_list END IF
   84                   | IF expr THEN . stmt_ends stmt_list elseif_list END IF
   85                   | IF expr THEN . stmt_ends stmt_list elseif_list ELSE stmt_list END IF

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 219


State 194

   88 select_stmt: SELECT CASE expr . stmt_ends case_list END SELECT
  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    END_OF_LINE    shift, and go to state 20
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    stmt_ends  go to state 220


State 195

   17 function: FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END . FUNCTION

    FUNCTION  shift, and go to state 221


State 196

   81 do_loop_condition: WHILE expr .
  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 81 (do_loop_condition)


State 197

   80 do_loop_condition: UNTIL expr .
  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 80 (do_loop_condition)


State 198

   47 stmt_list: stmt_list . stmt
   79 do_loop_stmt: DO stmt_ends stmt_list . LOOP do_loop_condition

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    LOOP        shift, and go to state 222
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                go to state 166
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 199

   56 stmt_ends: stmt_ends . END_OF_LINE
   78 do_loop_stmt: DO do_loop_condition stmt_ends . stmt_list LOOP

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 223
    stmt                go to state 113
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 200

   18 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list END FUNCTION .

    $default  reduce using rule 18 (function)


State 201

   19 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr . END FUNCTION
  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    END            shift, and go to state 224
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99


State 202

   57 decl_stmt: access SUB var_name . stmt_list END SUB

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt_list           go to state 225
    stmt                go to state 113
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 203

   26 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends . END SUB
   27         | access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends . stmt_list END SUB
   56 stmt_ends: stmt_ends . END_OF_LINE

    IDENTIFIER   shift, and go to state 103
    END          shift, and go to state 226
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 227
    stmt                go to state 113
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 204

   20 function: access FUNCTION IDENTIFIER arguments stmt_ends END FUNCTION .

    $default  reduce using rule 20 (function)


State 205

   21 function: access FUNCTION IDENTIFIER arguments stmt_ends RETURN expr . END FUNCTION
  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    END            shift, and go to state 228
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99


State 206

   22 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list END . FUNCTION

    FUNCTION  shift, and go to state 229


State 207

   23 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN . expr END FUNCTION

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 230
    basic_literal  go to state 70


State 208

   44 parameter_with_type: IDENTIFIER AS basic_literal '(' ')' .

    $default  reduce using rule 44 (parameter_with_type)


State 209

   24 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB .

    $default  reduce using rule 24 (sub_bloc)


State 210

   25 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END . SUB

    SUB  shift, and go to state 231


State 211

   95 function_call_multiline: IDENTIFIER arguments_multiline .

    $default  reduce using rule 95 (function_call_multiline)


State 212

   96 function_call_singleline: IDENTIFIER arguments_singleline .

    $default  reduce using rule 96 (function_call_singleline)


State 213

   66 var_name: IDENTIFIER '(' expr . ')'
  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99
    ')'            shift, and go to state 232


State 214

   58 decl_stmt: CONST var_name AS basic_literal . '=' END_OF_LINE expr
   59          | CONST var_name AS basic_literal . '=' expr

    '='  shift, and go to state 233


State 215

   60 decl_stmt: DIM var_name AS basic_literal . '=' END_OF_LINE expr
   61          | DIM var_name AS basic_literal . '=' expr
   62          | DIM var_name AS basic_literal .

    '='  shift, and go to state 234

    $default  reduce using rule 62 (decl_stmt)


State 216

   63 decl_stmt: DIM var_name '=' END_OF_LINE . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 235
    basic_literal  go to state 70


State 217

   64 decl_stmt: DIM var_name '=' expr .
  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 64 (decl_stmt)


State 218

   47 stmt_list: stmt_list . stmt
   77 while_stmt: WHILE expr stmt_ends stmt_list . END WHILE

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 236
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                go to state 166
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 219

   56 stmt_ends: stmt_ends . END_OF_LINE
   82 if_stmt_multi_line: IF expr THEN stmt_ends . stmt_list END IF
   83                   | IF expr THEN stmt_ends . stmt_list ELSE stmt_list END IF
   84                   | IF expr THEN stmt_ends . stmt_list elseif_list END IF
   85                   | IF expr THEN stmt_ends . stmt_list elseif_list ELSE stmt_list END IF

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 237
    stmt                go to state 113
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 220

   56 stmt_ends: stmt_ends . END_OF_LINE
   88 select_stmt: SELECT CASE expr stmt_ends . case_list END SELECT

    CASE         shift, and go to state 238
    END_OF_LINE  shift, and go to state 24

    case_list  go to state 239
    case_stmt  go to state 240


State 221

   17 function: FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION .

    $default  reduce using rule 17 (function)


State 222

   79 do_loop_stmt: DO stmt_ends stmt_list LOOP . do_loop_condition

    WHILE  shift, and go to state 160
    UNTIL  shift, and go to state 161

    do_loop_condition  go to state 241


State 223

   47 stmt_list: stmt_list . stmt
   78 do_loop_stmt: DO do_loop_condition stmt_ends stmt_list . LOOP

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    LOOP        shift, and go to state 242
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                go to state 166
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 224

   19 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END . FUNCTION

    FUNCTION  shift, and go to state 243


State 225

   47 stmt_list: stmt_list . stmt
   57 decl_stmt: access SUB var_name stmt_list . END SUB

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 244
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                go to state 166
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 226

   26 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END . SUB

    SUB  shift, and go to state 245


State 227

   27 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list . END SUB
   47 stmt_list: stmt_list . stmt

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 246
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                go to state 166
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 228

   21 function: access FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END . FUNCTION

    FUNCTION  shift, and go to state 247


State 229

   22 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list END FUNCTION .

    $default  reduce using rule 22 (function)


State 230

   23 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr . END FUNCTION
  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    END            shift, and go to state 248
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99


State 231

   25 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB .

    $default  reduce using rule 25 (sub_bloc)


State 232

   66 var_name: IDENTIFIER '(' expr ')' .

    $default  reduce using rule 66 (var_name)


State 233

   58 decl_stmt: CONST var_name AS basic_literal '=' . END_OF_LINE expr
   59          | CONST var_name AS basic_literal '=' . expr

    INT          shift, and go to state 61
    DOUBLE       shift, and go to state 62
    STRING       shift, and go to state 63
    BOOLEAN      shift, and go to state 64
    END_OF_LINE  shift, and go to state 249
    '+'          shift, and go to state 66
    '-'          shift, and go to state 67

    expr           go to state 250
    basic_literal  go to state 70


State 234

   60 decl_stmt: DIM var_name AS basic_literal '=' . END_OF_LINE expr
   61          | DIM var_name AS basic_literal '=' . expr

    INT          shift, and go to state 61
    DOUBLE       shift, and go to state 62
    STRING       shift, and go to state 63
    BOOLEAN      shift, and go to state 64
    END_OF_LINE  shift, and go to state 251
    '+'          shift, and go to state 66
    '-'          shift, and go to state 67

    expr           go to state 252
    basic_literal  go to state 70


State 235

   63 decl_stmt: DIM var_name '=' END_OF_LINE expr .
  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 63 (decl_stmt)


State 236

   77 while_stmt: WHILE expr stmt_ends stmt_list END . WHILE

    WHILE  shift, and go to state 253


State 237

   47 stmt_list: stmt_list . stmt
   82 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list . END IF
   83                   | IF expr THEN stmt_ends stmt_list . ELSE stmt_list END IF
   84                   | IF expr THEN stmt_ends stmt_list . elseif_list END IF
   85                   | IF expr THEN stmt_ends stmt_list . elseif_list ELSE stmt_list END IF

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 254
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    ELSE        shift, and go to state 255
    ELSEIF      shift, and go to state 256
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                go to state 166
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    elseif_list         go to state 257
    select_stmt         go to state 121


State 238

   91 case_stmt: CASE . expr stmt_ends stmt_list
   92          | CASE . IS expr stmt_ends stmt_list
   93          | CASE . expr TO expr stmt_ends stmt_list
   94          | CASE . ELSE stmt_ends stmt_list

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    ELSE     shift, and go to state 258
    IS       shift, and go to state 259
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 260
    basic_literal  go to state 70


State 239

   88 select_stmt: SELECT CASE expr stmt_ends case_list . END SELECT
   90 case_list: case_list . case_stmt

    END   shift, and go to state 261
    CASE  shift, and go to state 238

    case_stmt  go to state 262


State 240

   89 case_list: case_stmt .

    $default  reduce using rule 89 (case_list)


State 241

   79 do_loop_stmt: DO stmt_ends stmt_list LOOP do_loop_condition .

    $default  reduce using rule 79 (do_loop_stmt)


State 242

   78 do_loop_stmt: DO do_loop_condition stmt_ends stmt_list LOOP .

    $default  reduce using rule 78 (do_loop_stmt)


State 243

   19 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION .

    $default  reduce using rule 19 (function)


State 244

   57 decl_stmt: access SUB var_name stmt_list END . SUB

    SUB  shift, and go to state 263


State 245

   26 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB .

    $default  reduce using rule 26 (sub_bloc)


State 246

   27 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END . SUB

    SUB  shift, and go to state 264


State 247

   21 function: access FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION .

    $default  reduce using rule 21 (function)


State 248

   23 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END . FUNCTION

    FUNCTION  shift, and go to state 265


State 249

   58 decl_stmt: CONST var_name AS basic_literal '=' END_OF_LINE . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 266
    basic_literal  go to state 70


State 250

   59 decl_stmt: CONST var_name AS basic_literal '=' expr .
  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 59 (decl_stmt)


State 251

   60 decl_stmt: DIM var_name AS basic_literal '=' END_OF_LINE . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 267
    basic_literal  go to state 70


State 252

   61 decl_stmt: DIM var_name AS basic_literal '=' expr .
  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 61 (decl_stmt)


State 253

   77 while_stmt: WHILE expr stmt_ends stmt_list END WHILE .

    $default  reduce using rule 77 (while_stmt)


State 254

   82 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list END . IF

    IF  shift, and go to state 268


State 255

   83 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list ELSE . stmt_list END IF

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt_list           go to state 269
    stmt                go to state 113
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 256

   86 elseif_list: ELSEIF . expr THEN stmt_list

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 270
    basic_literal  go to state 70


State 257

   84 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list . END IF
   85                   | IF expr THEN stmt_ends stmt_list elseif_list . ELSE stmt_list END IF
   87 elseif_list: elseif_list . ELSEIF expr THEN stmt_list

    END     shift, and go to state 271
    ELSE    shift, and go to state 272
    ELSEIF  shift, and go to state 273


State 258

   94 case_stmt: CASE ELSE . stmt_ends stmt_list

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 274


State 259

   92 case_stmt: CASE IS . expr stmt_ends stmt_list

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 275
    basic_literal  go to state 70


State 260

   91 case_stmt: CASE expr . stmt_ends stmt_list
   93          | CASE expr . TO expr stmt_ends stmt_list
  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    TO             shift, and go to state 276
    END_OF_LINE    shift, and go to state 20
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    stmt_ends  go to state 277


State 261

   88 select_stmt: SELECT CASE expr stmt_ends case_list END . SELECT

    SELECT  shift, and go to state 278


State 262

   90 case_list: case_list case_stmt .

    $default  reduce using rule 90 (case_list)


State 263

   57 decl_stmt: access SUB var_name stmt_list END SUB .

    $default  reduce using rule 57 (decl_stmt)


State 264

   27 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB .

    $default  reduce using rule 27 (sub_bloc)


State 265

   23 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION .

    $default  reduce using rule 23 (function)


State 266

   58 decl_stmt: CONST var_name AS basic_literal '=' END_OF_LINE expr .
  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 58 (decl_stmt)


State 267

   60 decl_stmt: DIM var_name AS basic_literal '=' END_OF_LINE expr .
  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 60 (decl_stmt)


State 268

   82 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list END IF .

    $default  reduce using rule 82 (if_stmt_multi_line)


State 269

   47 stmt_list: stmt_list . stmt
   83 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list ELSE stmt_list . END IF

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 279
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                go to state 166
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 270

   86 elseif_list: ELSEIF expr . THEN stmt_list
  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    THEN           shift, and go to state 280
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99


State 271

   84 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list END . IF

    IF  shift, and go to state 281


State 272

   85 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list ELSE . stmt_list END IF

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt_list           go to state 282
    stmt                go to state 113
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 273

   87 elseif_list: elseif_list ELSEIF . expr THEN stmt_list

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 283
    basic_literal  go to state 70


State 274

   56 stmt_ends: stmt_ends . END_OF_LINE
   94 case_stmt: CASE ELSE stmt_ends . stmt_list

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 284
    stmt                go to state 113
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 275

   92 case_stmt: CASE IS expr . stmt_ends stmt_list
  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    END_OF_LINE    shift, and go to state 20
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    stmt_ends  go to state 285


State 276

   93 case_stmt: CASE expr TO . expr stmt_ends stmt_list

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 286
    basic_literal  go to state 70


State 277

   56 stmt_ends: stmt_ends . END_OF_LINE
   91 case_stmt: CASE expr stmt_ends . stmt_list

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 287
    stmt                go to state 113
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 278

   88 select_stmt: SELECT CASE expr stmt_ends case_list END SELECT .

    $default  reduce using rule 88 (select_stmt)


State 279

   83 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list ELSE stmt_list END . IF

    IF  shift, and go to state 288


State 280

   86 elseif_list: ELSEIF expr THEN . stmt_list

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt_list           go to state 289
    stmt                go to state 113
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 281

   84 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list END IF .

    $default  reduce using rule 84 (if_stmt_multi_line)


State 282

   47 stmt_list: stmt_list . stmt
   85 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list ELSE stmt_list . END IF

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 290
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                go to state 166
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 283

   87 elseif_list: elseif_list ELSEIF expr . THEN stmt_list
  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    THEN           shift, and go to state 291
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99


State 284

   47 stmt_list: stmt_list . stmt
   94 case_stmt: CASE ELSE stmt_ends stmt_list .

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    $default  reduce using rule 94 (case_stmt)

    stmt                go to state 166
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 285

   56 stmt_ends: stmt_ends . END_OF_LINE
   92 case_stmt: CASE IS expr stmt_ends . stmt_list

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 292
    stmt                go to state 113
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 286

   93 case_stmt: CASE expr TO expr . stmt_ends stmt_list
  102 expr: expr . '+' expr
  103     | expr . '-' expr
  104     | expr . '*' expr
  105     | expr . '/' expr
  106     | expr . INT_DIV expr
  107     | expr . '=' expr
  108     | expr . '<' expr
  109     | expr . '>' expr
  110     | expr . '^' expr
  111     | expr . NOT_EQUAL expr
  112     | expr . LESS_OR_EQUAL expr
  113     | expr . MORE_OR_EQUAL expr
  114     | expr . '&' expr

    END_OF_LINE    shift, and go to state 20
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    stmt_ends  go to state 293


State 287

   47 stmt_list: stmt_list . stmt
   91 case_stmt: CASE expr stmt_ends stmt_list .

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    $default  reduce using rule 91 (case_stmt)

    stmt                go to state 166
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 288

   83 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list ELSE stmt_list END IF .

    $default  reduce using rule 83 (if_stmt_multi_line)


State 289

   47 stmt_list: stmt_list . stmt
   86 elseif_list: ELSEIF expr THEN stmt_list .

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    $default  reduce using rule 86 (elseif_list)

    stmt                go to state 166
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 290

   85 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list ELSE stmt_list END . IF

    IF  shift, and go to state 294


State 291

   87 elseif_list: elseif_list ELSEIF expr THEN . stmt_list

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt_list           go to state 295
    stmt                go to state 113
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 292

   47 stmt_list: stmt_list . stmt
   92 case_stmt: CASE IS expr stmt_ends stmt_list .

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    $default  reduce using rule 92 (case_stmt)

    stmt                go to state 166
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 293

   56 stmt_ends: stmt_ends . END_OF_LINE
   93 case_stmt: CASE expr TO expr stmt_ends . stmt_list

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 296
    stmt                go to state 113
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 294

   85 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list ELSE stmt_list END IF .

    $default  reduce using rule 85 (if_stmt_multi_line)


State 295

   47 stmt_list: stmt_list . stmt
   87 elseif_list: elseif_list ELSEIF expr THEN stmt_list .

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    $default  reduce using rule 87 (elseif_list)

    stmt                go to state 166
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121


State 296

   47 stmt_list: stmt_list . stmt
   93 case_stmt: CASE expr TO expr stmt_ends stmt_list .

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    $default  reduce using rule 93 (case_stmt)

    stmt                go to state 166
    multi_line_stmt     go to state 114
    decl_stmt           go to state 115
    access              go to state 116
    assign_stmt         go to state 117
    while_stmt          go to state 118
    do_loop_stmt        go to state 119
    if_stmt_multi_line  go to state 120
    select_stmt         go to state 121
