Nonterminals useless in grammar

    single_line_stmt
    if_stmt_single_line


Terminals unused in grammar

    ENDL
    OF
    ASSIGN_CONSTRUCT
    ASSIGN_MULT
    ASSIGN_ORD_DIV
    ASSIGN_INT_DIV
    ASSIGN_ADD
    ASSIGN_SUB
    ASSIGN_LSHIFT
    ASSIGN_RSHIFT
    ASSIGN_CONCAT


Rules useless in grammar

  133 stmt: single_line_stmt stmt_ends

  134 single_line_stmt: if_stmt_single_line

  135 if_stmt_single_line: IF expr THEN single_line_stmt
  136                    | IF expr THEN single_line_stmt ELSE single_line_stmt


Grammar

    0 $accept: root $end

    1 root: program_items_list

    2 program_items_list: %empty
    3                   | program_items_list_not_empty

    4 program_items_list_not_empty: program_item
    5                             | program_items_list_not_empty program_item

    6 program_item: module
    7             | IMPORTS IDENTIFIER stmt_ends

    8 module: MODULE IDENTIFIER stmt_ends END MODULE
    9       | MODULE IDENTIFIER stmt_ends functions_and_sub_list END MODULE
   10       | access MODULE IDENTIFIER stmt_ends END MODULE
   11       | access MODULE IDENTIFIER stmt_ends functions_and_sub_list END MODULE

   12 functions_and_sub_list: function_or_sub
   13                       | functions_and_sub_list stmt_ends function_or_sub

   14 function_or_sub: function
   15                | sub_bloc

   16 function: FUNCTION IDENTIFIER arguments stmt_ends END FUNCTION
   17         | FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION
   18         | FUNCTION IDENTIFIER arguments stmt_ends stmt_list END FUNCTION
   19         | FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION
   20         | access FUNCTION IDENTIFIER arguments stmt_ends END FUNCTION
   21         | access FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION
   22         | access FUNCTION IDENTIFIER arguments stmt_ends stmt_list END FUNCTION
   23         | access FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION

   24 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB
   25         | SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB
   26         | access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB
   27         | access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

   28 parameterlist_or_empty: %empty
   29                       | parameterlist_with_type
   30                       | END_OF_LINE parameterlist_with_type END_OF_LINE
   31                       | END_OF_LINE parameterlist_with_type
   32                       | parameterlist_with_type END_OF_LINE
   33                       | parameterlist_without_type
   34                       | END_OF_LINE parameterlist_without_type END_OF_LINE
   35                       | parameterlist_without_type END_OF_LINE
   36                       | END_OF_LINE parameterlist_without_type

   37 parameterlist_with_type: parameter_with_type
   38                        | parameterlist_with_type ',' parameter_with_type
   39                        | parameterlist_with_type ',' END_OF_LINE parameter_with_type

   40 parameterlist_without_type: parameter_without_type
   41                           | parameterlist_without_type ',' parameter_without_type
   42                           | parameterlist_without_type ',' END_OF_LINE parameter_without_type

   43 parameter_with_type: IDENTIFIER AS basic_literal
   44                    | IDENTIFIER AS basic_literal '(' ')'

   45 parameter_without_type: IDENTIFIER

   46 stmt_list: stmt
   47          | stmt_list stmt

   48 stmt: multi_line_stmt

   49 multi_line_stmt: decl_stmt stmt_ends
   50                | assign_stmt stmt_ends
   51                | while_stmt stmt_ends
   52                | do_loop_stmt
   53                | for_loop_stmt
   54                | for_each_loop_stmt
   55                | select_stmt stmt_ends
   56                | if_stmt_multi_line stmt_ends

   57 stmt_ends: END_OF_LINE
   58          | stmt_ends END_OF_LINE

   59 decl_stmt: access SUB var_name stmt_list END SUB
   60          | CONST var_name AS basic_literal '=' END_OF_LINE expr
   61          | CONST var_name AS basic_literal '=' expr
   62          | DIM var_name AS basic_literal '=' END_OF_LINE expr
   63          | DIM var_name AS basic_literal '=' expr
   64          | DIM var_name AS basic_literal
   65          | DIM var_name '=' END_OF_LINE expr
   66          | DIM var_name '=' expr
   67          | DIM var_name

   68 var_name: IDENTIFIER '(' expr ')'
   69         | IDENTIFIER

   70 access: PUBLIC
   71       | PROTECTED
   72       | FRIEND
   73       | PRIVATE
   74       | PROTECTED FRIEND
   75       | PRIVATE FRIEND

   76 assign_stmt: IDENTIFIER '=' expr
   77            | IDENTIFIER '=' IDENTIFIER
   78            | IDENTIFIER '=' function_calls

   79 while_stmt: WHILE expr stmt_ends stmt_list END WHILE

   80 do_loop_stmt: DO do_loop_condition stmt_ends stmt_list LOOP
   81             | DO stmt_ends stmt_list LOOP do_loop_condition

   82 do_loop_condition: UNTIL expr
   83                  | WHILE expr

   84 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal stmt_ends stmt_list NEXT
   85              | FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal STEP basic_literal stmt_ends stmt_list NEXT

   86 for_each_loop_stmt: FOR EACH IDENTIFIER AS basic_literal IN IDENTIFIER stmt_ends stmt_list NEXT

   87 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list END IF
   88                   | IF expr THEN stmt_ends stmt_list ELSE stmt_list END IF
   89                   | IF expr THEN stmt_ends stmt_list elseif_list END IF
   90                   | IF expr THEN stmt_ends stmt_list elseif_list ELSE stmt_list END IF

   91 elseif_list: ELSEIF expr THEN stmt_list
   92            | elseif_list ELSEIF expr THEN stmt_list

   93 select_stmt: SELECT CASE expr stmt_ends case_list END SELECT

   94 case_list: case_stmt
   95          | case_list case_stmt

   96 case_stmt: CASE expr stmt_ends stmt_list
   97          | CASE IS expr stmt_ends stmt_list
   98          | CASE expr TO expr stmt_ends stmt_list
   99          | CASE ELSE stmt_ends stmt_list

  100 function_call_multiline: IDENTIFIER arguments_multiline

  101 function_call_singleline: IDENTIFIER arguments_singleline

  102 function_calls: function_call_multiline
  103               | function_call_singleline

  104 expr: basic_literal
  105     | '-' expr
  106     | '+' expr
  107     | expr '+' expr
  108     | expr '-' expr
  109     | expr '*' expr
  110     | expr '/' expr
  111     | expr INT_DIV expr
  112     | expr '=' expr
  113     | expr '<' expr
  114     | expr '>' expr
  115     | expr '^' expr
  116     | expr NOT_EQUAL expr
  117     | expr LESS_OR_EQUAL expr
  118     | expr MORE_OR_EQUAL expr
  119     | expr '&' expr

  120 basic_literal: INT
  121              | STRING
  122              | BOOLEAN
  123              | DOUBLE

  124 arguments_multiline: '(' END_OF_LINE expr_list ')'
  125                    | '(' END_OF_LINE expr_list END_OF_LINE ')'
  126                    | '(' expr_list END_OF_LINE ')'

  127 arguments_singleline: '(' expr_list ')'
  128                     | '(' ')'

  129 arguments: arguments_multiline
  130          | arguments_singleline

  131 expr_list: expr
  132          | expr_list ',' expr


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 119
    '(' (40) 24 25 26 27 44 68 124 125 126 127 128
    ')' (41) 24 25 26 27 44 68 124 125 126 127 128
    '*' (42) 109
    '+' (43) 106 107
    ',' (44) 38 39 41 42 132
    '-' (45) 105 108
    '/' (47) 110
    '<' (60) 113
    '=' (61) 60 61 62 63 65 66 76 77 78 84 85 112
    '>' (62) 114
    '^' (94) 115
    error (256)
    INT <int_val> (258) 120
    DOUBLE <double_val> (259) 123
    STRING <str_val> (260) 121
    BOOLEAN <bool_val> (261) 122
    IDENTIFIER <id_name> (262) 7 8 9 10 11 16 17 18 19 20 21 22 23 24 25 26 27 43 44 45 68 69 76 77 78 84 85 86 100 101
    ENDL (263)
    SUB (264) 24 25 26 27 59
    END (265) 8 9 10 11 16 17 18 19 20 21 22 23 24 25 26 27 59 79 87 88 89 90 93
    CONST (266) 60 61
    DIM (267) 62 63 64 65 66 67
    AS (268) 43 44 60 61 62 63 64 84 85 86
    WHILE (269) 79 83
    IF (270) 87 88 89 90
    THEN (271) 87 88 89 90 91 92
    ELSE (272) 88 90 99
    ELSEIF (273) 91 92
    SELECT (274) 93
    CASE (275) 93 96 97 98 99
    IS (276) 97
    TO (277) 84 85 98
    IMPORTS (278) 7
    MODULE (279) 8 9 10 11
    FUNCTION (280) 16 17 18 19 20 21 22 23
    RETURN (281) 17 19 21 23
    DO (282) 80 81
    LOOP (283) 80 81
    UNTIL (284) 82
    FOR (285) 84 85 86
    NEXT (286) 84 85 86
    STEP (287) 85
    OF (288)
    IN (289) 86
    EACH (290) 86
    END_OF_LINE (291) 30 31 32 34 35 36 39 42 57 58 60 62 65 124 125 126
    UNARY_MINUS (292)
    UNARY_PLUS (293)
    ASSIGN_CONSTRUCT (294)
    ASSIGN_MULT (295)
    ASSIGN_ORD_DIV (296)
    ASSIGN_INT_DIV (297)
    ASSIGN_ADD (298)
    ASSIGN_SUB (299)
    ASSIGN_LSHIFT (300)
    ASSIGN_RSHIFT (301)
    ASSIGN_CONCAT (302)
    PRIVATE (303) 73 75
    PROTECTED (304) 71 74
    PUBLIC (305) 70
    FRIEND (306) 72 74 75
    INT_DIV (307) 111
    NOT_EQUAL (308) 116
    LESS_OR_EQUAL (309) 117
    MORE_OR_EQUAL (310) 118


Nonterminals, with rules where they appear

    $accept (68)
        on left: 0
    root (69)
        on left: 1
        on right: 0
    program_items_list (70)
        on left: 2 3
        on right: 1
    program_items_list_not_empty (71)
        on left: 4 5
        on right: 3 5
    program_item (72)
        on left: 6 7
        on right: 4 5
    module (73)
        on left: 8 9 10 11
        on right: 6
    functions_and_sub_list (74)
        on left: 12 13
        on right: 9 11 13
    function_or_sub (75)
        on left: 14 15
        on right: 12 13
    function (76)
        on left: 16 17 18 19 20 21 22 23
        on right: 14
    sub_bloc (77)
        on left: 24 25 26 27
        on right: 15
    parameterlist_or_empty (78)
        on left: 28 29 30 31 32 33 34 35 36
        on right: 24 25 26 27
    parameterlist_with_type (79)
        on left: 37 38 39
        on right: 29 30 31 32 38 39
    parameterlist_without_type (80)
        on left: 40 41 42
        on right: 33 34 35 36 41 42
    parameter_with_type (81)
        on left: 43 44
        on right: 37 38 39
    parameter_without_type (82)
        on left: 45
        on right: 40 41 42
    stmt_list (83)
        on left: 46 47
        on right: 18 19 22 23 25 27 47 59 79 80 81 84 85 86 87 88 89 90 91 92 96 97 98 99
    stmt (84)
        on left: 48
        on right: 46 47
    multi_line_stmt (85)
        on left: 49 50 51 52 53 54 55 56
        on right: 48
    stmt_ends (86)
        on left: 57 58
        on right: 7 8 9 10 11 13 16 17 18 19 20 21 22 23 24 25 26 27 49 50 51 55 56 58 79 80 81 84 85 86 87 88 89 90 93 96 97 98 99
    decl_stmt (87)
        on left: 59 60 61 62 63 64 65 66 67
        on right: 49
    var_name (88)
        on left: 68 69
        on right: 59 60 61 62 63 64 65 66 67
    access (89)
        on left: 70 71 72 73 74 75
        on right: 10 11 20 21 22 23 26 27 59
    assign_stmt (90)
        on left: 76 77 78
        on right: 50
    while_stmt (91)
        on left: 79
        on right: 51
    do_loop_stmt (92)
        on left: 80 81
        on right: 52
    do_loop_condition (93)
        on left: 82 83
        on right: 80 81
    for_loop_stmt (94)
        on left: 84 85
        on right: 53
    for_each_loop_stmt (95)
        on left: 86
        on right: 54
    if_stmt_multi_line (96)
        on left: 87 88 89 90
        on right: 56
    elseif_list (97)
        on left: 91 92
        on right: 89 90 92
    select_stmt (98)
        on left: 93
        on right: 55
    case_list (99)
        on left: 94 95
        on right: 93 95
    case_stmt (100)
        on left: 96 97 98 99
        on right: 94 95
    function_call_multiline (101)
        on left: 100
        on right: 102
    function_call_singleline (102)
        on left: 101
        on right: 103
    function_calls (103)
        on left: 102 103
        on right: 78
    expr (104)
        on left: 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119
        on right: 17 19 21 23 60 61 62 63 65 66 68 76 79 82 83 87 88 89 90 91 92 93 96 97 98 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 131 132
    basic_literal (105)
        on left: 120 121 122 123
        on right: 43 44 60 61 62 63 64 84 85 86 104
    arguments_multiline (106)
        on left: 124 125 126
        on right: 100 129
    arguments_singleline (107)
        on left: 127 128
        on right: 101 130
    arguments (108)
        on left: 129 130
        on right: 16 17 18 19 20 21 22 23
    expr_list (109)
        on left: 131 132
        on right: 124 125 126 127 132


State 0

    0 $accept: . root $end

    IMPORTS    shift, and go to state 1
    MODULE     shift, and go to state 2
    PRIVATE    shift, and go to state 3
    PROTECTED  shift, and go to state 4
    PUBLIC     shift, and go to state 5
    FRIEND     shift, and go to state 6

    $default  reduce using rule 2 (program_items_list)

    root                          go to state 7
    program_items_list            go to state 8
    program_items_list_not_empty  go to state 9
    program_item                  go to state 10
    module                        go to state 11
    access                        go to state 12


State 1

    7 program_item: IMPORTS . IDENTIFIER stmt_ends

    IDENTIFIER  shift, and go to state 13


State 2

    8 module: MODULE . IDENTIFIER stmt_ends END MODULE
    9       | MODULE . IDENTIFIER stmt_ends functions_and_sub_list END MODULE

    IDENTIFIER  shift, and go to state 14


State 3

   73 access: PRIVATE .
   75       | PRIVATE . FRIEND

    FRIEND  shift, and go to state 15

    $default  reduce using rule 73 (access)


State 4

   71 access: PROTECTED .
   74       | PROTECTED . FRIEND

    FRIEND  shift, and go to state 16

    $default  reduce using rule 71 (access)


State 5

   70 access: PUBLIC .

    $default  reduce using rule 70 (access)


State 6

   72 access: FRIEND .

    $default  reduce using rule 72 (access)


State 7

    0 $accept: root . $end

    $end  shift, and go to state 17


State 8

    1 root: program_items_list .

    $default  reduce using rule 1 (root)


State 9

    3 program_items_list: program_items_list_not_empty .
    5 program_items_list_not_empty: program_items_list_not_empty . program_item

    IMPORTS    shift, and go to state 1
    MODULE     shift, and go to state 2
    PRIVATE    shift, and go to state 3
    PROTECTED  shift, and go to state 4
    PUBLIC     shift, and go to state 5
    FRIEND     shift, and go to state 6

    $default  reduce using rule 3 (program_items_list)

    program_item  go to state 18
    module        go to state 11
    access        go to state 12


State 10

    4 program_items_list_not_empty: program_item .

    $default  reduce using rule 4 (program_items_list_not_empty)


State 11

    6 program_item: module .

    $default  reduce using rule 6 (program_item)


State 12

   10 module: access . MODULE IDENTIFIER stmt_ends END MODULE
   11       | access . MODULE IDENTIFIER stmt_ends functions_and_sub_list END MODULE

    MODULE  shift, and go to state 19


State 13

    7 program_item: IMPORTS IDENTIFIER . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 21


State 14

    8 module: MODULE IDENTIFIER . stmt_ends END MODULE
    9       | MODULE IDENTIFIER . stmt_ends functions_and_sub_list END MODULE

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 22


State 15

   75 access: PRIVATE FRIEND .

    $default  reduce using rule 75 (access)


State 16

   74 access: PROTECTED FRIEND .

    $default  reduce using rule 74 (access)


State 17

    0 $accept: root $end .

    $default  accept


State 18

    5 program_items_list_not_empty: program_items_list_not_empty program_item .

    $default  reduce using rule 5 (program_items_list_not_empty)


State 19

   10 module: access MODULE . IDENTIFIER stmt_ends END MODULE
   11       | access MODULE . IDENTIFIER stmt_ends functions_and_sub_list END MODULE

    IDENTIFIER  shift, and go to state 23


State 20

   57 stmt_ends: END_OF_LINE .

    $default  reduce using rule 57 (stmt_ends)


State 21

    7 program_item: IMPORTS IDENTIFIER stmt_ends .
   58 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 7 (program_item)


State 22

    8 module: MODULE IDENTIFIER stmt_ends . END MODULE
    9       | MODULE IDENTIFIER stmt_ends . functions_and_sub_list END MODULE
   58 stmt_ends: stmt_ends . END_OF_LINE

    SUB          shift, and go to state 25
    END          shift, and go to state 26
    FUNCTION     shift, and go to state 27
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    functions_and_sub_list  go to state 28
    function_or_sub         go to state 29
    function                go to state 30
    sub_bloc                go to state 31
    access                  go to state 32


State 23

   10 module: access MODULE IDENTIFIER . stmt_ends END MODULE
   11       | access MODULE IDENTIFIER . stmt_ends functions_and_sub_list END MODULE

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 33


State 24

   58 stmt_ends: stmt_ends END_OF_LINE .

    $default  reduce using rule 58 (stmt_ends)


State 25

   24 sub_bloc: SUB . IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB
   25         | SUB . IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    IDENTIFIER  shift, and go to state 34


State 26

    8 module: MODULE IDENTIFIER stmt_ends END . MODULE

    MODULE  shift, and go to state 35


State 27

   16 function: FUNCTION . IDENTIFIER arguments stmt_ends END FUNCTION
   17         | FUNCTION . IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION
   18         | FUNCTION . IDENTIFIER arguments stmt_ends stmt_list END FUNCTION
   19         | FUNCTION . IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION

    IDENTIFIER  shift, and go to state 36


State 28

    9 module: MODULE IDENTIFIER stmt_ends functions_and_sub_list . END MODULE
   13 functions_and_sub_list: functions_and_sub_list . stmt_ends function_or_sub

    END          shift, and go to state 37
    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 38


State 29

   12 functions_and_sub_list: function_or_sub .

    $default  reduce using rule 12 (functions_and_sub_list)


State 30

   14 function_or_sub: function .

    $default  reduce using rule 14 (function_or_sub)


State 31

   15 function_or_sub: sub_bloc .

    $default  reduce using rule 15 (function_or_sub)


State 32

   20 function: access . FUNCTION IDENTIFIER arguments stmt_ends END FUNCTION
   21         | access . FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION
   22         | access . FUNCTION IDENTIFIER arguments stmt_ends stmt_list END FUNCTION
   23         | access . FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION
   26 sub_bloc: access . SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB
   27         | access . SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    SUB       shift, and go to state 39
    FUNCTION  shift, and go to state 40


State 33

   10 module: access MODULE IDENTIFIER stmt_ends . END MODULE
   11       | access MODULE IDENTIFIER stmt_ends . functions_and_sub_list END MODULE
   58 stmt_ends: stmt_ends . END_OF_LINE

    SUB          shift, and go to state 25
    END          shift, and go to state 41
    FUNCTION     shift, and go to state 27
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    functions_and_sub_list  go to state 42
    function_or_sub         go to state 29
    function                go to state 30
    sub_bloc                go to state 31
    access                  go to state 32


State 34

   24 sub_bloc: SUB IDENTIFIER . '(' parameterlist_or_empty ')' stmt_ends END SUB
   25         | SUB IDENTIFIER . '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    '('  shift, and go to state 43


State 35

    8 module: MODULE IDENTIFIER stmt_ends END MODULE .

    $default  reduce using rule 8 (module)


State 36

   16 function: FUNCTION IDENTIFIER . arguments stmt_ends END FUNCTION
   17         | FUNCTION IDENTIFIER . arguments stmt_ends RETURN expr END FUNCTION
   18         | FUNCTION IDENTIFIER . arguments stmt_ends stmt_list END FUNCTION
   19         | FUNCTION IDENTIFIER . arguments stmt_ends stmt_list RETURN expr END FUNCTION

    '('  shift, and go to state 44

    arguments_multiline   go to state 45
    arguments_singleline  go to state 46
    arguments             go to state 47


State 37

    9 module: MODULE IDENTIFIER stmt_ends functions_and_sub_list END . MODULE

    MODULE  shift, and go to state 48


State 38

   13 functions_and_sub_list: functions_and_sub_list stmt_ends . function_or_sub
   58 stmt_ends: stmt_ends . END_OF_LINE

    SUB          shift, and go to state 25
    FUNCTION     shift, and go to state 27
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    function_or_sub  go to state 49
    function         go to state 30
    sub_bloc         go to state 31
    access           go to state 32


State 39

   26 sub_bloc: access SUB . IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB
   27         | access SUB . IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    IDENTIFIER  shift, and go to state 50


State 40

   20 function: access FUNCTION . IDENTIFIER arguments stmt_ends END FUNCTION
   21         | access FUNCTION . IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION
   22         | access FUNCTION . IDENTIFIER arguments stmt_ends stmt_list END FUNCTION
   23         | access FUNCTION . IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION

    IDENTIFIER  shift, and go to state 51


State 41

   10 module: access MODULE IDENTIFIER stmt_ends END . MODULE

    MODULE  shift, and go to state 52


State 42

   11 module: access MODULE IDENTIFIER stmt_ends functions_and_sub_list . END MODULE
   13 functions_and_sub_list: functions_and_sub_list . stmt_ends function_or_sub

    END          shift, and go to state 53
    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 38


State 43

   24 sub_bloc: SUB IDENTIFIER '(' . parameterlist_or_empty ')' stmt_ends END SUB
   25         | SUB IDENTIFIER '(' . parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    IDENTIFIER   shift, and go to state 54
    END_OF_LINE  shift, and go to state 55

    $default  reduce using rule 28 (parameterlist_or_empty)

    parameterlist_or_empty      go to state 56
    parameterlist_with_type     go to state 57
    parameterlist_without_type  go to state 58
    parameter_with_type         go to state 59
    parameter_without_type      go to state 60


State 44

  124 arguments_multiline: '(' . END_OF_LINE expr_list ')'
  125                    | '(' . END_OF_LINE expr_list END_OF_LINE ')'
  126                    | '(' . expr_list END_OF_LINE ')'
  127 arguments_singleline: '(' . expr_list ')'
  128                     | '(' . ')'

    INT          shift, and go to state 61
    DOUBLE       shift, and go to state 62
    STRING       shift, and go to state 63
    BOOLEAN      shift, and go to state 64
    END_OF_LINE  shift, and go to state 65
    '+'          shift, and go to state 66
    '-'          shift, and go to state 67
    ')'          shift, and go to state 68

    expr           go to state 69
    basic_literal  go to state 70
    expr_list      go to state 71


State 45

  129 arguments: arguments_multiline .

    $default  reduce using rule 129 (arguments)


State 46

  130 arguments: arguments_singleline .

    $default  reduce using rule 130 (arguments)


State 47

   16 function: FUNCTION IDENTIFIER arguments . stmt_ends END FUNCTION
   17         | FUNCTION IDENTIFIER arguments . stmt_ends RETURN expr END FUNCTION
   18         | FUNCTION IDENTIFIER arguments . stmt_ends stmt_list END FUNCTION
   19         | FUNCTION IDENTIFIER arguments . stmt_ends stmt_list RETURN expr END FUNCTION

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 72


State 48

    9 module: MODULE IDENTIFIER stmt_ends functions_and_sub_list END MODULE .

    $default  reduce using rule 9 (module)


State 49

   13 functions_and_sub_list: functions_and_sub_list stmt_ends function_or_sub .

    $default  reduce using rule 13 (functions_and_sub_list)


State 50

   26 sub_bloc: access SUB IDENTIFIER . '(' parameterlist_or_empty ')' stmt_ends END SUB
   27         | access SUB IDENTIFIER . '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    '('  shift, and go to state 73


State 51

   20 function: access FUNCTION IDENTIFIER . arguments stmt_ends END FUNCTION
   21         | access FUNCTION IDENTIFIER . arguments stmt_ends RETURN expr END FUNCTION
   22         | access FUNCTION IDENTIFIER . arguments stmt_ends stmt_list END FUNCTION
   23         | access FUNCTION IDENTIFIER . arguments stmt_ends stmt_list RETURN expr END FUNCTION

    '('  shift, and go to state 44

    arguments_multiline   go to state 45
    arguments_singleline  go to state 46
    arguments             go to state 74


State 52

   10 module: access MODULE IDENTIFIER stmt_ends END MODULE .

    $default  reduce using rule 10 (module)


State 53

   11 module: access MODULE IDENTIFIER stmt_ends functions_and_sub_list END . MODULE

    MODULE  shift, and go to state 75


State 54

   43 parameter_with_type: IDENTIFIER . AS basic_literal
   44                    | IDENTIFIER . AS basic_literal '(' ')'
   45 parameter_without_type: IDENTIFIER .

    AS  shift, and go to state 76

    $default  reduce using rule 45 (parameter_without_type)


State 55

   30 parameterlist_or_empty: END_OF_LINE . parameterlist_with_type END_OF_LINE
   31                       | END_OF_LINE . parameterlist_with_type
   34                       | END_OF_LINE . parameterlist_without_type END_OF_LINE
   36                       | END_OF_LINE . parameterlist_without_type

    IDENTIFIER  shift, and go to state 54

    parameterlist_with_type     go to state 77
    parameterlist_without_type  go to state 78
    parameter_with_type         go to state 59
    parameter_without_type      go to state 60


State 56

   24 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty . ')' stmt_ends END SUB
   25         | SUB IDENTIFIER '(' parameterlist_or_empty . ')' stmt_ends stmt_list END SUB

    ')'  shift, and go to state 79


State 57

   29 parameterlist_or_empty: parameterlist_with_type .
   32                       | parameterlist_with_type . END_OF_LINE
   38 parameterlist_with_type: parameterlist_with_type . ',' parameter_with_type
   39                        | parameterlist_with_type . ',' END_OF_LINE parameter_with_type

    END_OF_LINE  shift, and go to state 80
    ','          shift, and go to state 81

    $default  reduce using rule 29 (parameterlist_or_empty)


State 58

   33 parameterlist_or_empty: parameterlist_without_type .
   35                       | parameterlist_without_type . END_OF_LINE
   41 parameterlist_without_type: parameterlist_without_type . ',' parameter_without_type
   42                           | parameterlist_without_type . ',' END_OF_LINE parameter_without_type

    END_OF_LINE  shift, and go to state 82
    ','          shift, and go to state 83

    $default  reduce using rule 33 (parameterlist_or_empty)


State 59

   37 parameterlist_with_type: parameter_with_type .

    $default  reduce using rule 37 (parameterlist_with_type)


State 60

   40 parameterlist_without_type: parameter_without_type .

    $default  reduce using rule 40 (parameterlist_without_type)


State 61

  120 basic_literal: INT .

    $default  reduce using rule 120 (basic_literal)


State 62

  123 basic_literal: DOUBLE .

    $default  reduce using rule 123 (basic_literal)


State 63

  121 basic_literal: STRING .

    $default  reduce using rule 121 (basic_literal)


State 64

  122 basic_literal: BOOLEAN .

    $default  reduce using rule 122 (basic_literal)


State 65

  124 arguments_multiline: '(' END_OF_LINE . expr_list ')'
  125                    | '(' END_OF_LINE . expr_list END_OF_LINE ')'

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 69
    basic_literal  go to state 70
    expr_list      go to state 84


State 66

  106 expr: '+' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 85
    basic_literal  go to state 70


State 67

  105 expr: '-' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 86
    basic_literal  go to state 70


State 68

  128 arguments_singleline: '(' ')' .

    $default  reduce using rule 128 (arguments_singleline)


State 69

  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr
  131 expr_list: expr .

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 131 (expr_list)


State 70

  104 expr: basic_literal .

    $default  reduce using rule 104 (expr)


State 71

  126 arguments_multiline: '(' expr_list . END_OF_LINE ')'
  127 arguments_singleline: '(' expr_list . ')'
  132 expr_list: expr_list . ',' expr

    END_OF_LINE  shift, and go to state 100
    ')'          shift, and go to state 101
    ','          shift, and go to state 102


State 72

   16 function: FUNCTION IDENTIFIER arguments stmt_ends . END FUNCTION
   17         | FUNCTION IDENTIFIER arguments stmt_ends . RETURN expr END FUNCTION
   18         | FUNCTION IDENTIFIER arguments stmt_ends . stmt_list END FUNCTION
   19         | FUNCTION IDENTIFIER arguments stmt_ends . stmt_list RETURN expr END FUNCTION
   58 stmt_ends: stmt_ends . END_OF_LINE

    IDENTIFIER   shift, and go to state 103
    END          shift, and go to state 104
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    RETURN       shift, and go to state 110
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 113
    stmt                go to state 114
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 73

   26 sub_bloc: access SUB IDENTIFIER '(' . parameterlist_or_empty ')' stmt_ends END SUB
   27         | access SUB IDENTIFIER '(' . parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    IDENTIFIER   shift, and go to state 54
    END_OF_LINE  shift, and go to state 55

    $default  reduce using rule 28 (parameterlist_or_empty)

    parameterlist_or_empty      go to state 125
    parameterlist_with_type     go to state 57
    parameterlist_without_type  go to state 58
    parameter_with_type         go to state 59
    parameter_without_type      go to state 60


State 74

   20 function: access FUNCTION IDENTIFIER arguments . stmt_ends END FUNCTION
   21         | access FUNCTION IDENTIFIER arguments . stmt_ends RETURN expr END FUNCTION
   22         | access FUNCTION IDENTIFIER arguments . stmt_ends stmt_list END FUNCTION
   23         | access FUNCTION IDENTIFIER arguments . stmt_ends stmt_list RETURN expr END FUNCTION

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 126


State 75

   11 module: access MODULE IDENTIFIER stmt_ends functions_and_sub_list END MODULE .

    $default  reduce using rule 11 (module)


State 76

   43 parameter_with_type: IDENTIFIER AS . basic_literal
   44                    | IDENTIFIER AS . basic_literal '(' ')'

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 127


State 77

   30 parameterlist_or_empty: END_OF_LINE parameterlist_with_type . END_OF_LINE
   31                       | END_OF_LINE parameterlist_with_type .
   38 parameterlist_with_type: parameterlist_with_type . ',' parameter_with_type
   39                        | parameterlist_with_type . ',' END_OF_LINE parameter_with_type

    END_OF_LINE  shift, and go to state 128
    ','          shift, and go to state 81

    $default  reduce using rule 31 (parameterlist_or_empty)


State 78

   34 parameterlist_or_empty: END_OF_LINE parameterlist_without_type . END_OF_LINE
   36                       | END_OF_LINE parameterlist_without_type .
   41 parameterlist_without_type: parameterlist_without_type . ',' parameter_without_type
   42                           | parameterlist_without_type . ',' END_OF_LINE parameter_without_type

    END_OF_LINE  shift, and go to state 129
    ','          shift, and go to state 83

    $default  reduce using rule 36 (parameterlist_or_empty)


State 79

   24 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' . stmt_ends END SUB
   25         | SUB IDENTIFIER '(' parameterlist_or_empty ')' . stmt_ends stmt_list END SUB

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 130


State 80

   32 parameterlist_or_empty: parameterlist_with_type END_OF_LINE .

    $default  reduce using rule 32 (parameterlist_or_empty)


State 81

   38 parameterlist_with_type: parameterlist_with_type ',' . parameter_with_type
   39                        | parameterlist_with_type ',' . END_OF_LINE parameter_with_type

    IDENTIFIER   shift, and go to state 131
    END_OF_LINE  shift, and go to state 132

    parameter_with_type  go to state 133


State 82

   35 parameterlist_or_empty: parameterlist_without_type END_OF_LINE .

    $default  reduce using rule 35 (parameterlist_or_empty)


State 83

   41 parameterlist_without_type: parameterlist_without_type ',' . parameter_without_type
   42                           | parameterlist_without_type ',' . END_OF_LINE parameter_without_type

    IDENTIFIER   shift, and go to state 134
    END_OF_LINE  shift, and go to state 135

    parameter_without_type  go to state 136


State 84

  124 arguments_multiline: '(' END_OF_LINE expr_list . ')'
  125                    | '(' END_OF_LINE expr_list . END_OF_LINE ')'
  132 expr_list: expr_list . ',' expr

    END_OF_LINE  shift, and go to state 137
    ')'          shift, and go to state 138
    ','          shift, and go to state 102


State 85

  106 expr: '+' expr .
  107     | expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 106 (expr)


State 86

  105 expr: '-' expr .
  107     | expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 105 (expr)


State 87

  115 expr: expr '^' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 139
    basic_literal  go to state 70


State 88

  109 expr: expr '*' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 140
    basic_literal  go to state 70


State 89

  110 expr: expr '/' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 141
    basic_literal  go to state 70


State 90

  111 expr: expr INT_DIV . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 142
    basic_literal  go to state 70


State 91

  107 expr: expr '+' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 143
    basic_literal  go to state 70


State 92

  108 expr: expr '-' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 144
    basic_literal  go to state 70


State 93

  112 expr: expr '=' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 145
    basic_literal  go to state 70


State 94

  116 expr: expr NOT_EQUAL . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 146
    basic_literal  go to state 70


State 95

  117 expr: expr LESS_OR_EQUAL . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 147
    basic_literal  go to state 70


State 96

  118 expr: expr MORE_OR_EQUAL . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 148
    basic_literal  go to state 70


State 97

  114 expr: expr '>' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 149
    basic_literal  go to state 70


State 98

  113 expr: expr '<' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 150
    basic_literal  go to state 70


State 99

  119 expr: expr '&' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 151
    basic_literal  go to state 70


State 100

  126 arguments_multiline: '(' expr_list END_OF_LINE . ')'

    ')'  shift, and go to state 152


State 101

  127 arguments_singleline: '(' expr_list ')' .

    $default  reduce using rule 127 (arguments_singleline)


State 102

  132 expr_list: expr_list ',' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 153
    basic_literal  go to state 70


State 103

   76 assign_stmt: IDENTIFIER . '=' expr
   77            | IDENTIFIER . '=' IDENTIFIER
   78            | IDENTIFIER . '=' function_calls

    '='  shift, and go to state 154


State 104

   16 function: FUNCTION IDENTIFIER arguments stmt_ends END . FUNCTION

    FUNCTION  shift, and go to state 155


State 105

   60 decl_stmt: CONST . var_name AS basic_literal '=' END_OF_LINE expr
   61          | CONST . var_name AS basic_literal '=' expr

    IDENTIFIER  shift, and go to state 156

    var_name  go to state 157


State 106

   62 decl_stmt: DIM . var_name AS basic_literal '=' END_OF_LINE expr
   63          | DIM . var_name AS basic_literal '=' expr
   64          | DIM . var_name AS basic_literal
   65          | DIM . var_name '=' END_OF_LINE expr
   66          | DIM . var_name '=' expr
   67          | DIM . var_name

    IDENTIFIER  shift, and go to state 156

    var_name  go to state 158


State 107

   79 while_stmt: WHILE . expr stmt_ends stmt_list END WHILE

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 159
    basic_literal  go to state 70


State 108

   87 if_stmt_multi_line: IF . expr THEN stmt_ends stmt_list END IF
   88                   | IF . expr THEN stmt_ends stmt_list ELSE stmt_list END IF
   89                   | IF . expr THEN stmt_ends stmt_list elseif_list END IF
   90                   | IF . expr THEN stmt_ends stmt_list elseif_list ELSE stmt_list END IF

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 160
    basic_literal  go to state 70


State 109

   93 select_stmt: SELECT . CASE expr stmt_ends case_list END SELECT

    CASE  shift, and go to state 161


State 110

   17 function: FUNCTION IDENTIFIER arguments stmt_ends RETURN . expr END FUNCTION

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 162
    basic_literal  go to state 70


State 111

   80 do_loop_stmt: DO . do_loop_condition stmt_ends stmt_list LOOP
   81             | DO . stmt_ends stmt_list LOOP do_loop_condition

    WHILE        shift, and go to state 163
    UNTIL        shift, and go to state 164
    END_OF_LINE  shift, and go to state 20

    stmt_ends          go to state 165
    do_loop_condition  go to state 166


State 112

   84 for_loop_stmt: FOR . IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal stmt_ends stmt_list NEXT
   85              | FOR . IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal STEP basic_literal stmt_ends stmt_list NEXT
   86 for_each_loop_stmt: FOR . EACH IDENTIFIER AS basic_literal IN IDENTIFIER stmt_ends stmt_list NEXT

    IDENTIFIER  shift, and go to state 167
    EACH        shift, and go to state 168


State 113

   18 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list . END FUNCTION
   19         | FUNCTION IDENTIFIER arguments stmt_ends stmt_list . RETURN expr END FUNCTION
   47 stmt_list: stmt_list . stmt

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 169
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    RETURN      shift, and go to state 170
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                go to state 171
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 114

   46 stmt_list: stmt .

    $default  reduce using rule 46 (stmt_list)


State 115

   48 stmt: multi_line_stmt .

    $default  reduce using rule 48 (stmt)


State 116

   49 multi_line_stmt: decl_stmt . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 172


State 117

   59 decl_stmt: access . SUB var_name stmt_list END SUB

    SUB  shift, and go to state 173


State 118

   50 multi_line_stmt: assign_stmt . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 174


State 119

   51 multi_line_stmt: while_stmt . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 175


State 120

   52 multi_line_stmt: do_loop_stmt .

    $default  reduce using rule 52 (multi_line_stmt)


State 121

   53 multi_line_stmt: for_loop_stmt .

    $default  reduce using rule 53 (multi_line_stmt)


State 122

   54 multi_line_stmt: for_each_loop_stmt .

    $default  reduce using rule 54 (multi_line_stmt)


State 123

   56 multi_line_stmt: if_stmt_multi_line . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 176


State 124

   55 multi_line_stmt: select_stmt . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 177


State 125

   26 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty . ')' stmt_ends END SUB
   27         | access SUB IDENTIFIER '(' parameterlist_or_empty . ')' stmt_ends stmt_list END SUB

    ')'  shift, and go to state 178


State 126

   20 function: access FUNCTION IDENTIFIER arguments stmt_ends . END FUNCTION
   21         | access FUNCTION IDENTIFIER arguments stmt_ends . RETURN expr END FUNCTION
   22         | access FUNCTION IDENTIFIER arguments stmt_ends . stmt_list END FUNCTION
   23         | access FUNCTION IDENTIFIER arguments stmt_ends . stmt_list RETURN expr END FUNCTION
   58 stmt_ends: stmt_ends . END_OF_LINE

    IDENTIFIER   shift, and go to state 103
    END          shift, and go to state 179
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    RETURN       shift, and go to state 180
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 181
    stmt                go to state 114
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 127

   43 parameter_with_type: IDENTIFIER AS basic_literal .
   44                    | IDENTIFIER AS basic_literal . '(' ')'

    '('  shift, and go to state 182

    $default  reduce using rule 43 (parameter_with_type)


State 128

   30 parameterlist_or_empty: END_OF_LINE parameterlist_with_type END_OF_LINE .

    $default  reduce using rule 30 (parameterlist_or_empty)


State 129

   34 parameterlist_or_empty: END_OF_LINE parameterlist_without_type END_OF_LINE .

    $default  reduce using rule 34 (parameterlist_or_empty)


State 130

   24 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends . END SUB
   25         | SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends . stmt_list END SUB
   58 stmt_ends: stmt_ends . END_OF_LINE

    IDENTIFIER   shift, and go to state 103
    END          shift, and go to state 183
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 184
    stmt                go to state 114
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 131

   43 parameter_with_type: IDENTIFIER . AS basic_literal
   44                    | IDENTIFIER . AS basic_literal '(' ')'

    AS  shift, and go to state 76


State 132

   39 parameterlist_with_type: parameterlist_with_type ',' END_OF_LINE . parameter_with_type

    IDENTIFIER  shift, and go to state 131

    parameter_with_type  go to state 185


State 133

   38 parameterlist_with_type: parameterlist_with_type ',' parameter_with_type .

    $default  reduce using rule 38 (parameterlist_with_type)


State 134

   45 parameter_without_type: IDENTIFIER .

    $default  reduce using rule 45 (parameter_without_type)


State 135

   42 parameterlist_without_type: parameterlist_without_type ',' END_OF_LINE . parameter_without_type

    IDENTIFIER  shift, and go to state 134

    parameter_without_type  go to state 186


State 136

   41 parameterlist_without_type: parameterlist_without_type ',' parameter_without_type .

    $default  reduce using rule 41 (parameterlist_without_type)


State 137

  125 arguments_multiline: '(' END_OF_LINE expr_list END_OF_LINE . ')'

    ')'  shift, and go to state 187


State 138

  124 arguments_multiline: '(' END_OF_LINE expr_list ')' .

    $default  reduce using rule 124 (arguments_multiline)


State 139

  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  115     | expr '^' expr .
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 115 (expr)


State 140

  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  109     | expr '*' expr .
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 109 (expr)


State 141

  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  110     | expr '/' expr .
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 110 (expr)


State 142

  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  111     | expr INT_DIV expr .
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 111 (expr)


State 143

  107 expr: expr . '+' expr
  107     | expr '+' expr .
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 107 (expr)


State 144

  107 expr: expr . '+' expr
  108     | expr . '-' expr
  108     | expr '-' expr .
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 108 (expr)


State 145

  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  112     | expr '=' expr .
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    '&'  shift, and go to state 99

    $default  reduce using rule 112 (expr)


State 146

  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  116     | expr NOT_EQUAL expr .
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    '&'  shift, and go to state 99

    $default  reduce using rule 116 (expr)


State 147

  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  117     | expr LESS_OR_EQUAL expr .
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    '&'  shift, and go to state 99

    $default  reduce using rule 117 (expr)


State 148

  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  118     | expr MORE_OR_EQUAL expr .
  119     | expr . '&' expr

    '&'  shift, and go to state 99

    $default  reduce using rule 118 (expr)


State 149

  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  114     | expr '>' expr .
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    '&'  shift, and go to state 99

    $default  reduce using rule 114 (expr)


State 150

  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  113     | expr '<' expr .
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    '&'  shift, and go to state 99

    $default  reduce using rule 113 (expr)


State 151

  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr
  119     | expr '&' expr .

    $default  reduce using rule 119 (expr)


State 152

  126 arguments_multiline: '(' expr_list END_OF_LINE ')' .

    $default  reduce using rule 126 (arguments_multiline)


State 153

  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr
  132 expr_list: expr_list ',' expr .

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 132 (expr_list)


State 154

   76 assign_stmt: IDENTIFIER '=' . expr
   77            | IDENTIFIER '=' . IDENTIFIER
   78            | IDENTIFIER '=' . function_calls

    INT         shift, and go to state 61
    DOUBLE      shift, and go to state 62
    STRING      shift, and go to state 63
    BOOLEAN     shift, and go to state 64
    IDENTIFIER  shift, and go to state 188
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    function_call_multiline   go to state 189
    function_call_singleline  go to state 190
    function_calls            go to state 191
    expr                      go to state 192
    basic_literal             go to state 70


State 155

   16 function: FUNCTION IDENTIFIER arguments stmt_ends END FUNCTION .

    $default  reduce using rule 16 (function)


State 156

   68 var_name: IDENTIFIER . '(' expr ')'
   69         | IDENTIFIER .

    '('  shift, and go to state 193

    $default  reduce using rule 69 (var_name)


State 157

   60 decl_stmt: CONST var_name . AS basic_literal '=' END_OF_LINE expr
   61          | CONST var_name . AS basic_literal '=' expr

    AS  shift, and go to state 194


State 158

   62 decl_stmt: DIM var_name . AS basic_literal '=' END_OF_LINE expr
   63          | DIM var_name . AS basic_literal '=' expr
   64          | DIM var_name . AS basic_literal
   65          | DIM var_name . '=' END_OF_LINE expr
   66          | DIM var_name . '=' expr
   67          | DIM var_name .

    AS   shift, and go to state 195
    '='  shift, and go to state 196

    $default  reduce using rule 67 (decl_stmt)


State 159

   79 while_stmt: WHILE expr . stmt_ends stmt_list END WHILE
  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    END_OF_LINE    shift, and go to state 20
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    stmt_ends  go to state 197


State 160

   87 if_stmt_multi_line: IF expr . THEN stmt_ends stmt_list END IF
   88                   | IF expr . THEN stmt_ends stmt_list ELSE stmt_list END IF
   89                   | IF expr . THEN stmt_ends stmt_list elseif_list END IF
   90                   | IF expr . THEN stmt_ends stmt_list elseif_list ELSE stmt_list END IF
  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    THEN           shift, and go to state 198
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99


State 161

   93 select_stmt: SELECT CASE . expr stmt_ends case_list END SELECT

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 199
    basic_literal  go to state 70


State 162

   17 function: FUNCTION IDENTIFIER arguments stmt_ends RETURN expr . END FUNCTION
  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    END            shift, and go to state 200
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99


State 163

   83 do_loop_condition: WHILE . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 201
    basic_literal  go to state 70


State 164

   82 do_loop_condition: UNTIL . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 202
    basic_literal  go to state 70


State 165

   58 stmt_ends: stmt_ends . END_OF_LINE
   81 do_loop_stmt: DO stmt_ends . stmt_list LOOP do_loop_condition

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 203
    stmt                go to state 114
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 166

   80 do_loop_stmt: DO do_loop_condition . stmt_ends stmt_list LOOP

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 204


State 167

   84 for_loop_stmt: FOR IDENTIFIER . AS basic_literal '=' basic_literal TO basic_literal stmt_ends stmt_list NEXT
   85              | FOR IDENTIFIER . AS basic_literal '=' basic_literal TO basic_literal STEP basic_literal stmt_ends stmt_list NEXT

    AS  shift, and go to state 205


State 168

   86 for_each_loop_stmt: FOR EACH . IDENTIFIER AS basic_literal IN IDENTIFIER stmt_ends stmt_list NEXT

    IDENTIFIER  shift, and go to state 206


State 169

   18 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list END . FUNCTION

    FUNCTION  shift, and go to state 207


State 170

   19 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN . expr END FUNCTION

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 208
    basic_literal  go to state 70


State 171

   47 stmt_list: stmt_list stmt .

    $default  reduce using rule 47 (stmt_list)


State 172

   49 multi_line_stmt: decl_stmt stmt_ends .
   58 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 49 (multi_line_stmt)


State 173

   59 decl_stmt: access SUB . var_name stmt_list END SUB

    IDENTIFIER  shift, and go to state 156

    var_name  go to state 209


State 174

   50 multi_line_stmt: assign_stmt stmt_ends .
   58 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 50 (multi_line_stmt)


State 175

   51 multi_line_stmt: while_stmt stmt_ends .
   58 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 51 (multi_line_stmt)


State 176

   56 multi_line_stmt: if_stmt_multi_line stmt_ends .
   58 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 56 (multi_line_stmt)


State 177

   55 multi_line_stmt: select_stmt stmt_ends .
   58 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 55 (multi_line_stmt)


State 178

   26 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' . stmt_ends END SUB
   27         | access SUB IDENTIFIER '(' parameterlist_or_empty ')' . stmt_ends stmt_list END SUB

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 210


State 179

   20 function: access FUNCTION IDENTIFIER arguments stmt_ends END . FUNCTION

    FUNCTION  shift, and go to state 211


State 180

   21 function: access FUNCTION IDENTIFIER arguments stmt_ends RETURN . expr END FUNCTION

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 212
    basic_literal  go to state 70


State 181

   22 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list . END FUNCTION
   23         | access FUNCTION IDENTIFIER arguments stmt_ends stmt_list . RETURN expr END FUNCTION
   47 stmt_list: stmt_list . stmt

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 213
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    RETURN      shift, and go to state 214
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                go to state 171
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 182

   44 parameter_with_type: IDENTIFIER AS basic_literal '(' . ')'

    ')'  shift, and go to state 215


State 183

   24 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END . SUB

    SUB  shift, and go to state 216


State 184

   25 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list . END SUB
   47 stmt_list: stmt_list . stmt

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 217
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                go to state 171
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 185

   39 parameterlist_with_type: parameterlist_with_type ',' END_OF_LINE parameter_with_type .

    $default  reduce using rule 39 (parameterlist_with_type)


State 186

   42 parameterlist_without_type: parameterlist_without_type ',' END_OF_LINE parameter_without_type .

    $default  reduce using rule 42 (parameterlist_without_type)


State 187

  125 arguments_multiline: '(' END_OF_LINE expr_list END_OF_LINE ')' .

    $default  reduce using rule 125 (arguments_multiline)


State 188

   77 assign_stmt: IDENTIFIER '=' IDENTIFIER .
  100 function_call_multiline: IDENTIFIER . arguments_multiline
  101 function_call_singleline: IDENTIFIER . arguments_singleline

    '('  shift, and go to state 44

    $default  reduce using rule 77 (assign_stmt)

    arguments_multiline   go to state 218
    arguments_singleline  go to state 219


State 189

  102 function_calls: function_call_multiline .

    $default  reduce using rule 102 (function_calls)


State 190

  103 function_calls: function_call_singleline .

    $default  reduce using rule 103 (function_calls)


State 191

   78 assign_stmt: IDENTIFIER '=' function_calls .

    $default  reduce using rule 78 (assign_stmt)


State 192

   76 assign_stmt: IDENTIFIER '=' expr .
  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 76 (assign_stmt)


State 193

   68 var_name: IDENTIFIER '(' . expr ')'

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 220
    basic_literal  go to state 70


State 194

   60 decl_stmt: CONST var_name AS . basic_literal '=' END_OF_LINE expr
   61          | CONST var_name AS . basic_literal '=' expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 221


State 195

   62 decl_stmt: DIM var_name AS . basic_literal '=' END_OF_LINE expr
   63          | DIM var_name AS . basic_literal '=' expr
   64          | DIM var_name AS . basic_literal

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 222


State 196

   65 decl_stmt: DIM var_name '=' . END_OF_LINE expr
   66          | DIM var_name '=' . expr

    INT          shift, and go to state 61
    DOUBLE       shift, and go to state 62
    STRING       shift, and go to state 63
    BOOLEAN      shift, and go to state 64
    END_OF_LINE  shift, and go to state 223
    '+'          shift, and go to state 66
    '-'          shift, and go to state 67

    expr           go to state 224
    basic_literal  go to state 70


State 197

   58 stmt_ends: stmt_ends . END_OF_LINE
   79 while_stmt: WHILE expr stmt_ends . stmt_list END WHILE

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 225
    stmt                go to state 114
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 198

   87 if_stmt_multi_line: IF expr THEN . stmt_ends stmt_list END IF
   88                   | IF expr THEN . stmt_ends stmt_list ELSE stmt_list END IF
   89                   | IF expr THEN . stmt_ends stmt_list elseif_list END IF
   90                   | IF expr THEN . stmt_ends stmt_list elseif_list ELSE stmt_list END IF

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 226


State 199

   93 select_stmt: SELECT CASE expr . stmt_ends case_list END SELECT
  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    END_OF_LINE    shift, and go to state 20
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    stmt_ends  go to state 227


State 200

   17 function: FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END . FUNCTION

    FUNCTION  shift, and go to state 228


State 201

   83 do_loop_condition: WHILE expr .
  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 83 (do_loop_condition)


State 202

   82 do_loop_condition: UNTIL expr .
  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 82 (do_loop_condition)


State 203

   47 stmt_list: stmt_list . stmt
   81 do_loop_stmt: DO stmt_ends stmt_list . LOOP do_loop_condition

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    LOOP        shift, and go to state 229
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                go to state 171
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 204

   58 stmt_ends: stmt_ends . END_OF_LINE
   80 do_loop_stmt: DO do_loop_condition stmt_ends . stmt_list LOOP

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 230
    stmt                go to state 114
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 205

   84 for_loop_stmt: FOR IDENTIFIER AS . basic_literal '=' basic_literal TO basic_literal stmt_ends stmt_list NEXT
   85              | FOR IDENTIFIER AS . basic_literal '=' basic_literal TO basic_literal STEP basic_literal stmt_ends stmt_list NEXT

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 231


State 206

   86 for_each_loop_stmt: FOR EACH IDENTIFIER . AS basic_literal IN IDENTIFIER stmt_ends stmt_list NEXT

    AS  shift, and go to state 232


State 207

   18 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list END FUNCTION .

    $default  reduce using rule 18 (function)


State 208

   19 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr . END FUNCTION
  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    END            shift, and go to state 233
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99


State 209

   59 decl_stmt: access SUB var_name . stmt_list END SUB

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt_list           go to state 234
    stmt                go to state 114
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 210

   26 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends . END SUB
   27         | access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends . stmt_list END SUB
   58 stmt_ends: stmt_ends . END_OF_LINE

    IDENTIFIER   shift, and go to state 103
    END          shift, and go to state 235
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 236
    stmt                go to state 114
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 211

   20 function: access FUNCTION IDENTIFIER arguments stmt_ends END FUNCTION .

    $default  reduce using rule 20 (function)


State 212

   21 function: access FUNCTION IDENTIFIER arguments stmt_ends RETURN expr . END FUNCTION
  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    END            shift, and go to state 237
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99


State 213

   22 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list END . FUNCTION

    FUNCTION  shift, and go to state 238


State 214

   23 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN . expr END FUNCTION

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 239
    basic_literal  go to state 70


State 215

   44 parameter_with_type: IDENTIFIER AS basic_literal '(' ')' .

    $default  reduce using rule 44 (parameter_with_type)


State 216

   24 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB .

    $default  reduce using rule 24 (sub_bloc)


State 217

   25 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END . SUB

    SUB  shift, and go to state 240


State 218

  100 function_call_multiline: IDENTIFIER arguments_multiline .

    $default  reduce using rule 100 (function_call_multiline)


State 219

  101 function_call_singleline: IDENTIFIER arguments_singleline .

    $default  reduce using rule 101 (function_call_singleline)


State 220

   68 var_name: IDENTIFIER '(' expr . ')'
  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99
    ')'            shift, and go to state 241


State 221

   60 decl_stmt: CONST var_name AS basic_literal . '=' END_OF_LINE expr
   61          | CONST var_name AS basic_literal . '=' expr

    '='  shift, and go to state 242


State 222

   62 decl_stmt: DIM var_name AS basic_literal . '=' END_OF_LINE expr
   63          | DIM var_name AS basic_literal . '=' expr
   64          | DIM var_name AS basic_literal .

    '='  shift, and go to state 243

    $default  reduce using rule 64 (decl_stmt)


State 223

   65 decl_stmt: DIM var_name '=' END_OF_LINE . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 244
    basic_literal  go to state 70


State 224

   66 decl_stmt: DIM var_name '=' expr .
  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 66 (decl_stmt)


State 225

   47 stmt_list: stmt_list . stmt
   79 while_stmt: WHILE expr stmt_ends stmt_list . END WHILE

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 245
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                go to state 171
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 226

   58 stmt_ends: stmt_ends . END_OF_LINE
   87 if_stmt_multi_line: IF expr THEN stmt_ends . stmt_list END IF
   88                   | IF expr THEN stmt_ends . stmt_list ELSE stmt_list END IF
   89                   | IF expr THEN stmt_ends . stmt_list elseif_list END IF
   90                   | IF expr THEN stmt_ends . stmt_list elseif_list ELSE stmt_list END IF

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 246
    stmt                go to state 114
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 227

   58 stmt_ends: stmt_ends . END_OF_LINE
   93 select_stmt: SELECT CASE expr stmt_ends . case_list END SELECT

    CASE         shift, and go to state 247
    END_OF_LINE  shift, and go to state 24

    case_list  go to state 248
    case_stmt  go to state 249


State 228

   17 function: FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION .

    $default  reduce using rule 17 (function)


State 229

   81 do_loop_stmt: DO stmt_ends stmt_list LOOP . do_loop_condition

    WHILE  shift, and go to state 163
    UNTIL  shift, and go to state 164

    do_loop_condition  go to state 250


State 230

   47 stmt_list: stmt_list . stmt
   80 do_loop_stmt: DO do_loop_condition stmt_ends stmt_list . LOOP

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    LOOP        shift, and go to state 251
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                go to state 171
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 231

   84 for_loop_stmt: FOR IDENTIFIER AS basic_literal . '=' basic_literal TO basic_literal stmt_ends stmt_list NEXT
   85              | FOR IDENTIFIER AS basic_literal . '=' basic_literal TO basic_literal STEP basic_literal stmt_ends stmt_list NEXT

    '='  shift, and go to state 252


State 232

   86 for_each_loop_stmt: FOR EACH IDENTIFIER AS . basic_literal IN IDENTIFIER stmt_ends stmt_list NEXT

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 253


State 233

   19 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END . FUNCTION

    FUNCTION  shift, and go to state 254


State 234

   47 stmt_list: stmt_list . stmt
   59 decl_stmt: access SUB var_name stmt_list . END SUB

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 255
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                go to state 171
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 235

   26 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END . SUB

    SUB  shift, and go to state 256


State 236

   27 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list . END SUB
   47 stmt_list: stmt_list . stmt

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 257
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                go to state 171
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 237

   21 function: access FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END . FUNCTION

    FUNCTION  shift, and go to state 258


State 238

   22 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list END FUNCTION .

    $default  reduce using rule 22 (function)


State 239

   23 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr . END FUNCTION
  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    END            shift, and go to state 259
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99


State 240

   25 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB .

    $default  reduce using rule 25 (sub_bloc)


State 241

   68 var_name: IDENTIFIER '(' expr ')' .

    $default  reduce using rule 68 (var_name)


State 242

   60 decl_stmt: CONST var_name AS basic_literal '=' . END_OF_LINE expr
   61          | CONST var_name AS basic_literal '=' . expr

    INT          shift, and go to state 61
    DOUBLE       shift, and go to state 62
    STRING       shift, and go to state 63
    BOOLEAN      shift, and go to state 64
    END_OF_LINE  shift, and go to state 260
    '+'          shift, and go to state 66
    '-'          shift, and go to state 67

    expr           go to state 261
    basic_literal  go to state 70


State 243

   62 decl_stmt: DIM var_name AS basic_literal '=' . END_OF_LINE expr
   63          | DIM var_name AS basic_literal '=' . expr

    INT          shift, and go to state 61
    DOUBLE       shift, and go to state 62
    STRING       shift, and go to state 63
    BOOLEAN      shift, and go to state 64
    END_OF_LINE  shift, and go to state 262
    '+'          shift, and go to state 66
    '-'          shift, and go to state 67

    expr           go to state 263
    basic_literal  go to state 70


State 244

   65 decl_stmt: DIM var_name '=' END_OF_LINE expr .
  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 65 (decl_stmt)


State 245

   79 while_stmt: WHILE expr stmt_ends stmt_list END . WHILE

    WHILE  shift, and go to state 264


State 246

   47 stmt_list: stmt_list . stmt
   87 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list . END IF
   88                   | IF expr THEN stmt_ends stmt_list . ELSE stmt_list END IF
   89                   | IF expr THEN stmt_ends stmt_list . elseif_list END IF
   90                   | IF expr THEN stmt_ends stmt_list . elseif_list ELSE stmt_list END IF

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 265
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    ELSE        shift, and go to state 266
    ELSEIF      shift, and go to state 267
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                go to state 171
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    elseif_list         go to state 268
    select_stmt         go to state 124


State 247

   96 case_stmt: CASE . expr stmt_ends stmt_list
   97          | CASE . IS expr stmt_ends stmt_list
   98          | CASE . expr TO expr stmt_ends stmt_list
   99          | CASE . ELSE stmt_ends stmt_list

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    ELSE     shift, and go to state 269
    IS       shift, and go to state 270
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 271
    basic_literal  go to state 70


State 248

   93 select_stmt: SELECT CASE expr stmt_ends case_list . END SELECT
   95 case_list: case_list . case_stmt

    END   shift, and go to state 272
    CASE  shift, and go to state 247

    case_stmt  go to state 273


State 249

   94 case_list: case_stmt .

    $default  reduce using rule 94 (case_list)


State 250

   81 do_loop_stmt: DO stmt_ends stmt_list LOOP do_loop_condition .

    $default  reduce using rule 81 (do_loop_stmt)


State 251

   80 do_loop_stmt: DO do_loop_condition stmt_ends stmt_list LOOP .

    $default  reduce using rule 80 (do_loop_stmt)


State 252

   84 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' . basic_literal TO basic_literal stmt_ends stmt_list NEXT
   85              | FOR IDENTIFIER AS basic_literal '=' . basic_literal TO basic_literal STEP basic_literal stmt_ends stmt_list NEXT

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 274


State 253

   86 for_each_loop_stmt: FOR EACH IDENTIFIER AS basic_literal . IN IDENTIFIER stmt_ends stmt_list NEXT

    IN  shift, and go to state 275


State 254

   19 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION .

    $default  reduce using rule 19 (function)


State 255

   59 decl_stmt: access SUB var_name stmt_list END . SUB

    SUB  shift, and go to state 276


State 256

   26 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB .

    $default  reduce using rule 26 (sub_bloc)


State 257

   27 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END . SUB

    SUB  shift, and go to state 277


State 258

   21 function: access FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION .

    $default  reduce using rule 21 (function)


State 259

   23 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END . FUNCTION

    FUNCTION  shift, and go to state 278


State 260

   60 decl_stmt: CONST var_name AS basic_literal '=' END_OF_LINE . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 279
    basic_literal  go to state 70


State 261

   61 decl_stmt: CONST var_name AS basic_literal '=' expr .
  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 61 (decl_stmt)


State 262

   62 decl_stmt: DIM var_name AS basic_literal '=' END_OF_LINE . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 280
    basic_literal  go to state 70


State 263

   63 decl_stmt: DIM var_name AS basic_literal '=' expr .
  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 63 (decl_stmt)


State 264

   79 while_stmt: WHILE expr stmt_ends stmt_list END WHILE .

    $default  reduce using rule 79 (while_stmt)


State 265

   87 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list END . IF

    IF  shift, and go to state 281


State 266

   88 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list ELSE . stmt_list END IF

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt_list           go to state 282
    stmt                go to state 114
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 267

   91 elseif_list: ELSEIF . expr THEN stmt_list

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 283
    basic_literal  go to state 70


State 268

   89 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list . END IF
   90                   | IF expr THEN stmt_ends stmt_list elseif_list . ELSE stmt_list END IF
   92 elseif_list: elseif_list . ELSEIF expr THEN stmt_list

    END     shift, and go to state 284
    ELSE    shift, and go to state 285
    ELSEIF  shift, and go to state 286


State 269

   99 case_stmt: CASE ELSE . stmt_ends stmt_list

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 287


State 270

   97 case_stmt: CASE IS . expr stmt_ends stmt_list

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 288
    basic_literal  go to state 70


State 271

   96 case_stmt: CASE expr . stmt_ends stmt_list
   98          | CASE expr . TO expr stmt_ends stmt_list
  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    TO             shift, and go to state 289
    END_OF_LINE    shift, and go to state 20
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    stmt_ends  go to state 290


State 272

   93 select_stmt: SELECT CASE expr stmt_ends case_list END . SELECT

    SELECT  shift, and go to state 291


State 273

   95 case_list: case_list case_stmt .

    $default  reduce using rule 95 (case_list)


State 274

   84 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal . TO basic_literal stmt_ends stmt_list NEXT
   85              | FOR IDENTIFIER AS basic_literal '=' basic_literal . TO basic_literal STEP basic_literal stmt_ends stmt_list NEXT

    TO  shift, and go to state 292


State 275

   86 for_each_loop_stmt: FOR EACH IDENTIFIER AS basic_literal IN . IDENTIFIER stmt_ends stmt_list NEXT

    IDENTIFIER  shift, and go to state 293


State 276

   59 decl_stmt: access SUB var_name stmt_list END SUB .

    $default  reduce using rule 59 (decl_stmt)


State 277

   27 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB .

    $default  reduce using rule 27 (sub_bloc)


State 278

   23 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION .

    $default  reduce using rule 23 (function)


State 279

   60 decl_stmt: CONST var_name AS basic_literal '=' END_OF_LINE expr .
  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 60 (decl_stmt)


State 280

   62 decl_stmt: DIM var_name AS basic_literal '=' END_OF_LINE expr .
  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 62 (decl_stmt)


State 281

   87 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list END IF .

    $default  reduce using rule 87 (if_stmt_multi_line)


State 282

   47 stmt_list: stmt_list . stmt
   88 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list ELSE stmt_list . END IF

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 294
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                go to state 171
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 283

   91 elseif_list: ELSEIF expr . THEN stmt_list
  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    THEN           shift, and go to state 295
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99


State 284

   89 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list END . IF

    IF  shift, and go to state 296


State 285

   90 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list ELSE . stmt_list END IF

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt_list           go to state 297
    stmt                go to state 114
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 286

   92 elseif_list: elseif_list ELSEIF . expr THEN stmt_list

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 298
    basic_literal  go to state 70


State 287

   58 stmt_ends: stmt_ends . END_OF_LINE
   99 case_stmt: CASE ELSE stmt_ends . stmt_list

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 299
    stmt                go to state 114
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 288

   97 case_stmt: CASE IS expr . stmt_ends stmt_list
  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    END_OF_LINE    shift, and go to state 20
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    stmt_ends  go to state 300


State 289

   98 case_stmt: CASE expr TO . expr stmt_ends stmt_list

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 301
    basic_literal  go to state 70


State 290

   58 stmt_ends: stmt_ends . END_OF_LINE
   96 case_stmt: CASE expr stmt_ends . stmt_list

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 302
    stmt                go to state 114
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 291

   93 select_stmt: SELECT CASE expr stmt_ends case_list END SELECT .

    $default  reduce using rule 93 (select_stmt)


State 292

   84 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO . basic_literal stmt_ends stmt_list NEXT
   85              | FOR IDENTIFIER AS basic_literal '=' basic_literal TO . basic_literal STEP basic_literal stmt_ends stmt_list NEXT

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 303


State 293

   86 for_each_loop_stmt: FOR EACH IDENTIFIER AS basic_literal IN IDENTIFIER . stmt_ends stmt_list NEXT

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 304


State 294

   88 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list ELSE stmt_list END . IF

    IF  shift, and go to state 305


State 295

   91 elseif_list: ELSEIF expr THEN . stmt_list

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt_list           go to state 306
    stmt                go to state 114
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 296

   89 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list END IF .

    $default  reduce using rule 89 (if_stmt_multi_line)


State 297

   47 stmt_list: stmt_list . stmt
   90 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list ELSE stmt_list . END IF

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 307
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                go to state 171
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 298

   92 elseif_list: elseif_list ELSEIF expr . THEN stmt_list
  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    THEN           shift, and go to state 308
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99


State 299

   47 stmt_list: stmt_list . stmt
   99 case_stmt: CASE ELSE stmt_ends stmt_list .

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    $default  reduce using rule 99 (case_stmt)

    stmt                go to state 171
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 300

   58 stmt_ends: stmt_ends . END_OF_LINE
   97 case_stmt: CASE IS expr stmt_ends . stmt_list

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 309
    stmt                go to state 114
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 301

   98 case_stmt: CASE expr TO expr . stmt_ends stmt_list
  107 expr: expr . '+' expr
  108     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . INT_DIV expr
  112     | expr . '=' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | expr . '^' expr
  116     | expr . NOT_EQUAL expr
  117     | expr . LESS_OR_EQUAL expr
  118     | expr . MORE_OR_EQUAL expr
  119     | expr . '&' expr

    END_OF_LINE    shift, and go to state 20
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    stmt_ends  go to state 310


State 302

   47 stmt_list: stmt_list . stmt
   96 case_stmt: CASE expr stmt_ends stmt_list .

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    $default  reduce using rule 96 (case_stmt)

    stmt                go to state 171
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 303

   84 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal . stmt_ends stmt_list NEXT
   85              | FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal . STEP basic_literal stmt_ends stmt_list NEXT

    STEP         shift, and go to state 311
    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 312


State 304

   58 stmt_ends: stmt_ends . END_OF_LINE
   86 for_each_loop_stmt: FOR EACH IDENTIFIER AS basic_literal IN IDENTIFIER stmt_ends . stmt_list NEXT

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 313
    stmt                go to state 114
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 305

   88 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list ELSE stmt_list END IF .

    $default  reduce using rule 88 (if_stmt_multi_line)


State 306

   47 stmt_list: stmt_list . stmt
   91 elseif_list: ELSEIF expr THEN stmt_list .

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    $default  reduce using rule 91 (elseif_list)

    stmt                go to state 171
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 307

   90 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list ELSE stmt_list END . IF

    IF  shift, and go to state 314


State 308

   92 elseif_list: elseif_list ELSEIF expr THEN . stmt_list

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt_list           go to state 315
    stmt                go to state 114
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 309

   47 stmt_list: stmt_list . stmt
   97 case_stmt: CASE IS expr stmt_ends stmt_list .

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    $default  reduce using rule 97 (case_stmt)

    stmt                go to state 171
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 310

   58 stmt_ends: stmt_ends . END_OF_LINE
   98 case_stmt: CASE expr TO expr stmt_ends . stmt_list

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 316
    stmt                go to state 114
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 311

   85 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal STEP . basic_literal stmt_ends stmt_list NEXT

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 317


State 312

   58 stmt_ends: stmt_ends . END_OF_LINE
   84 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal stmt_ends . stmt_list NEXT

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 318
    stmt                go to state 114
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 313

   47 stmt_list: stmt_list . stmt
   86 for_each_loop_stmt: FOR EACH IDENTIFIER AS basic_literal IN IDENTIFIER stmt_ends stmt_list . NEXT

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    NEXT        shift, and go to state 319
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                go to state 171
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 314

   90 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list ELSE stmt_list END IF .

    $default  reduce using rule 90 (if_stmt_multi_line)


State 315

   47 stmt_list: stmt_list . stmt
   92 elseif_list: elseif_list ELSEIF expr THEN stmt_list .

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    $default  reduce using rule 92 (elseif_list)

    stmt                go to state 171
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 316

   47 stmt_list: stmt_list . stmt
   98 case_stmt: CASE expr TO expr stmt_ends stmt_list .

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    $default  reduce using rule 98 (case_stmt)

    stmt                go to state 171
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 317

   85 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal STEP basic_literal . stmt_ends stmt_list NEXT

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 320


State 318

   47 stmt_list: stmt_list . stmt
   84 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal stmt_ends stmt_list . NEXT

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    NEXT        shift, and go to state 321
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                go to state 171
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 319

   86 for_each_loop_stmt: FOR EACH IDENTIFIER AS basic_literal IN IDENTIFIER stmt_ends stmt_list NEXT .

    $default  reduce using rule 86 (for_each_loop_stmt)


State 320

   58 stmt_ends: stmt_ends . END_OF_LINE
   85 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal STEP basic_literal stmt_ends . stmt_list NEXT

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list           go to state 322
    stmt                go to state 114
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 321

   84 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal stmt_ends stmt_list NEXT .

    $default  reduce using rule 84 (for_loop_stmt)


State 322

   47 stmt_list: stmt_list . stmt
   85 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal STEP basic_literal stmt_ends stmt_list . NEXT

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    NEXT        shift, and go to state 323
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                go to state 171
    multi_line_stmt     go to state 115
    decl_stmt           go to state 116
    access              go to state 117
    assign_stmt         go to state 118
    while_stmt          go to state 119
    do_loop_stmt        go to state 120
    for_loop_stmt       go to state 121
    for_each_loop_stmt  go to state 122
    if_stmt_multi_line  go to state 123
    select_stmt         go to state 124


State 323

   85 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal STEP basic_literal stmt_ends stmt_list NEXT .

    $default  reduce using rule 85 (for_loop_stmt)
