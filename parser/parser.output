Terminals unused in grammar

    ENDL
    OF
    ASSIGN_CONSTRUCT
    ASSIGN_MULT
    ASSIGN_ORD_DIV
    ASSIGN_INT_DIV
    ASSIGN_ADD
    ASSIGN_SUB
    ASSIGN_LSHIFT
    ASSIGN_RSHIFT
    ASSIGN_CONCAT


Grammar

    0 $accept: root $end

    1 root: program_items_list

    2 program_items_list: %empty
    3                   | program_items_list_not_empty

    4 program_items_list_not_empty: program_item
    5                             | program_items_list_not_empty program_item

    6 program_item: module
    7             | IMPORTS IDENTIFIER stmt_ends

    8 module: MODULE IDENTIFIER stmt_ends END MODULE
    9       | MODULE IDENTIFIER stmt_ends functions_and_sub_list END MODULE
   10       | access MODULE IDENTIFIER stmt_ends END MODULE
   11       | access MODULE IDENTIFIER stmt_ends functions_and_sub_list END MODULE

   12 functions_and_sub_list: function_or_sub
   13                       | functions_and_sub_list stmt_ends function_or_sub

   14 function_or_sub: function
   15                | sub_bloc

   16 function: FUNCTION IDENTIFIER arguments stmt_ends END FUNCTION
   17         | FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION
   18         | FUNCTION IDENTIFIER arguments stmt_ends stmt_list END FUNCTION
   19         | FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION
   20         | access FUNCTION IDENTIFIER arguments stmt_ends END FUNCTION
   21         | access FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION
   22         | access FUNCTION IDENTIFIER arguments stmt_ends stmt_list END FUNCTION
   23         | access FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION

   24 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB
   25         | SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB
   26         | access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB
   27         | access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

   28 parameterlist_or_empty: %empty
   29                       | parameterlist_with_type
   30                       | END_OF_LINE parameterlist_with_type END_OF_LINE
   31                       | END_OF_LINE parameterlist_with_type
   32                       | parameterlist_with_type END_OF_LINE
   33                       | parameterlist_without_type
   34                       | END_OF_LINE parameterlist_without_type END_OF_LINE
   35                       | parameterlist_without_type END_OF_LINE
   36                       | END_OF_LINE parameterlist_without_type

   37 parameterlist_with_type: parameter_with_type
   38                        | parameterlist_with_type ',' parameter_with_type
   39                        | parameterlist_with_type ',' END_OF_LINE parameter_with_type

   40 parameterlist_without_type: parameter_without_type
   41                           | parameterlist_without_type ',' parameter_without_type
   42                           | parameterlist_without_type ',' END_OF_LINE parameter_without_type

   43 parameter_with_type: IDENTIFIER AS basic_literal
   44                    | IDENTIFIER AS basic_literal '(' ')'

   45 parameter_without_type: IDENTIFIER

   46 stmt_list: stmt
   47          | stmt_list stmt

   48 stmt: multi_line_stmt
   49     | single_line_stmt stmt_ends

   50 single_line_stmt: if_stmt_single_line
   51                 | decl_stmt_single_line

   52 multi_line_stmt: decl_stmt stmt_ends
   53                | assign_stmt stmt_ends
   54                | while_stmt stmt_ends
   55                | do_loop_stmt
   56                | for_loop_stmt
   57                | for_each_loop_stmt
   58                | select_stmt stmt_ends
   59                | if_stmt_multi_line stmt_ends

   60 stmt_ends: END_OF_LINE
   61          | stmt_ends END_OF_LINE

   62 decl_stmt: CONST var_name AS basic_literal '=' END_OF_LINE expr
   63          | DIM var_name AS basic_literal '=' END_OF_LINE expr
   64          | DIM var_name '=' END_OF_LINE expr

   65 decl_stmt_single_line: access SUB var_name stmt_list END SUB
   66                      | CONST var_name AS basic_literal '=' expr
   67                      | DIM var_name AS basic_literal '=' expr
   68                      | DIM var_name AS basic_literal
   69                      | DIM var_name '=' expr
   70                      | DIM var_name

   71 var_name: IDENTIFIER '(' expr ')'
   72         | IDENTIFIER

   73 access: PUBLIC
   74       | PROTECTED
   75       | FRIEND
   76       | PRIVATE
   77       | PROTECTED FRIEND
   78       | PRIVATE FRIEND

   79 assign_stmt: IDENTIFIER '=' expr
   80            | IDENTIFIER '=' IDENTIFIER
   81            | IDENTIFIER '=' function_calls

   82 while_stmt: WHILE expr stmt_ends stmt_list END WHILE

   83 do_loop_stmt: DO do_loop_condition stmt_ends stmt_list LOOP
   84             | DO stmt_ends stmt_list LOOP do_loop_condition

   85 do_loop_condition: UNTIL expr
   86                  | WHILE expr

   87 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal stmt_ends stmt_list NEXT
   88              | FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal STEP basic_literal stmt_ends stmt_list NEXT

   89 for_each_loop_stmt: FOR EACH IDENTIFIER AS basic_literal IN IDENTIFIER stmt_ends stmt_list NEXT

   90 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list END IF
   91                   | IF expr THEN stmt_ends stmt_list ELSE stmt_list END IF
   92                   | IF expr THEN stmt_ends stmt_list elseif_list END IF
   93                   | IF expr THEN stmt_ends stmt_list elseif_list ELSE stmt_list END IF

   94 elseif_list: ELSEIF expr THEN stmt_list
   95            | elseif_list ELSEIF expr THEN stmt_list

   96 if_stmt_single_line: IF expr THEN single_line_stmt
   97                    | IF expr THEN single_line_stmt ELSE single_line_stmt

   98 select_stmt: SELECT CASE expr stmt_ends case_list END SELECT

   99 case_list: case_stmt
  100          | case_list case_stmt

  101 case_stmt: CASE expr stmt_ends stmt_list
  102          | CASE IS expr stmt_ends stmt_list
  103          | CASE expr TO expr stmt_ends stmt_list
  104          | CASE ELSE stmt_ends stmt_list

  105 function_call_multiline: IDENTIFIER arguments_multiline

  106 function_call_singleline: IDENTIFIER arguments_singleline

  107 function_calls: function_call_multiline
  108               | function_call_singleline

  109 expr: basic_literal
  110     | '-' expr
  111     | '+' expr
  112     | expr '+' expr
  113     | expr '-' expr
  114     | expr '*' expr
  115     | expr '/' expr
  116     | expr INT_DIV expr
  117     | expr '=' expr
  118     | expr '<' expr
  119     | expr '>' expr
  120     | expr '^' expr
  121     | expr NOT_EQUAL expr
  122     | expr LESS_OR_EQUAL expr
  123     | expr MORE_OR_EQUAL expr
  124     | expr '&' expr

  125 basic_literal: INT
  126              | STRING
  127              | BOOLEAN
  128              | DOUBLE

  129 arguments_multiline: '(' END_OF_LINE expr_list ')'
  130                    | '(' END_OF_LINE expr_list END_OF_LINE ')'
  131                    | '(' expr_list END_OF_LINE ')'

  132 arguments_singleline: '(' expr_list ')'
  133                     | '(' ')'

  134 arguments: arguments_multiline
  135          | arguments_singleline

  136 expr_list: expr
  137          | expr_list ',' expr


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 124
    '(' (40) 24 25 26 27 44 71 129 130 131 132 133
    ')' (41) 24 25 26 27 44 71 129 130 131 132 133
    '*' (42) 114
    '+' (43) 111 112
    ',' (44) 38 39 41 42 137
    '-' (45) 110 113
    '/' (47) 115
    '<' (60) 118
    '=' (61) 62 63 64 66 67 69 79 80 81 87 88 117
    '>' (62) 119
    '^' (94) 120
    error (256)
    INT <int_val> (258) 125
    DOUBLE <double_val> (259) 128
    STRING <str_val> (260) 126
    BOOLEAN <bool_val> (261) 127
    IDENTIFIER <id_name> (262) 7 8 9 10 11 16 17 18 19 20 21 22 23 24 25 26 27 43 44 45 71 72 79 80 81 87 88 89 105 106
    ENDL (263)
    SUB (264) 24 25 26 27 65
    END (265) 8 9 10 11 16 17 18 19 20 21 22 23 24 25 26 27 65 82 90 91 92 93 98
    CONST (266) 62 66
    DIM (267) 63 64 67 68 69 70
    AS (268) 43 44 62 63 66 67 68 87 88 89
    WHILE (269) 82 86
    IF (270) 90 91 92 93 96 97
    ELSEIF (271) 94 95
    SELECT (272) 98
    CASE (273) 98 101 102 103 104
    IS (274) 102
    TO (275) 87 88 103
    IMPORTS (276) 7
    MODULE (277) 8 9 10 11
    FUNCTION (278) 16 17 18 19 20 21 22 23
    RETURN (279) 17 19 21 23
    DO (280) 83 84
    LOOP (281) 83 84
    UNTIL (282) 85
    FOR (283) 87 88 89
    NEXT (284) 87 88 89
    STEP (285) 88
    OF (286)
    IN (287) 89
    EACH (288) 89
    END_OF_LINE (289) 30 31 32 34 35 36 39 42 60 61 62 63 64 129 130 131
    UNARY_MINUS (290)
    UNARY_PLUS (291)
    ASSIGN_CONSTRUCT (292)
    ASSIGN_MULT (293)
    ASSIGN_ORD_DIV (294)
    ASSIGN_INT_DIV (295)
    ASSIGN_ADD (296)
    ASSIGN_SUB (297)
    ASSIGN_LSHIFT (298)
    ASSIGN_RSHIFT (299)
    ASSIGN_CONCAT (300)
    PRIVATE (301) 76 78
    PROTECTED (302) 74 77
    PUBLIC (303) 73
    FRIEND (304) 75 77 78
    INT_DIV (305) 116
    NOT_EQUAL (306) 121
    LESS_OR_EQUAL (307) 122
    MORE_OR_EQUAL (308) 123
    THEN (309) 90 91 92 93 94 95 96 97
    ELSE (310) 91 93 97 104


Nonterminals, with rules where they appear

    $accept (68)
        on left: 0
    root (69)
        on left: 1
        on right: 0
    program_items_list (70)
        on left: 2 3
        on right: 1
    program_items_list_not_empty (71)
        on left: 4 5
        on right: 3 5
    program_item (72)
        on left: 6 7
        on right: 4 5
    module (73)
        on left: 8 9 10 11
        on right: 6
    functions_and_sub_list (74)
        on left: 12 13
        on right: 9 11 13
    function_or_sub (75)
        on left: 14 15
        on right: 12 13
    function (76)
        on left: 16 17 18 19 20 21 22 23
        on right: 14
    sub_bloc (77)
        on left: 24 25 26 27
        on right: 15
    parameterlist_or_empty (78)
        on left: 28 29 30 31 32 33 34 35 36
        on right: 24 25 26 27
    parameterlist_with_type (79)
        on left: 37 38 39
        on right: 29 30 31 32 38 39
    parameterlist_without_type (80)
        on left: 40 41 42
        on right: 33 34 35 36 41 42
    parameter_with_type (81)
        on left: 43 44
        on right: 37 38 39
    parameter_without_type (82)
        on left: 45
        on right: 40 41 42
    stmt_list (83)
        on left: 46 47
        on right: 18 19 22 23 25 27 47 65 82 83 84 87 88 89 90 91 92 93 94 95 101 102 103 104
    stmt (84)
        on left: 48 49
        on right: 46 47
    single_line_stmt (85)
        on left: 50 51
        on right: 49 96 97
    multi_line_stmt (86)
        on left: 52 53 54 55 56 57 58 59
        on right: 48
    stmt_ends (87)
        on left: 60 61
        on right: 7 8 9 10 11 13 16 17 18 19 20 21 22 23 24 25 26 27 49 52 53 54 58 59 61 82 83 84 87 88 89 90 91 92 93 98 101 102 103 104
    decl_stmt (88)
        on left: 62 63 64
        on right: 52
    decl_stmt_single_line (89)
        on left: 65 66 67 68 69 70
        on right: 51
    var_name (90)
        on left: 71 72
        on right: 62 63 64 65 66 67 68 69 70
    access (91)
        on left: 73 74 75 76 77 78
        on right: 10 11 20 21 22 23 26 27 65
    assign_stmt (92)
        on left: 79 80 81
        on right: 53
    while_stmt (93)
        on left: 82
        on right: 54
    do_loop_stmt (94)
        on left: 83 84
        on right: 55
    do_loop_condition (95)
        on left: 85 86
        on right: 83 84
    for_loop_stmt (96)
        on left: 87 88
        on right: 56
    for_each_loop_stmt (97)
        on left: 89
        on right: 57
    if_stmt_multi_line (98)
        on left: 90 91 92 93
        on right: 59
    elseif_list (99)
        on left: 94 95
        on right: 92 93 95
    if_stmt_single_line (100)
        on left: 96 97
        on right: 50
    select_stmt (101)
        on left: 98
        on right: 58
    case_list (102)
        on left: 99 100
        on right: 98 100
    case_stmt (103)
        on left: 101 102 103 104
        on right: 99 100
    function_call_multiline (104)
        on left: 105
        on right: 107
    function_call_singleline (105)
        on left: 106
        on right: 108
    function_calls (106)
        on left: 107 108
        on right: 81
    expr (107)
        on left: 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124
        on right: 17 19 21 23 62 63 64 66 67 69 71 79 82 85 86 90 91 92 93 94 95 96 97 98 101 102 103 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 136 137
    basic_literal (108)
        on left: 125 126 127 128
        on right: 43 44 62 63 66 67 68 87 88 89 109
    arguments_multiline (109)
        on left: 129 130 131
        on right: 105 134
    arguments_singleline (110)
        on left: 132 133
        on right: 106 135
    arguments (111)
        on left: 134 135
        on right: 16 17 18 19 20 21 22 23
    expr_list (112)
        on left: 136 137
        on right: 129 130 131 132 137


State 0

    0 $accept: . root $end

    IMPORTS    shift, and go to state 1
    MODULE     shift, and go to state 2
    PRIVATE    shift, and go to state 3
    PROTECTED  shift, and go to state 4
    PUBLIC     shift, and go to state 5
    FRIEND     shift, and go to state 6

    $default  reduce using rule 2 (program_items_list)

    root                          go to state 7
    program_items_list            go to state 8
    program_items_list_not_empty  go to state 9
    program_item                  go to state 10
    module                        go to state 11
    access                        go to state 12


State 1

    7 program_item: IMPORTS . IDENTIFIER stmt_ends

    IDENTIFIER  shift, and go to state 13


State 2

    8 module: MODULE . IDENTIFIER stmt_ends END MODULE
    9       | MODULE . IDENTIFIER stmt_ends functions_and_sub_list END MODULE

    IDENTIFIER  shift, and go to state 14


State 3

   76 access: PRIVATE .
   78       | PRIVATE . FRIEND

    FRIEND  shift, and go to state 15

    $default  reduce using rule 76 (access)


State 4

   74 access: PROTECTED .
   77       | PROTECTED . FRIEND

    FRIEND  shift, and go to state 16

    $default  reduce using rule 74 (access)


State 5

   73 access: PUBLIC .

    $default  reduce using rule 73 (access)


State 6

   75 access: FRIEND .

    $default  reduce using rule 75 (access)


State 7

    0 $accept: root . $end

    $end  shift, and go to state 17


State 8

    1 root: program_items_list .

    $default  reduce using rule 1 (root)


State 9

    3 program_items_list: program_items_list_not_empty .
    5 program_items_list_not_empty: program_items_list_not_empty . program_item

    IMPORTS    shift, and go to state 1
    MODULE     shift, and go to state 2
    PRIVATE    shift, and go to state 3
    PROTECTED  shift, and go to state 4
    PUBLIC     shift, and go to state 5
    FRIEND     shift, and go to state 6

    $default  reduce using rule 3 (program_items_list)

    program_item  go to state 18
    module        go to state 11
    access        go to state 12


State 10

    4 program_items_list_not_empty: program_item .

    $default  reduce using rule 4 (program_items_list_not_empty)


State 11

    6 program_item: module .

    $default  reduce using rule 6 (program_item)


State 12

   10 module: access . MODULE IDENTIFIER stmt_ends END MODULE
   11       | access . MODULE IDENTIFIER stmt_ends functions_and_sub_list END MODULE

    MODULE  shift, and go to state 19


State 13

    7 program_item: IMPORTS IDENTIFIER . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 21


State 14

    8 module: MODULE IDENTIFIER . stmt_ends END MODULE
    9       | MODULE IDENTIFIER . stmt_ends functions_and_sub_list END MODULE

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 22


State 15

   78 access: PRIVATE FRIEND .

    $default  reduce using rule 78 (access)


State 16

   77 access: PROTECTED FRIEND .

    $default  reduce using rule 77 (access)


State 17

    0 $accept: root $end .

    $default  accept


State 18

    5 program_items_list_not_empty: program_items_list_not_empty program_item .

    $default  reduce using rule 5 (program_items_list_not_empty)


State 19

   10 module: access MODULE . IDENTIFIER stmt_ends END MODULE
   11       | access MODULE . IDENTIFIER stmt_ends functions_and_sub_list END MODULE

    IDENTIFIER  shift, and go to state 23


State 20

   60 stmt_ends: END_OF_LINE .

    $default  reduce using rule 60 (stmt_ends)


State 21

    7 program_item: IMPORTS IDENTIFIER stmt_ends .
   61 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 7 (program_item)


State 22

    8 module: MODULE IDENTIFIER stmt_ends . END MODULE
    9       | MODULE IDENTIFIER stmt_ends . functions_and_sub_list END MODULE
   61 stmt_ends: stmt_ends . END_OF_LINE

    SUB          shift, and go to state 25
    END          shift, and go to state 26
    FUNCTION     shift, and go to state 27
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    functions_and_sub_list  go to state 28
    function_or_sub         go to state 29
    function                go to state 30
    sub_bloc                go to state 31
    access                  go to state 32


State 23

   10 module: access MODULE IDENTIFIER . stmt_ends END MODULE
   11       | access MODULE IDENTIFIER . stmt_ends functions_and_sub_list END MODULE

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 33


State 24

   61 stmt_ends: stmt_ends END_OF_LINE .

    $default  reduce using rule 61 (stmt_ends)


State 25

   24 sub_bloc: SUB . IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB
   25         | SUB . IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    IDENTIFIER  shift, and go to state 34


State 26

    8 module: MODULE IDENTIFIER stmt_ends END . MODULE

    MODULE  shift, and go to state 35


State 27

   16 function: FUNCTION . IDENTIFIER arguments stmt_ends END FUNCTION
   17         | FUNCTION . IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION
   18         | FUNCTION . IDENTIFIER arguments stmt_ends stmt_list END FUNCTION
   19         | FUNCTION . IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION

    IDENTIFIER  shift, and go to state 36


State 28

    9 module: MODULE IDENTIFIER stmt_ends functions_and_sub_list . END MODULE
   13 functions_and_sub_list: functions_and_sub_list . stmt_ends function_or_sub

    END          shift, and go to state 37
    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 38


State 29

   12 functions_and_sub_list: function_or_sub .

    $default  reduce using rule 12 (functions_and_sub_list)


State 30

   14 function_or_sub: function .

    $default  reduce using rule 14 (function_or_sub)


State 31

   15 function_or_sub: sub_bloc .

    $default  reduce using rule 15 (function_or_sub)


State 32

   20 function: access . FUNCTION IDENTIFIER arguments stmt_ends END FUNCTION
   21         | access . FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION
   22         | access . FUNCTION IDENTIFIER arguments stmt_ends stmt_list END FUNCTION
   23         | access . FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION
   26 sub_bloc: access . SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB
   27         | access . SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    SUB       shift, and go to state 39
    FUNCTION  shift, and go to state 40


State 33

   10 module: access MODULE IDENTIFIER stmt_ends . END MODULE
   11       | access MODULE IDENTIFIER stmt_ends . functions_and_sub_list END MODULE
   61 stmt_ends: stmt_ends . END_OF_LINE

    SUB          shift, and go to state 25
    END          shift, and go to state 41
    FUNCTION     shift, and go to state 27
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    functions_and_sub_list  go to state 42
    function_or_sub         go to state 29
    function                go to state 30
    sub_bloc                go to state 31
    access                  go to state 32


State 34

   24 sub_bloc: SUB IDENTIFIER . '(' parameterlist_or_empty ')' stmt_ends END SUB
   25         | SUB IDENTIFIER . '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    '('  shift, and go to state 43


State 35

    8 module: MODULE IDENTIFIER stmt_ends END MODULE .

    $default  reduce using rule 8 (module)


State 36

   16 function: FUNCTION IDENTIFIER . arguments stmt_ends END FUNCTION
   17         | FUNCTION IDENTIFIER . arguments stmt_ends RETURN expr END FUNCTION
   18         | FUNCTION IDENTIFIER . arguments stmt_ends stmt_list END FUNCTION
   19         | FUNCTION IDENTIFIER . arguments stmt_ends stmt_list RETURN expr END FUNCTION

    '('  shift, and go to state 44

    arguments_multiline   go to state 45
    arguments_singleline  go to state 46
    arguments             go to state 47


State 37

    9 module: MODULE IDENTIFIER stmt_ends functions_and_sub_list END . MODULE

    MODULE  shift, and go to state 48


State 38

   13 functions_and_sub_list: functions_and_sub_list stmt_ends . function_or_sub
   61 stmt_ends: stmt_ends . END_OF_LINE

    SUB          shift, and go to state 25
    FUNCTION     shift, and go to state 27
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    function_or_sub  go to state 49
    function         go to state 30
    sub_bloc         go to state 31
    access           go to state 32


State 39

   26 sub_bloc: access SUB . IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB
   27         | access SUB . IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    IDENTIFIER  shift, and go to state 50


State 40

   20 function: access FUNCTION . IDENTIFIER arguments stmt_ends END FUNCTION
   21         | access FUNCTION . IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION
   22         | access FUNCTION . IDENTIFIER arguments stmt_ends stmt_list END FUNCTION
   23         | access FUNCTION . IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION

    IDENTIFIER  shift, and go to state 51


State 41

   10 module: access MODULE IDENTIFIER stmt_ends END . MODULE

    MODULE  shift, and go to state 52


State 42

   11 module: access MODULE IDENTIFIER stmt_ends functions_and_sub_list . END MODULE
   13 functions_and_sub_list: functions_and_sub_list . stmt_ends function_or_sub

    END          shift, and go to state 53
    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 38


State 43

   24 sub_bloc: SUB IDENTIFIER '(' . parameterlist_or_empty ')' stmt_ends END SUB
   25         | SUB IDENTIFIER '(' . parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    IDENTIFIER   shift, and go to state 54
    END_OF_LINE  shift, and go to state 55

    $default  reduce using rule 28 (parameterlist_or_empty)

    parameterlist_or_empty      go to state 56
    parameterlist_with_type     go to state 57
    parameterlist_without_type  go to state 58
    parameter_with_type         go to state 59
    parameter_without_type      go to state 60


State 44

  129 arguments_multiline: '(' . END_OF_LINE expr_list ')'
  130                    | '(' . END_OF_LINE expr_list END_OF_LINE ')'
  131                    | '(' . expr_list END_OF_LINE ')'
  132 arguments_singleline: '(' . expr_list ')'
  133                     | '(' . ')'

    INT          shift, and go to state 61
    DOUBLE       shift, and go to state 62
    STRING       shift, and go to state 63
    BOOLEAN      shift, and go to state 64
    END_OF_LINE  shift, and go to state 65
    '+'          shift, and go to state 66
    '-'          shift, and go to state 67
    ')'          shift, and go to state 68

    expr           go to state 69
    basic_literal  go to state 70
    expr_list      go to state 71


State 45

  134 arguments: arguments_multiline .

    $default  reduce using rule 134 (arguments)


State 46

  135 arguments: arguments_singleline .

    $default  reduce using rule 135 (arguments)


State 47

   16 function: FUNCTION IDENTIFIER arguments . stmt_ends END FUNCTION
   17         | FUNCTION IDENTIFIER arguments . stmt_ends RETURN expr END FUNCTION
   18         | FUNCTION IDENTIFIER arguments . stmt_ends stmt_list END FUNCTION
   19         | FUNCTION IDENTIFIER arguments . stmt_ends stmt_list RETURN expr END FUNCTION

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 72


State 48

    9 module: MODULE IDENTIFIER stmt_ends functions_and_sub_list END MODULE .

    $default  reduce using rule 9 (module)


State 49

   13 functions_and_sub_list: functions_and_sub_list stmt_ends function_or_sub .

    $default  reduce using rule 13 (functions_and_sub_list)


State 50

   26 sub_bloc: access SUB IDENTIFIER . '(' parameterlist_or_empty ')' stmt_ends END SUB
   27         | access SUB IDENTIFIER . '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    '('  shift, and go to state 73


State 51

   20 function: access FUNCTION IDENTIFIER . arguments stmt_ends END FUNCTION
   21         | access FUNCTION IDENTIFIER . arguments stmt_ends RETURN expr END FUNCTION
   22         | access FUNCTION IDENTIFIER . arguments stmt_ends stmt_list END FUNCTION
   23         | access FUNCTION IDENTIFIER . arguments stmt_ends stmt_list RETURN expr END FUNCTION

    '('  shift, and go to state 44

    arguments_multiline   go to state 45
    arguments_singleline  go to state 46
    arguments             go to state 74


State 52

   10 module: access MODULE IDENTIFIER stmt_ends END MODULE .

    $default  reduce using rule 10 (module)


State 53

   11 module: access MODULE IDENTIFIER stmt_ends functions_and_sub_list END . MODULE

    MODULE  shift, and go to state 75


State 54

   43 parameter_with_type: IDENTIFIER . AS basic_literal
   44                    | IDENTIFIER . AS basic_literal '(' ')'
   45 parameter_without_type: IDENTIFIER .

    AS  shift, and go to state 76

    $default  reduce using rule 45 (parameter_without_type)


State 55

   30 parameterlist_or_empty: END_OF_LINE . parameterlist_with_type END_OF_LINE
   31                       | END_OF_LINE . parameterlist_with_type
   34                       | END_OF_LINE . parameterlist_without_type END_OF_LINE
   36                       | END_OF_LINE . parameterlist_without_type

    IDENTIFIER  shift, and go to state 54

    parameterlist_with_type     go to state 77
    parameterlist_without_type  go to state 78
    parameter_with_type         go to state 59
    parameter_without_type      go to state 60


State 56

   24 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty . ')' stmt_ends END SUB
   25         | SUB IDENTIFIER '(' parameterlist_or_empty . ')' stmt_ends stmt_list END SUB

    ')'  shift, and go to state 79


State 57

   29 parameterlist_or_empty: parameterlist_with_type .
   32                       | parameterlist_with_type . END_OF_LINE
   38 parameterlist_with_type: parameterlist_with_type . ',' parameter_with_type
   39                        | parameterlist_with_type . ',' END_OF_LINE parameter_with_type

    END_OF_LINE  shift, and go to state 80
    ','          shift, and go to state 81

    $default  reduce using rule 29 (parameterlist_or_empty)


State 58

   33 parameterlist_or_empty: parameterlist_without_type .
   35                       | parameterlist_without_type . END_OF_LINE
   41 parameterlist_without_type: parameterlist_without_type . ',' parameter_without_type
   42                           | parameterlist_without_type . ',' END_OF_LINE parameter_without_type

    END_OF_LINE  shift, and go to state 82
    ','          shift, and go to state 83

    $default  reduce using rule 33 (parameterlist_or_empty)


State 59

   37 parameterlist_with_type: parameter_with_type .

    $default  reduce using rule 37 (parameterlist_with_type)


State 60

   40 parameterlist_without_type: parameter_without_type .

    $default  reduce using rule 40 (parameterlist_without_type)


State 61

  125 basic_literal: INT .

    $default  reduce using rule 125 (basic_literal)


State 62

  128 basic_literal: DOUBLE .

    $default  reduce using rule 128 (basic_literal)


State 63

  126 basic_literal: STRING .

    $default  reduce using rule 126 (basic_literal)


State 64

  127 basic_literal: BOOLEAN .

    $default  reduce using rule 127 (basic_literal)


State 65

  129 arguments_multiline: '(' END_OF_LINE . expr_list ')'
  130                    | '(' END_OF_LINE . expr_list END_OF_LINE ')'

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 69
    basic_literal  go to state 70
    expr_list      go to state 84


State 66

  111 expr: '+' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 85
    basic_literal  go to state 70


State 67

  110 expr: '-' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 86
    basic_literal  go to state 70


State 68

  133 arguments_singleline: '(' ')' .

    $default  reduce using rule 133 (arguments_singleline)


State 69

  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr
  136 expr_list: expr .

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 136 (expr_list)


State 70

  109 expr: basic_literal .

    $default  reduce using rule 109 (expr)


State 71

  131 arguments_multiline: '(' expr_list . END_OF_LINE ')'
  132 arguments_singleline: '(' expr_list . ')'
  137 expr_list: expr_list . ',' expr

    END_OF_LINE  shift, and go to state 100
    ')'          shift, and go to state 101
    ','          shift, and go to state 102


State 72

   16 function: FUNCTION IDENTIFIER arguments stmt_ends . END FUNCTION
   17         | FUNCTION IDENTIFIER arguments stmt_ends . RETURN expr END FUNCTION
   18         | FUNCTION IDENTIFIER arguments stmt_ends . stmt_list END FUNCTION
   19         | FUNCTION IDENTIFIER arguments stmt_ends . stmt_list RETURN expr END FUNCTION
   61 stmt_ends: stmt_ends . END_OF_LINE

    IDENTIFIER   shift, and go to state 103
    END          shift, and go to state 104
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    RETURN       shift, and go to state 110
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list              go to state 113
    stmt                   go to state 114
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 73

   26 sub_bloc: access SUB IDENTIFIER '(' . parameterlist_or_empty ')' stmt_ends END SUB
   27         | access SUB IDENTIFIER '(' . parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    IDENTIFIER   shift, and go to state 54
    END_OF_LINE  shift, and go to state 55

    $default  reduce using rule 28 (parameterlist_or_empty)

    parameterlist_or_empty      go to state 128
    parameterlist_with_type     go to state 57
    parameterlist_without_type  go to state 58
    parameter_with_type         go to state 59
    parameter_without_type      go to state 60


State 74

   20 function: access FUNCTION IDENTIFIER arguments . stmt_ends END FUNCTION
   21         | access FUNCTION IDENTIFIER arguments . stmt_ends RETURN expr END FUNCTION
   22         | access FUNCTION IDENTIFIER arguments . stmt_ends stmt_list END FUNCTION
   23         | access FUNCTION IDENTIFIER arguments . stmt_ends stmt_list RETURN expr END FUNCTION

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 129


State 75

   11 module: access MODULE IDENTIFIER stmt_ends functions_and_sub_list END MODULE .

    $default  reduce using rule 11 (module)


State 76

   43 parameter_with_type: IDENTIFIER AS . basic_literal
   44                    | IDENTIFIER AS . basic_literal '(' ')'

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 130


State 77

   30 parameterlist_or_empty: END_OF_LINE parameterlist_with_type . END_OF_LINE
   31                       | END_OF_LINE parameterlist_with_type .
   38 parameterlist_with_type: parameterlist_with_type . ',' parameter_with_type
   39                        | parameterlist_with_type . ',' END_OF_LINE parameter_with_type

    END_OF_LINE  shift, and go to state 131
    ','          shift, and go to state 81

    $default  reduce using rule 31 (parameterlist_or_empty)


State 78

   34 parameterlist_or_empty: END_OF_LINE parameterlist_without_type . END_OF_LINE
   36                       | END_OF_LINE parameterlist_without_type .
   41 parameterlist_without_type: parameterlist_without_type . ',' parameter_without_type
   42                           | parameterlist_without_type . ',' END_OF_LINE parameter_without_type

    END_OF_LINE  shift, and go to state 132
    ','          shift, and go to state 83

    $default  reduce using rule 36 (parameterlist_or_empty)


State 79

   24 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' . stmt_ends END SUB
   25         | SUB IDENTIFIER '(' parameterlist_or_empty ')' . stmt_ends stmt_list END SUB

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 133


State 80

   32 parameterlist_or_empty: parameterlist_with_type END_OF_LINE .

    $default  reduce using rule 32 (parameterlist_or_empty)


State 81

   38 parameterlist_with_type: parameterlist_with_type ',' . parameter_with_type
   39                        | parameterlist_with_type ',' . END_OF_LINE parameter_with_type

    IDENTIFIER   shift, and go to state 134
    END_OF_LINE  shift, and go to state 135

    parameter_with_type  go to state 136


State 82

   35 parameterlist_or_empty: parameterlist_without_type END_OF_LINE .

    $default  reduce using rule 35 (parameterlist_or_empty)


State 83

   41 parameterlist_without_type: parameterlist_without_type ',' . parameter_without_type
   42                           | parameterlist_without_type ',' . END_OF_LINE parameter_without_type

    IDENTIFIER   shift, and go to state 137
    END_OF_LINE  shift, and go to state 138

    parameter_without_type  go to state 139


State 84

  129 arguments_multiline: '(' END_OF_LINE expr_list . ')'
  130                    | '(' END_OF_LINE expr_list . END_OF_LINE ')'
  137 expr_list: expr_list . ',' expr

    END_OF_LINE  shift, and go to state 140
    ')'          shift, and go to state 141
    ','          shift, and go to state 102


State 85

  111 expr: '+' expr .
  112     | expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 111 (expr)


State 86

  110 expr: '-' expr .
  112     | expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 110 (expr)


State 87

  120 expr: expr '^' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 142
    basic_literal  go to state 70


State 88

  114 expr: expr '*' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 143
    basic_literal  go to state 70


State 89

  115 expr: expr '/' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 144
    basic_literal  go to state 70


State 90

  116 expr: expr INT_DIV . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 145
    basic_literal  go to state 70


State 91

  112 expr: expr '+' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 146
    basic_literal  go to state 70


State 92

  113 expr: expr '-' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 147
    basic_literal  go to state 70


State 93

  117 expr: expr '=' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 148
    basic_literal  go to state 70


State 94

  121 expr: expr NOT_EQUAL . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 149
    basic_literal  go to state 70


State 95

  122 expr: expr LESS_OR_EQUAL . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 150
    basic_literal  go to state 70


State 96

  123 expr: expr MORE_OR_EQUAL . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 151
    basic_literal  go to state 70


State 97

  119 expr: expr '>' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 152
    basic_literal  go to state 70


State 98

  118 expr: expr '<' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 153
    basic_literal  go to state 70


State 99

  124 expr: expr '&' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 154
    basic_literal  go to state 70


State 100

  131 arguments_multiline: '(' expr_list END_OF_LINE . ')'

    ')'  shift, and go to state 155


State 101

  132 arguments_singleline: '(' expr_list ')' .

    $default  reduce using rule 132 (arguments_singleline)


State 102

  137 expr_list: expr_list ',' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 156
    basic_literal  go to state 70


State 103

   79 assign_stmt: IDENTIFIER . '=' expr
   80            | IDENTIFIER . '=' IDENTIFIER
   81            | IDENTIFIER . '=' function_calls

    '='  shift, and go to state 157


State 104

   16 function: FUNCTION IDENTIFIER arguments stmt_ends END . FUNCTION

    FUNCTION  shift, and go to state 158


State 105

   62 decl_stmt: CONST . var_name AS basic_literal '=' END_OF_LINE expr
   66 decl_stmt_single_line: CONST . var_name AS basic_literal '=' expr

    IDENTIFIER  shift, and go to state 159

    var_name  go to state 160


State 106

   63 decl_stmt: DIM . var_name AS basic_literal '=' END_OF_LINE expr
   64          | DIM . var_name '=' END_OF_LINE expr
   67 decl_stmt_single_line: DIM . var_name AS basic_literal '=' expr
   68                      | DIM . var_name AS basic_literal
   69                      | DIM . var_name '=' expr
   70                      | DIM . var_name

    IDENTIFIER  shift, and go to state 159

    var_name  go to state 161


State 107

   82 while_stmt: WHILE . expr stmt_ends stmt_list END WHILE

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 162
    basic_literal  go to state 70


State 108

   90 if_stmt_multi_line: IF . expr THEN stmt_ends stmt_list END IF
   91                   | IF . expr THEN stmt_ends stmt_list ELSE stmt_list END IF
   92                   | IF . expr THEN stmt_ends stmt_list elseif_list END IF
   93                   | IF . expr THEN stmt_ends stmt_list elseif_list ELSE stmt_list END IF
   96 if_stmt_single_line: IF . expr THEN single_line_stmt
   97                    | IF . expr THEN single_line_stmt ELSE single_line_stmt

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 163
    basic_literal  go to state 70


State 109

   98 select_stmt: SELECT . CASE expr stmt_ends case_list END SELECT

    CASE  shift, and go to state 164


State 110

   17 function: FUNCTION IDENTIFIER arguments stmt_ends RETURN . expr END FUNCTION

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 165
    basic_literal  go to state 70


State 111

   83 do_loop_stmt: DO . do_loop_condition stmt_ends stmt_list LOOP
   84             | DO . stmt_ends stmt_list LOOP do_loop_condition

    WHILE        shift, and go to state 166
    UNTIL        shift, and go to state 167
    END_OF_LINE  shift, and go to state 20

    stmt_ends          go to state 168
    do_loop_condition  go to state 169


State 112

   87 for_loop_stmt: FOR . IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal stmt_ends stmt_list NEXT
   88              | FOR . IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal STEP basic_literal stmt_ends stmt_list NEXT
   89 for_each_loop_stmt: FOR . EACH IDENTIFIER AS basic_literal IN IDENTIFIER stmt_ends stmt_list NEXT

    IDENTIFIER  shift, and go to state 170
    EACH        shift, and go to state 171


State 113

   18 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list . END FUNCTION
   19         | FUNCTION IDENTIFIER arguments stmt_ends stmt_list . RETURN expr END FUNCTION
   47 stmt_list: stmt_list . stmt

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 172
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    RETURN      shift, and go to state 173
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                   go to state 174
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 114

   46 stmt_list: stmt .

    $default  reduce using rule 46 (stmt_list)


State 115

   49 stmt: single_line_stmt . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 175


State 116

   48 stmt: multi_line_stmt .

    $default  reduce using rule 48 (stmt)


State 117

   52 multi_line_stmt: decl_stmt . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 176


State 118

   51 single_line_stmt: decl_stmt_single_line .

    $default  reduce using rule 51 (single_line_stmt)


State 119

   65 decl_stmt_single_line: access . SUB var_name stmt_list END SUB

    SUB  shift, and go to state 177


State 120

   53 multi_line_stmt: assign_stmt . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 178


State 121

   54 multi_line_stmt: while_stmt . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 179


State 122

   55 multi_line_stmt: do_loop_stmt .

    $default  reduce using rule 55 (multi_line_stmt)


State 123

   56 multi_line_stmt: for_loop_stmt .

    $default  reduce using rule 56 (multi_line_stmt)


State 124

   57 multi_line_stmt: for_each_loop_stmt .

    $default  reduce using rule 57 (multi_line_stmt)


State 125

   59 multi_line_stmt: if_stmt_multi_line . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 180


State 126

   50 single_line_stmt: if_stmt_single_line .

    $default  reduce using rule 50 (single_line_stmt)


State 127

   58 multi_line_stmt: select_stmt . stmt_ends

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 181


State 128

   26 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty . ')' stmt_ends END SUB
   27         | access SUB IDENTIFIER '(' parameterlist_or_empty . ')' stmt_ends stmt_list END SUB

    ')'  shift, and go to state 182


State 129

   20 function: access FUNCTION IDENTIFIER arguments stmt_ends . END FUNCTION
   21         | access FUNCTION IDENTIFIER arguments stmt_ends . RETURN expr END FUNCTION
   22         | access FUNCTION IDENTIFIER arguments stmt_ends . stmt_list END FUNCTION
   23         | access FUNCTION IDENTIFIER arguments stmt_ends . stmt_list RETURN expr END FUNCTION
   61 stmt_ends: stmt_ends . END_OF_LINE

    IDENTIFIER   shift, and go to state 103
    END          shift, and go to state 183
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    RETURN       shift, and go to state 184
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list              go to state 185
    stmt                   go to state 114
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 130

   43 parameter_with_type: IDENTIFIER AS basic_literal .
   44                    | IDENTIFIER AS basic_literal . '(' ')'

    '('  shift, and go to state 186

    $default  reduce using rule 43 (parameter_with_type)


State 131

   30 parameterlist_or_empty: END_OF_LINE parameterlist_with_type END_OF_LINE .

    $default  reduce using rule 30 (parameterlist_or_empty)


State 132

   34 parameterlist_or_empty: END_OF_LINE parameterlist_without_type END_OF_LINE .

    $default  reduce using rule 34 (parameterlist_or_empty)


State 133

   24 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends . END SUB
   25         | SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends . stmt_list END SUB
   61 stmt_ends: stmt_ends . END_OF_LINE

    IDENTIFIER   shift, and go to state 103
    END          shift, and go to state 187
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list              go to state 188
    stmt                   go to state 114
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 134

   43 parameter_with_type: IDENTIFIER . AS basic_literal
   44                    | IDENTIFIER . AS basic_literal '(' ')'

    AS  shift, and go to state 76


State 135

   39 parameterlist_with_type: parameterlist_with_type ',' END_OF_LINE . parameter_with_type

    IDENTIFIER  shift, and go to state 134

    parameter_with_type  go to state 189


State 136

   38 parameterlist_with_type: parameterlist_with_type ',' parameter_with_type .

    $default  reduce using rule 38 (parameterlist_with_type)


State 137

   45 parameter_without_type: IDENTIFIER .

    $default  reduce using rule 45 (parameter_without_type)


State 138

   42 parameterlist_without_type: parameterlist_without_type ',' END_OF_LINE . parameter_without_type

    IDENTIFIER  shift, and go to state 137

    parameter_without_type  go to state 190


State 139

   41 parameterlist_without_type: parameterlist_without_type ',' parameter_without_type .

    $default  reduce using rule 41 (parameterlist_without_type)


State 140

  130 arguments_multiline: '(' END_OF_LINE expr_list END_OF_LINE . ')'

    ')'  shift, and go to state 191


State 141

  129 arguments_multiline: '(' END_OF_LINE expr_list ')' .

    $default  reduce using rule 129 (arguments_multiline)


State 142

  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  120     | expr '^' expr .
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 120 (expr)


State 143

  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  114     | expr '*' expr .
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 114 (expr)


State 144

  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  115     | expr '/' expr .
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 115 (expr)


State 145

  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  116     | expr INT_DIV expr .
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 116 (expr)


State 146

  112 expr: expr . '+' expr
  112     | expr '+' expr .
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 112 (expr)


State 147

  112 expr: expr . '+' expr
  113     | expr . '-' expr
  113     | expr '-' expr .
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 113 (expr)


State 148

  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  117     | expr '=' expr .
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    '&'  shift, and go to state 99

    $default  reduce using rule 117 (expr)


State 149

  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  121     | expr NOT_EQUAL expr .
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    '&'  shift, and go to state 99

    $default  reduce using rule 121 (expr)


State 150

  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  122     | expr LESS_OR_EQUAL expr .
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    '&'  shift, and go to state 99

    $default  reduce using rule 122 (expr)


State 151

  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  123     | expr MORE_OR_EQUAL expr .
  124     | expr . '&' expr

    '&'  shift, and go to state 99

    $default  reduce using rule 123 (expr)


State 152

  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  119     | expr '>' expr .
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    '&'  shift, and go to state 99

    $default  reduce using rule 119 (expr)


State 153

  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  118     | expr '<' expr .
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    '&'  shift, and go to state 99

    $default  reduce using rule 118 (expr)


State 154

  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr
  124     | expr '&' expr .

    $default  reduce using rule 124 (expr)


State 155

  131 arguments_multiline: '(' expr_list END_OF_LINE ')' .

    $default  reduce using rule 131 (arguments_multiline)


State 156

  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr
  137 expr_list: expr_list ',' expr .

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 137 (expr_list)


State 157

   79 assign_stmt: IDENTIFIER '=' . expr
   80            | IDENTIFIER '=' . IDENTIFIER
   81            | IDENTIFIER '=' . function_calls

    INT         shift, and go to state 61
    DOUBLE      shift, and go to state 62
    STRING      shift, and go to state 63
    BOOLEAN     shift, and go to state 64
    IDENTIFIER  shift, and go to state 192
    '+'         shift, and go to state 66
    '-'         shift, and go to state 67

    function_call_multiline   go to state 193
    function_call_singleline  go to state 194
    function_calls            go to state 195
    expr                      go to state 196
    basic_literal             go to state 70


State 158

   16 function: FUNCTION IDENTIFIER arguments stmt_ends END FUNCTION .

    $default  reduce using rule 16 (function)


State 159

   71 var_name: IDENTIFIER . '(' expr ')'
   72         | IDENTIFIER .

    '('  shift, and go to state 197

    $default  reduce using rule 72 (var_name)


State 160

   62 decl_stmt: CONST var_name . AS basic_literal '=' END_OF_LINE expr
   66 decl_stmt_single_line: CONST var_name . AS basic_literal '=' expr

    AS  shift, and go to state 198


State 161

   63 decl_stmt: DIM var_name . AS basic_literal '=' END_OF_LINE expr
   64          | DIM var_name . '=' END_OF_LINE expr
   67 decl_stmt_single_line: DIM var_name . AS basic_literal '=' expr
   68                      | DIM var_name . AS basic_literal
   69                      | DIM var_name . '=' expr
   70                      | DIM var_name .

    AS   shift, and go to state 199
    '='  shift, and go to state 200

    $default  reduce using rule 70 (decl_stmt_single_line)


State 162

   82 while_stmt: WHILE expr . stmt_ends stmt_list END WHILE
  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    END_OF_LINE    shift, and go to state 20
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    stmt_ends  go to state 201


State 163

   90 if_stmt_multi_line: IF expr . THEN stmt_ends stmt_list END IF
   91                   | IF expr . THEN stmt_ends stmt_list ELSE stmt_list END IF
   92                   | IF expr . THEN stmt_ends stmt_list elseif_list END IF
   93                   | IF expr . THEN stmt_ends stmt_list elseif_list ELSE stmt_list END IF
   96 if_stmt_single_line: IF expr . THEN single_line_stmt
   97                    | IF expr . THEN single_line_stmt ELSE single_line_stmt
  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99
    THEN           shift, and go to state 202


State 164

   98 select_stmt: SELECT CASE . expr stmt_ends case_list END SELECT

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 203
    basic_literal  go to state 70


State 165

   17 function: FUNCTION IDENTIFIER arguments stmt_ends RETURN expr . END FUNCTION
  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    END            shift, and go to state 204
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99


State 166

   86 do_loop_condition: WHILE . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 205
    basic_literal  go to state 70


State 167

   85 do_loop_condition: UNTIL . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 206
    basic_literal  go to state 70


State 168

   61 stmt_ends: stmt_ends . END_OF_LINE
   84 do_loop_stmt: DO stmt_ends . stmt_list LOOP do_loop_condition

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list              go to state 207
    stmt                   go to state 114
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 169

   83 do_loop_stmt: DO do_loop_condition . stmt_ends stmt_list LOOP

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 208


State 170

   87 for_loop_stmt: FOR IDENTIFIER . AS basic_literal '=' basic_literal TO basic_literal stmt_ends stmt_list NEXT
   88              | FOR IDENTIFIER . AS basic_literal '=' basic_literal TO basic_literal STEP basic_literal stmt_ends stmt_list NEXT

    AS  shift, and go to state 209


State 171

   89 for_each_loop_stmt: FOR EACH . IDENTIFIER AS basic_literal IN IDENTIFIER stmt_ends stmt_list NEXT

    IDENTIFIER  shift, and go to state 210


State 172

   18 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list END . FUNCTION

    FUNCTION  shift, and go to state 211


State 173

   19 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN . expr END FUNCTION

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 212
    basic_literal  go to state 70


State 174

   47 stmt_list: stmt_list stmt .

    $default  reduce using rule 47 (stmt_list)


State 175

   49 stmt: single_line_stmt stmt_ends .
   61 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 49 (stmt)


State 176

   52 multi_line_stmt: decl_stmt stmt_ends .
   61 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 52 (multi_line_stmt)


State 177

   65 decl_stmt_single_line: access SUB . var_name stmt_list END SUB

    IDENTIFIER  shift, and go to state 159

    var_name  go to state 213


State 178

   53 multi_line_stmt: assign_stmt stmt_ends .
   61 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 53 (multi_line_stmt)


State 179

   54 multi_line_stmt: while_stmt stmt_ends .
   61 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 54 (multi_line_stmt)


State 180

   59 multi_line_stmt: if_stmt_multi_line stmt_ends .
   61 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 59 (multi_line_stmt)


State 181

   58 multi_line_stmt: select_stmt stmt_ends .
   61 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 24

    $default  reduce using rule 58 (multi_line_stmt)


State 182

   26 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' . stmt_ends END SUB
   27         | access SUB IDENTIFIER '(' parameterlist_or_empty ')' . stmt_ends stmt_list END SUB

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 214


State 183

   20 function: access FUNCTION IDENTIFIER arguments stmt_ends END . FUNCTION

    FUNCTION  shift, and go to state 215


State 184

   21 function: access FUNCTION IDENTIFIER arguments stmt_ends RETURN . expr END FUNCTION

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 216
    basic_literal  go to state 70


State 185

   22 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list . END FUNCTION
   23         | access FUNCTION IDENTIFIER arguments stmt_ends stmt_list . RETURN expr END FUNCTION
   47 stmt_list: stmt_list . stmt

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 217
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    RETURN      shift, and go to state 218
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                   go to state 174
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 186

   44 parameter_with_type: IDENTIFIER AS basic_literal '(' . ')'

    ')'  shift, and go to state 219


State 187

   24 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END . SUB

    SUB  shift, and go to state 220


State 188

   25 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list . END SUB
   47 stmt_list: stmt_list . stmt

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 221
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                   go to state 174
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 189

   39 parameterlist_with_type: parameterlist_with_type ',' END_OF_LINE parameter_with_type .

    $default  reduce using rule 39 (parameterlist_with_type)


State 190

   42 parameterlist_without_type: parameterlist_without_type ',' END_OF_LINE parameter_without_type .

    $default  reduce using rule 42 (parameterlist_without_type)


State 191

  130 arguments_multiline: '(' END_OF_LINE expr_list END_OF_LINE ')' .

    $default  reduce using rule 130 (arguments_multiline)


State 192

   80 assign_stmt: IDENTIFIER '=' IDENTIFIER .
  105 function_call_multiline: IDENTIFIER . arguments_multiline
  106 function_call_singleline: IDENTIFIER . arguments_singleline

    '('  shift, and go to state 44

    $default  reduce using rule 80 (assign_stmt)

    arguments_multiline   go to state 222
    arguments_singleline  go to state 223


State 193

  107 function_calls: function_call_multiline .

    $default  reduce using rule 107 (function_calls)


State 194

  108 function_calls: function_call_singleline .

    $default  reduce using rule 108 (function_calls)


State 195

   81 assign_stmt: IDENTIFIER '=' function_calls .

    $default  reduce using rule 81 (assign_stmt)


State 196

   79 assign_stmt: IDENTIFIER '=' expr .
  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 79 (assign_stmt)


State 197

   71 var_name: IDENTIFIER '(' . expr ')'

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 224
    basic_literal  go to state 70


State 198

   62 decl_stmt: CONST var_name AS . basic_literal '=' END_OF_LINE expr
   66 decl_stmt_single_line: CONST var_name AS . basic_literal '=' expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 225


State 199

   63 decl_stmt: DIM var_name AS . basic_literal '=' END_OF_LINE expr
   67 decl_stmt_single_line: DIM var_name AS . basic_literal '=' expr
   68                      | DIM var_name AS . basic_literal

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 226


State 200

   64 decl_stmt: DIM var_name '=' . END_OF_LINE expr
   69 decl_stmt_single_line: DIM var_name '=' . expr

    INT          shift, and go to state 61
    DOUBLE       shift, and go to state 62
    STRING       shift, and go to state 63
    BOOLEAN      shift, and go to state 64
    END_OF_LINE  shift, and go to state 227
    '+'          shift, and go to state 66
    '-'          shift, and go to state 67

    expr           go to state 228
    basic_literal  go to state 70


State 201

   61 stmt_ends: stmt_ends . END_OF_LINE
   82 while_stmt: WHILE expr stmt_ends . stmt_list END WHILE

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list              go to state 229
    stmt                   go to state 114
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 202

   90 if_stmt_multi_line: IF expr THEN . stmt_ends stmt_list END IF
   91                   | IF expr THEN . stmt_ends stmt_list ELSE stmt_list END IF
   92                   | IF expr THEN . stmt_ends stmt_list elseif_list END IF
   93                   | IF expr THEN . stmt_ends stmt_list elseif_list ELSE stmt_list END IF
   96 if_stmt_single_line: IF expr THEN . single_line_stmt
   97                    | IF expr THEN . single_line_stmt ELSE single_line_stmt

    CONST        shift, and go to state 230
    DIM          shift, and go to state 231
    IF           shift, and go to state 232
    END_OF_LINE  shift, and go to state 20
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    single_line_stmt       go to state 233
    stmt_ends              go to state 234
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    if_stmt_single_line    go to state 126


State 203

   98 select_stmt: SELECT CASE expr . stmt_ends case_list END SELECT
  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    END_OF_LINE    shift, and go to state 20
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    stmt_ends  go to state 235


State 204

   17 function: FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END . FUNCTION

    FUNCTION  shift, and go to state 236


State 205

   86 do_loop_condition: WHILE expr .
  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 86 (do_loop_condition)


State 206

   85 do_loop_condition: UNTIL expr .
  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 85 (do_loop_condition)


State 207

   47 stmt_list: stmt_list . stmt
   84 do_loop_stmt: DO stmt_ends stmt_list . LOOP do_loop_condition

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    LOOP        shift, and go to state 237
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                   go to state 174
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 208

   61 stmt_ends: stmt_ends . END_OF_LINE
   83 do_loop_stmt: DO do_loop_condition stmt_ends . stmt_list LOOP

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list              go to state 238
    stmt                   go to state 114
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 209

   87 for_loop_stmt: FOR IDENTIFIER AS . basic_literal '=' basic_literal TO basic_literal stmt_ends stmt_list NEXT
   88              | FOR IDENTIFIER AS . basic_literal '=' basic_literal TO basic_literal STEP basic_literal stmt_ends stmt_list NEXT

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 239


State 210

   89 for_each_loop_stmt: FOR EACH IDENTIFIER . AS basic_literal IN IDENTIFIER stmt_ends stmt_list NEXT

    AS  shift, and go to state 240


State 211

   18 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list END FUNCTION .

    $default  reduce using rule 18 (function)


State 212

   19 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr . END FUNCTION
  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    END            shift, and go to state 241
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99


State 213

   65 decl_stmt_single_line: access SUB var_name . stmt_list END SUB

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt_list              go to state 242
    stmt                   go to state 114
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 214

   26 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends . END SUB
   27         | access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends . stmt_list END SUB
   61 stmt_ends: stmt_ends . END_OF_LINE

    IDENTIFIER   shift, and go to state 103
    END          shift, and go to state 243
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list              go to state 244
    stmt                   go to state 114
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 215

   20 function: access FUNCTION IDENTIFIER arguments stmt_ends END FUNCTION .

    $default  reduce using rule 20 (function)


State 216

   21 function: access FUNCTION IDENTIFIER arguments stmt_ends RETURN expr . END FUNCTION
  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    END            shift, and go to state 245
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99


State 217

   22 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list END . FUNCTION

    FUNCTION  shift, and go to state 246


State 218

   23 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN . expr END FUNCTION

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 247
    basic_literal  go to state 70


State 219

   44 parameter_with_type: IDENTIFIER AS basic_literal '(' ')' .

    $default  reduce using rule 44 (parameter_with_type)


State 220

   24 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB .

    $default  reduce using rule 24 (sub_bloc)


State 221

   25 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END . SUB

    SUB  shift, and go to state 248


State 222

  105 function_call_multiline: IDENTIFIER arguments_multiline .

    $default  reduce using rule 105 (function_call_multiline)


State 223

  106 function_call_singleline: IDENTIFIER arguments_singleline .

    $default  reduce using rule 106 (function_call_singleline)


State 224

   71 var_name: IDENTIFIER '(' expr . ')'
  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99
    ')'            shift, and go to state 249


State 225

   62 decl_stmt: CONST var_name AS basic_literal . '=' END_OF_LINE expr
   66 decl_stmt_single_line: CONST var_name AS basic_literal . '=' expr

    '='  shift, and go to state 250


State 226

   63 decl_stmt: DIM var_name AS basic_literal . '=' END_OF_LINE expr
   67 decl_stmt_single_line: DIM var_name AS basic_literal . '=' expr
   68                      | DIM var_name AS basic_literal .

    '='  shift, and go to state 251

    $default  reduce using rule 68 (decl_stmt_single_line)


State 227

   64 decl_stmt: DIM var_name '=' END_OF_LINE . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 252
    basic_literal  go to state 70


State 228

   69 decl_stmt_single_line: DIM var_name '=' expr .
  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 69 (decl_stmt_single_line)


State 229

   47 stmt_list: stmt_list . stmt
   82 while_stmt: WHILE expr stmt_ends stmt_list . END WHILE

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 253
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                   go to state 174
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 230

   66 decl_stmt_single_line: CONST . var_name AS basic_literal '=' expr

    IDENTIFIER  shift, and go to state 159

    var_name  go to state 254


State 231

   67 decl_stmt_single_line: DIM . var_name AS basic_literal '=' expr
   68                      | DIM . var_name AS basic_literal
   69                      | DIM . var_name '=' expr
   70                      | DIM . var_name

    IDENTIFIER  shift, and go to state 159

    var_name  go to state 255


State 232

   96 if_stmt_single_line: IF . expr THEN single_line_stmt
   97                    | IF . expr THEN single_line_stmt ELSE single_line_stmt

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 256
    basic_literal  go to state 70


State 233

   96 if_stmt_single_line: IF expr THEN single_line_stmt .
   97                    | IF expr THEN single_line_stmt . ELSE single_line_stmt

    ELSE  shift, and go to state 257

    $default  reduce using rule 96 (if_stmt_single_line)


State 234

   61 stmt_ends: stmt_ends . END_OF_LINE
   90 if_stmt_multi_line: IF expr THEN stmt_ends . stmt_list END IF
   91                   | IF expr THEN stmt_ends . stmt_list ELSE stmt_list END IF
   92                   | IF expr THEN stmt_ends . stmt_list elseif_list END IF
   93                   | IF expr THEN stmt_ends . stmt_list elseif_list ELSE stmt_list END IF

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list              go to state 258
    stmt                   go to state 114
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 235

   61 stmt_ends: stmt_ends . END_OF_LINE
   98 select_stmt: SELECT CASE expr stmt_ends . case_list END SELECT

    CASE         shift, and go to state 259
    END_OF_LINE  shift, and go to state 24

    case_list  go to state 260
    case_stmt  go to state 261


State 236

   17 function: FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION .

    $default  reduce using rule 17 (function)


State 237

   84 do_loop_stmt: DO stmt_ends stmt_list LOOP . do_loop_condition

    WHILE  shift, and go to state 166
    UNTIL  shift, and go to state 167

    do_loop_condition  go to state 262


State 238

   47 stmt_list: stmt_list . stmt
   83 do_loop_stmt: DO do_loop_condition stmt_ends stmt_list . LOOP

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    LOOP        shift, and go to state 263
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                   go to state 174
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 239

   87 for_loop_stmt: FOR IDENTIFIER AS basic_literal . '=' basic_literal TO basic_literal stmt_ends stmt_list NEXT
   88              | FOR IDENTIFIER AS basic_literal . '=' basic_literal TO basic_literal STEP basic_literal stmt_ends stmt_list NEXT

    '='  shift, and go to state 264


State 240

   89 for_each_loop_stmt: FOR EACH IDENTIFIER AS . basic_literal IN IDENTIFIER stmt_ends stmt_list NEXT

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 265


State 241

   19 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END . FUNCTION

    FUNCTION  shift, and go to state 266


State 242

   47 stmt_list: stmt_list . stmt
   65 decl_stmt_single_line: access SUB var_name stmt_list . END SUB

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 267
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                   go to state 174
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 243

   26 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END . SUB

    SUB  shift, and go to state 268


State 244

   27 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list . END SUB
   47 stmt_list: stmt_list . stmt

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 269
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                   go to state 174
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 245

   21 function: access FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END . FUNCTION

    FUNCTION  shift, and go to state 270


State 246

   22 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list END FUNCTION .

    $default  reduce using rule 22 (function)


State 247

   23 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr . END FUNCTION
  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    END            shift, and go to state 271
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99


State 248

   25 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB .

    $default  reduce using rule 25 (sub_bloc)


State 249

   71 var_name: IDENTIFIER '(' expr ')' .

    $default  reduce using rule 71 (var_name)


State 250

   62 decl_stmt: CONST var_name AS basic_literal '=' . END_OF_LINE expr
   66 decl_stmt_single_line: CONST var_name AS basic_literal '=' . expr

    INT          shift, and go to state 61
    DOUBLE       shift, and go to state 62
    STRING       shift, and go to state 63
    BOOLEAN      shift, and go to state 64
    END_OF_LINE  shift, and go to state 272
    '+'          shift, and go to state 66
    '-'          shift, and go to state 67

    expr           go to state 273
    basic_literal  go to state 70


State 251

   63 decl_stmt: DIM var_name AS basic_literal '=' . END_OF_LINE expr
   67 decl_stmt_single_line: DIM var_name AS basic_literal '=' . expr

    INT          shift, and go to state 61
    DOUBLE       shift, and go to state 62
    STRING       shift, and go to state 63
    BOOLEAN      shift, and go to state 64
    END_OF_LINE  shift, and go to state 274
    '+'          shift, and go to state 66
    '-'          shift, and go to state 67

    expr           go to state 275
    basic_literal  go to state 70


State 252

   64 decl_stmt: DIM var_name '=' END_OF_LINE expr .
  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 64 (decl_stmt)


State 253

   82 while_stmt: WHILE expr stmt_ends stmt_list END . WHILE

    WHILE  shift, and go to state 276


State 254

   66 decl_stmt_single_line: CONST var_name . AS basic_literal '=' expr

    AS  shift, and go to state 277


State 255

   67 decl_stmt_single_line: DIM var_name . AS basic_literal '=' expr
   68                      | DIM var_name . AS basic_literal
   69                      | DIM var_name . '=' expr
   70                      | DIM var_name .

    AS   shift, and go to state 278
    '='  shift, and go to state 279

    $default  reduce using rule 70 (decl_stmt_single_line)


State 256

   96 if_stmt_single_line: IF expr . THEN single_line_stmt
   97                    | IF expr . THEN single_line_stmt ELSE single_line_stmt
  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99
    THEN           shift, and go to state 280


State 257

   97 if_stmt_single_line: IF expr THEN single_line_stmt ELSE . single_line_stmt

    CONST      shift, and go to state 230
    DIM        shift, and go to state 231
    IF         shift, and go to state 232
    PRIVATE    shift, and go to state 3
    PROTECTED  shift, and go to state 4
    PUBLIC     shift, and go to state 5
    FRIEND     shift, and go to state 6

    single_line_stmt       go to state 281
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    if_stmt_single_line    go to state 126


State 258

   47 stmt_list: stmt_list . stmt
   90 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list . END IF
   91                   | IF expr THEN stmt_ends stmt_list . ELSE stmt_list END IF
   92                   | IF expr THEN stmt_ends stmt_list . elseif_list END IF
   93                   | IF expr THEN stmt_ends stmt_list . elseif_list ELSE stmt_list END IF

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 282
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    ELSEIF      shift, and go to state 283
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6
    ELSE        shift, and go to state 284

    stmt                   go to state 174
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    elseif_list            go to state 285
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 259

  101 case_stmt: CASE . expr stmt_ends stmt_list
  102          | CASE . IS expr stmt_ends stmt_list
  103          | CASE . expr TO expr stmt_ends stmt_list
  104          | CASE . ELSE stmt_ends stmt_list

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    IS       shift, and go to state 286
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67
    ELSE     shift, and go to state 287

    expr           go to state 288
    basic_literal  go to state 70


State 260

   98 select_stmt: SELECT CASE expr stmt_ends case_list . END SELECT
  100 case_list: case_list . case_stmt

    END   shift, and go to state 289
    CASE  shift, and go to state 259

    case_stmt  go to state 290


State 261

   99 case_list: case_stmt .

    $default  reduce using rule 99 (case_list)


State 262

   84 do_loop_stmt: DO stmt_ends stmt_list LOOP do_loop_condition .

    $default  reduce using rule 84 (do_loop_stmt)


State 263

   83 do_loop_stmt: DO do_loop_condition stmt_ends stmt_list LOOP .

    $default  reduce using rule 83 (do_loop_stmt)


State 264

   87 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' . basic_literal TO basic_literal stmt_ends stmt_list NEXT
   88              | FOR IDENTIFIER AS basic_literal '=' . basic_literal TO basic_literal STEP basic_literal stmt_ends stmt_list NEXT

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 291


State 265

   89 for_each_loop_stmt: FOR EACH IDENTIFIER AS basic_literal . IN IDENTIFIER stmt_ends stmt_list NEXT

    IN  shift, and go to state 292


State 266

   19 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION .

    $default  reduce using rule 19 (function)


State 267

   65 decl_stmt_single_line: access SUB var_name stmt_list END . SUB

    SUB  shift, and go to state 293


State 268

   26 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB .

    $default  reduce using rule 26 (sub_bloc)


State 269

   27 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END . SUB

    SUB  shift, and go to state 294


State 270

   21 function: access FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION .

    $default  reduce using rule 21 (function)


State 271

   23 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END . FUNCTION

    FUNCTION  shift, and go to state 295


State 272

   62 decl_stmt: CONST var_name AS basic_literal '=' END_OF_LINE . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 296
    basic_literal  go to state 70


State 273

   66 decl_stmt_single_line: CONST var_name AS basic_literal '=' expr .
  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 66 (decl_stmt_single_line)


State 274

   63 decl_stmt: DIM var_name AS basic_literal '=' END_OF_LINE . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 297
    basic_literal  go to state 70


State 275

   67 decl_stmt_single_line: DIM var_name AS basic_literal '=' expr .
  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 67 (decl_stmt_single_line)


State 276

   82 while_stmt: WHILE expr stmt_ends stmt_list END WHILE .

    $default  reduce using rule 82 (while_stmt)


State 277

   66 decl_stmt_single_line: CONST var_name AS . basic_literal '=' expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 298


State 278

   67 decl_stmt_single_line: DIM var_name AS . basic_literal '=' expr
   68                      | DIM var_name AS . basic_literal

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 299


State 279

   69 decl_stmt_single_line: DIM var_name '=' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 228
    basic_literal  go to state 70


State 280

   96 if_stmt_single_line: IF expr THEN . single_line_stmt
   97                    | IF expr THEN . single_line_stmt ELSE single_line_stmt

    CONST      shift, and go to state 230
    DIM        shift, and go to state 231
    IF         shift, and go to state 232
    PRIVATE    shift, and go to state 3
    PROTECTED  shift, and go to state 4
    PUBLIC     shift, and go to state 5
    FRIEND     shift, and go to state 6

    single_line_stmt       go to state 233
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    if_stmt_single_line    go to state 126


State 281

   97 if_stmt_single_line: IF expr THEN single_line_stmt ELSE single_line_stmt .

    $default  reduce using rule 97 (if_stmt_single_line)


State 282

   90 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list END . IF

    IF  shift, and go to state 300


State 283

   94 elseif_list: ELSEIF . expr THEN stmt_list

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 301
    basic_literal  go to state 70


State 284

   91 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list ELSE . stmt_list END IF

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt_list              go to state 302
    stmt                   go to state 114
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 285

   92 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list . END IF
   93                   | IF expr THEN stmt_ends stmt_list elseif_list . ELSE stmt_list END IF
   95 elseif_list: elseif_list . ELSEIF expr THEN stmt_list

    END     shift, and go to state 303
    ELSEIF  shift, and go to state 304
    ELSE    shift, and go to state 305


State 286

  102 case_stmt: CASE IS . expr stmt_ends stmt_list

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 306
    basic_literal  go to state 70


State 287

  104 case_stmt: CASE ELSE . stmt_ends stmt_list

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 307


State 288

  101 case_stmt: CASE expr . stmt_ends stmt_list
  103          | CASE expr . TO expr stmt_ends stmt_list
  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    TO             shift, and go to state 308
    END_OF_LINE    shift, and go to state 20
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    stmt_ends  go to state 309


State 289

   98 select_stmt: SELECT CASE expr stmt_ends case_list END . SELECT

    SELECT  shift, and go to state 310


State 290

  100 case_list: case_list case_stmt .

    $default  reduce using rule 100 (case_list)


State 291

   87 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal . TO basic_literal stmt_ends stmt_list NEXT
   88              | FOR IDENTIFIER AS basic_literal '=' basic_literal . TO basic_literal STEP basic_literal stmt_ends stmt_list NEXT

    TO  shift, and go to state 311


State 292

   89 for_each_loop_stmt: FOR EACH IDENTIFIER AS basic_literal IN . IDENTIFIER stmt_ends stmt_list NEXT

    IDENTIFIER  shift, and go to state 312


State 293

   65 decl_stmt_single_line: access SUB var_name stmt_list END SUB .

    $default  reduce using rule 65 (decl_stmt_single_line)


State 294

   27 sub_bloc: access SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB .

    $default  reduce using rule 27 (sub_bloc)


State 295

   23 function: access FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION .

    $default  reduce using rule 23 (function)


State 296

   62 decl_stmt: CONST var_name AS basic_literal '=' END_OF_LINE expr .
  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 62 (decl_stmt)


State 297

   63 decl_stmt: DIM var_name AS basic_literal '=' END_OF_LINE expr .
  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    $default  reduce using rule 63 (decl_stmt)


State 298

   66 decl_stmt_single_line: CONST var_name AS basic_literal . '=' expr

    '='  shift, and go to state 313


State 299

   67 decl_stmt_single_line: DIM var_name AS basic_literal . '=' expr
   68                      | DIM var_name AS basic_literal .

    '='  shift, and go to state 314

    $default  reduce using rule 68 (decl_stmt_single_line)


State 300

   90 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list END IF .

    $default  reduce using rule 90 (if_stmt_multi_line)


State 301

   94 elseif_list: ELSEIF expr . THEN stmt_list
  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99
    THEN           shift, and go to state 315


State 302

   47 stmt_list: stmt_list . stmt
   91 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list ELSE stmt_list . END IF

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 316
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                   go to state 174
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 303

   92 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list END . IF

    IF  shift, and go to state 317


State 304

   95 elseif_list: elseif_list ELSEIF . expr THEN stmt_list

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 318
    basic_literal  go to state 70


State 305

   93 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list ELSE . stmt_list END IF

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt_list              go to state 319
    stmt                   go to state 114
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 306

  102 case_stmt: CASE IS expr . stmt_ends stmt_list
  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    END_OF_LINE    shift, and go to state 20
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    stmt_ends  go to state 320


State 307

   61 stmt_ends: stmt_ends . END_OF_LINE
  104 case_stmt: CASE ELSE stmt_ends . stmt_list

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list              go to state 321
    stmt                   go to state 114
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 308

  103 case_stmt: CASE expr TO . expr stmt_ends stmt_list

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 322
    basic_literal  go to state 70


State 309

   61 stmt_ends: stmt_ends . END_OF_LINE
  101 case_stmt: CASE expr stmt_ends . stmt_list

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list              go to state 323
    stmt                   go to state 114
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 310

   98 select_stmt: SELECT CASE expr stmt_ends case_list END SELECT .

    $default  reduce using rule 98 (select_stmt)


State 311

   87 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO . basic_literal stmt_ends stmt_list NEXT
   88              | FOR IDENTIFIER AS basic_literal '=' basic_literal TO . basic_literal STEP basic_literal stmt_ends stmt_list NEXT

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 324


State 312

   89 for_each_loop_stmt: FOR EACH IDENTIFIER AS basic_literal IN IDENTIFIER . stmt_ends stmt_list NEXT

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 325


State 313

   66 decl_stmt_single_line: CONST var_name AS basic_literal '=' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 273
    basic_literal  go to state 70


State 314

   67 decl_stmt_single_line: DIM var_name AS basic_literal '=' . expr

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64
    '+'      shift, and go to state 66
    '-'      shift, and go to state 67

    expr           go to state 275
    basic_literal  go to state 70


State 315

   94 elseif_list: ELSEIF expr THEN . stmt_list

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt_list              go to state 326
    stmt                   go to state 114
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 316

   91 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list ELSE stmt_list END . IF

    IF  shift, and go to state 327


State 317

   92 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list END IF .

    $default  reduce using rule 92 (if_stmt_multi_line)


State 318

   95 elseif_list: elseif_list ELSEIF expr . THEN stmt_list
  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99
    THEN           shift, and go to state 328


State 319

   47 stmt_list: stmt_list . stmt
   93 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list ELSE stmt_list . END IF

    IDENTIFIER  shift, and go to state 103
    END         shift, and go to state 329
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                   go to state 174
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 320

   61 stmt_ends: stmt_ends . END_OF_LINE
  102 case_stmt: CASE IS expr stmt_ends . stmt_list

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list              go to state 330
    stmt                   go to state 114
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 321

   47 stmt_list: stmt_list . stmt
  104 case_stmt: CASE ELSE stmt_ends stmt_list .

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    $default  reduce using rule 104 (case_stmt)

    stmt                   go to state 174
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 322

  103 case_stmt: CASE expr TO expr . stmt_ends stmt_list
  112 expr: expr . '+' expr
  113     | expr . '-' expr
  114     | expr . '*' expr
  115     | expr . '/' expr
  116     | expr . INT_DIV expr
  117     | expr . '=' expr
  118     | expr . '<' expr
  119     | expr . '>' expr
  120     | expr . '^' expr
  121     | expr . NOT_EQUAL expr
  122     | expr . LESS_OR_EQUAL expr
  123     | expr . MORE_OR_EQUAL expr
  124     | expr . '&' expr

    END_OF_LINE    shift, and go to state 20
    '^'            shift, and go to state 87
    '*'            shift, and go to state 88
    '/'            shift, and go to state 89
    INT_DIV        shift, and go to state 90
    '+'            shift, and go to state 91
    '-'            shift, and go to state 92
    '='            shift, and go to state 93
    NOT_EQUAL      shift, and go to state 94
    LESS_OR_EQUAL  shift, and go to state 95
    MORE_OR_EQUAL  shift, and go to state 96
    '>'            shift, and go to state 97
    '<'            shift, and go to state 98
    '&'            shift, and go to state 99

    stmt_ends  go to state 331


State 323

   47 stmt_list: stmt_list . stmt
  101 case_stmt: CASE expr stmt_ends stmt_list .

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    $default  reduce using rule 101 (case_stmt)

    stmt                   go to state 174
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 324

   87 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal . stmt_ends stmt_list NEXT
   88              | FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal . STEP basic_literal stmt_ends stmt_list NEXT

    STEP         shift, and go to state 332
    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 333


State 325

   61 stmt_ends: stmt_ends . END_OF_LINE
   89 for_each_loop_stmt: FOR EACH IDENTIFIER AS basic_literal IN IDENTIFIER stmt_ends . stmt_list NEXT

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list              go to state 334
    stmt                   go to state 114
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 326

   47 stmt_list: stmt_list . stmt
   94 elseif_list: ELSEIF expr THEN stmt_list .

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    $default  reduce using rule 94 (elseif_list)

    stmt                   go to state 174
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 327

   91 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list ELSE stmt_list END IF .

    $default  reduce using rule 91 (if_stmt_multi_line)


State 328

   95 elseif_list: elseif_list ELSEIF expr THEN . stmt_list

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt_list              go to state 335
    stmt                   go to state 114
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 329

   93 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list ELSE stmt_list END . IF

    IF  shift, and go to state 336


State 330

   47 stmt_list: stmt_list . stmt
  102 case_stmt: CASE IS expr stmt_ends stmt_list .

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    $default  reduce using rule 102 (case_stmt)

    stmt                   go to state 174
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 331

   61 stmt_ends: stmt_ends . END_OF_LINE
  103 case_stmt: CASE expr TO expr stmt_ends . stmt_list

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list              go to state 337
    stmt                   go to state 114
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 332

   88 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal STEP . basic_literal stmt_ends stmt_list NEXT

    INT      shift, and go to state 61
    DOUBLE   shift, and go to state 62
    STRING   shift, and go to state 63
    BOOLEAN  shift, and go to state 64

    basic_literal  go to state 338


State 333

   61 stmt_ends: stmt_ends . END_OF_LINE
   87 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal stmt_ends . stmt_list NEXT

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list              go to state 339
    stmt                   go to state 114
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 334

   47 stmt_list: stmt_list . stmt
   89 for_each_loop_stmt: FOR EACH IDENTIFIER AS basic_literal IN IDENTIFIER stmt_ends stmt_list . NEXT

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    NEXT        shift, and go to state 340
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                   go to state 174
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 335

   47 stmt_list: stmt_list . stmt
   95 elseif_list: elseif_list ELSEIF expr THEN stmt_list .

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    $default  reduce using rule 95 (elseif_list)

    stmt                   go to state 174
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 336

   93 if_stmt_multi_line: IF expr THEN stmt_ends stmt_list elseif_list ELSE stmt_list END IF .

    $default  reduce using rule 93 (if_stmt_multi_line)


State 337

   47 stmt_list: stmt_list . stmt
  103 case_stmt: CASE expr TO expr stmt_ends stmt_list .

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    $default  reduce using rule 103 (case_stmt)

    stmt                   go to state 174
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 338

   88 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal STEP basic_literal . stmt_ends stmt_list NEXT

    END_OF_LINE  shift, and go to state 20

    stmt_ends  go to state 341


State 339

   47 stmt_list: stmt_list . stmt
   87 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal stmt_ends stmt_list . NEXT

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    NEXT        shift, and go to state 342
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                   go to state 174
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 340

   89 for_each_loop_stmt: FOR EACH IDENTIFIER AS basic_literal IN IDENTIFIER stmt_ends stmt_list NEXT .

    $default  reduce using rule 89 (for_each_loop_stmt)


State 341

   61 stmt_ends: stmt_ends . END_OF_LINE
   88 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal STEP basic_literal stmt_ends . stmt_list NEXT

    IDENTIFIER   shift, and go to state 103
    CONST        shift, and go to state 105
    DIM          shift, and go to state 106
    WHILE        shift, and go to state 107
    IF           shift, and go to state 108
    SELECT       shift, and go to state 109
    DO           shift, and go to state 111
    FOR          shift, and go to state 112
    END_OF_LINE  shift, and go to state 24
    PRIVATE      shift, and go to state 3
    PROTECTED    shift, and go to state 4
    PUBLIC       shift, and go to state 5
    FRIEND       shift, and go to state 6

    stmt_list              go to state 343
    stmt                   go to state 114
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 342

   87 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal stmt_ends stmt_list NEXT .

    $default  reduce using rule 87 (for_loop_stmt)


State 343

   47 stmt_list: stmt_list . stmt
   88 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal STEP basic_literal stmt_ends stmt_list . NEXT

    IDENTIFIER  shift, and go to state 103
    CONST       shift, and go to state 105
    DIM         shift, and go to state 106
    WHILE       shift, and go to state 107
    IF          shift, and go to state 108
    SELECT      shift, and go to state 109
    DO          shift, and go to state 111
    FOR         shift, and go to state 112
    NEXT        shift, and go to state 344
    PRIVATE     shift, and go to state 3
    PROTECTED   shift, and go to state 4
    PUBLIC      shift, and go to state 5
    FRIEND      shift, and go to state 6

    stmt                   go to state 174
    single_line_stmt       go to state 115
    multi_line_stmt        go to state 116
    decl_stmt              go to state 117
    decl_stmt_single_line  go to state 118
    access                 go to state 119
    assign_stmt            go to state 120
    while_stmt             go to state 121
    do_loop_stmt           go to state 122
    for_loop_stmt          go to state 123
    for_each_loop_stmt     go to state 124
    if_stmt_multi_line     go to state 125
    if_stmt_single_line    go to state 126
    select_stmt            go to state 127


State 344

   88 for_loop_stmt: FOR IDENTIFIER AS basic_literal '=' basic_literal TO basic_literal STEP basic_literal stmt_ends stmt_list NEXT .

    $default  reduce using rule 88 (for_loop_stmt)
