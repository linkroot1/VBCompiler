Nonterminals useless in grammar

    single_line_stmt
    if_stmt_single_line


Terminals unused in grammar

    ENDL
    ASSIGN_CONSTRUCT
    ASSIGN_MULT
    ASSIGN_ORD_DIV
    ASSIGN_INT_DIV
    ASSIGN_ADD
    ASSIGN_SUB
    ASSIGN_LSHIFT
    ASSIGN_RSHIFT
    ASSIGN_CONCAT


Rules useless in grammar

   91 stmt: single_line_stmt

   92 single_line_stmt: if_stmt_single_line

   93 if_stmt_single_line: IF expr THEN single_line_stmt
   94                    | IF expr THEN single_line_stmt ELSE single_line_stmt


Grammar

    0 $accept: root $end

    1 root: program_items_list

    2 program_items_list: %empty
    3                   | program_items_list_not_empty

    4 program_items_list_not_empty: program_item
    5                             | program_items_list_not_empty program_item

    6 program_item: module
    7             | IMPORTS IDENTIFIER stmt_ends

    8 module: MODULE IDENTIFIER stmt_ends END MODULE
    9       | MODULE IDENTIFIER stmt_ends functions_and_sub_list END MODULE

   10 functions_and_sub_list: function_or_sub
   11                       | functions_and_sub_list stmt_ends function_or_sub

   12 function_or_sub: function
   13                | sub_bloc

   14 function: FUNCTION IDENTIFIER arguments stmt_ends END FUNCTION
   15         | FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION
   16         | FUNCTION IDENTIFIER arguments stmt_ends stmt_list END FUNCTION
   17         | FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION

   18 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB
   19         | SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

   20 parameterlist_or_empty: %empty
   21                       | parameterlist_with_type
   22                       | parameterlist_without_type

   23 parameterlist_with_type: parameter_with_type
   24                        | parameterlist_with_type ',' parameter_with_type

   25 parameterlist_without_type: parameter_without_type
   26                           | parameterlist_without_type ',' parameter_without_type

   27 parameter_with_type: IDENTIFIER AS basic_literal
   28                    | IDENTIFIER AS basic_literal '(' ')'

   29 parameter_without_type: IDENTIFIER

   30 stmt_list: stmt
   31          | stmt_list stmt

   32 stmt: multi_line_stmt

   33 multi_line_stmt: decl_stmt stmt_ends
   34                | assign_stmt stmt_ends
   35                | while_stmt stmt_ends
   36                | select_stmt stmt_ends
   37                | if_stmt_multi_line stmt_ends

   38 stmt_ends: END_OF_LINE
   39          | stmt_ends END_OF_LINE

   40 decl_stmt: ACCESS SUB var_name stmt END SUB
   41          | CONST var_name AS basic_literal '=' END_OF_LINE expr
   42          | CONST var_name AS basic_literal '=' expr
   43          | DIM var_name AS basic_literal '=' END_OF_LINE expr
   44          | DIM var_name AS basic_literal '=' expr
   45          | DIM var_name AS basic_literal
   46          | DIM var_name '=' END_OF_LINE expr
   47          | DIM var_name '=' expr
   48          | DIM var_name

   49 var_name: IDENTIFIER '(' expr ')'
   50         | IDENTIFIER

   51 assign_stmt: IDENTIFIER '=' expr
   52            | IDENTIFIER '=' IDENTIFIER

   53 while_stmt: WHILE expr stmt_ends stmt END WHILE

   54 if_stmt_multi_line: IF expr THEN stmt_ends stmt ELSE stmt END IF
   55                   | IF expr THEN stmt_ends stmt elseif_list ELSE stmt END IF

   56 elseif_list: ELSEIF expr THEN stmt
   57            | elseif_list ELSEIF expr THEN stmt

   58 select_stmt: SELECT CASE expr stmt_ends case_list END SELECT

   59 case_list: case_stmt
   60          | case_list case_stmt

   61 case_stmt: CASE expr stmt
   62          | CASE IS expr stmt
   63          | CASE expr TO expr stmt
   64          | CASE ELSE stmt

   65 expr: basic_literal
   66     | function_literal
   67     | '-' expr
   68     | '+' expr
   69     | expr '+' expr
   70     | expr '-' expr
   71     | expr '*' expr
   72     | expr '/' expr
   73     | expr INT_DIV expr
   74     | expr '=' expr
   75     | expr '<' expr
   76     | expr '>' expr
   77     | expr '^' expr
   78     | expr NOT_EQUAL expr
   79     | expr LESS_OR_EQUAL expr
   80     | expr MORE_OR_EQUAL expr
   81     | expr '&' expr

   82 basic_literal: INT
   83              | STRING
   84              | BOOLEAN
   85              | DOUBLE

   86 function_literal: IDENTIFIER arguments

   87 arguments: '(' expr_list ')'
   88          | '(' ')'

   89 expr_list: expr
   90          | expr_list ',' expr


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 81
    '(' (40) 18 19 28 49 87 88
    ')' (41) 18 19 28 49 87 88
    '*' (42) 71
    '+' (43) 68 69
    ',' (44) 24 26 90
    '-' (45) 67 70
    '/' (47) 72
    '<' (60) 75
    '=' (61) 41 42 43 44 46 47 51 52 74
    '>' (62) 76
    '^' (94) 77
    error (256)
    INT <int_val> (258) 82
    DOUBLE <double_val> (259) 85
    STRING <str_val> (260) 83
    BOOLEAN <bool_val> (261) 84
    IDENTIFIER <id_name> (262) 7 8 9 14 15 16 17 18 19 27 28 29 49 50 51 52 86
    ENDL (263)
    ACCESS (264) 40
    SUB (265) 18 19 40
    END (266) 8 9 14 15 16 17 18 19 40 53 54 55 58
    CONST (267) 41 42
    DIM (268) 43 44 45 46 47 48
    AS (269) 27 28 41 42 43 44 45
    WHILE (270) 53
    IF (271) 54 55
    THEN (272) 54 55 56 57
    ELSE (273) 54 55 64
    ELSEIF (274) 56 57
    SELECT (275) 58
    CASE (276) 58 61 62 63 64
    IS (277) 62
    TO (278) 63
    IMPORTS (279) 7
    MODULE (280) 8 9
    FUNCTION (281) 14 15 16 17
    RETURN (282) 15 17
    END_OF_LINE (283) 38 39 41 43 46
    UNARY_MINUS (284)
    UNARY_PLUS (285)
    ASSIGN_CONSTRUCT (286)
    ASSIGN_MULT (287)
    ASSIGN_ORD_DIV (288)
    ASSIGN_INT_DIV (289)
    ASSIGN_ADD (290)
    ASSIGN_SUB (291)
    ASSIGN_LSHIFT (292)
    ASSIGN_RSHIFT (293)
    ASSIGN_CONCAT (294)
    INT_DIV (295) 73
    NOT_EQUAL (296) 78
    LESS_OR_EQUAL (297) 79
    MORE_OR_EQUAL (298) 80


Nonterminals, with rules where they appear

    $accept (56)
        on left: 0
    root (57)
        on left: 1
        on right: 0
    program_items_list (58)
        on left: 2 3
        on right: 1
    program_items_list_not_empty (59)
        on left: 4 5
        on right: 3 5
    program_item (60)
        on left: 6 7
        on right: 4 5
    module (61)
        on left: 8 9
        on right: 6
    functions_and_sub_list (62)
        on left: 10 11
        on right: 9 11
    function_or_sub (63)
        on left: 12 13
        on right: 10 11
    function (64)
        on left: 14 15 16 17
        on right: 12
    sub_bloc (65)
        on left: 18 19
        on right: 13
    parameterlist_or_empty (66)
        on left: 20 21 22
        on right: 18 19
    parameterlist_with_type (67)
        on left: 23 24
        on right: 21 24
    parameterlist_without_type (68)
        on left: 25 26
        on right: 22 26
    parameter_with_type (69)
        on left: 27 28
        on right: 23 24
    parameter_without_type (70)
        on left: 29
        on right: 25 26
    stmt_list (71)
        on left: 30 31
        on right: 16 17 19 31
    stmt (72)
        on left: 32
        on right: 30 31 40 53 54 55 56 57 61 62 63 64
    multi_line_stmt (73)
        on left: 33 34 35 36 37
        on right: 32
    stmt_ends (74)
        on left: 38 39
        on right: 7 8 9 11 14 15 16 17 18 19 33 34 35 36 37 39 53 54 55 58
    decl_stmt (75)
        on left: 40 41 42 43 44 45 46 47 48
        on right: 33
    var_name (76)
        on left: 49 50
        on right: 40 41 42 43 44 45 46 47 48
    assign_stmt (77)
        on left: 51 52
        on right: 34
    while_stmt (78)
        on left: 53
        on right: 35
    if_stmt_multi_line (79)
        on left: 54 55
        on right: 37
    elseif_list (80)
        on left: 56 57
        on right: 55 57
    select_stmt (81)
        on left: 58
        on right: 36
    case_list (82)
        on left: 59 60
        on right: 58 60
    case_stmt (83)
        on left: 61 62 63 64
        on right: 59 60
    expr (84)
        on left: 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
        on right: 15 17 41 42 43 44 46 47 49 51 53 54 55 56 57 58 61 62 63 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 89 90
    basic_literal (85)
        on left: 82 83 84 85
        on right: 27 28 41 42 43 44 45 65
    function_literal (86)
        on left: 86
        on right: 66
    arguments (87)
        on left: 87 88
        on right: 14 15 16 17 86
    expr_list (88)
        on left: 89 90
        on right: 87 90


State 0

    0 $accept: . root $end

    IMPORTS  shift, and go to state 1
    MODULE   shift, and go to state 2

    $default  reduce using rule 2 (program_items_list)

    root                          go to state 3
    program_items_list            go to state 4
    program_items_list_not_empty  go to state 5
    program_item                  go to state 6
    module                        go to state 7


State 1

    7 program_item: IMPORTS . IDENTIFIER stmt_ends

    IDENTIFIER  shift, and go to state 8


State 2

    8 module: MODULE . IDENTIFIER stmt_ends END MODULE
    9       | MODULE . IDENTIFIER stmt_ends functions_and_sub_list END MODULE

    IDENTIFIER  shift, and go to state 9


State 3

    0 $accept: root . $end

    $end  shift, and go to state 10


State 4

    1 root: program_items_list .

    $default  reduce using rule 1 (root)


State 5

    3 program_items_list: program_items_list_not_empty .
    5 program_items_list_not_empty: program_items_list_not_empty . program_item

    IMPORTS  shift, and go to state 1
    MODULE   shift, and go to state 2

    $default  reduce using rule 3 (program_items_list)

    program_item  go to state 11
    module        go to state 7


State 6

    4 program_items_list_not_empty: program_item .

    $default  reduce using rule 4 (program_items_list_not_empty)


State 7

    6 program_item: module .

    $default  reduce using rule 6 (program_item)


State 8

    7 program_item: IMPORTS IDENTIFIER . stmt_ends

    END_OF_LINE  shift, and go to state 12

    stmt_ends  go to state 13


State 9

    8 module: MODULE IDENTIFIER . stmt_ends END MODULE
    9       | MODULE IDENTIFIER . stmt_ends functions_and_sub_list END MODULE

    END_OF_LINE  shift, and go to state 12

    stmt_ends  go to state 14


State 10

    0 $accept: root $end .

    $default  accept


State 11

    5 program_items_list_not_empty: program_items_list_not_empty program_item .

    $default  reduce using rule 5 (program_items_list_not_empty)


State 12

   38 stmt_ends: END_OF_LINE .

    $default  reduce using rule 38 (stmt_ends)


State 13

    7 program_item: IMPORTS IDENTIFIER stmt_ends .
   39 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 15

    $default  reduce using rule 7 (program_item)


State 14

    8 module: MODULE IDENTIFIER stmt_ends . END MODULE
    9       | MODULE IDENTIFIER stmt_ends . functions_and_sub_list END MODULE
   39 stmt_ends: stmt_ends . END_OF_LINE

    SUB          shift, and go to state 16
    END          shift, and go to state 17
    FUNCTION     shift, and go to state 18
    END_OF_LINE  shift, and go to state 15

    functions_and_sub_list  go to state 19
    function_or_sub         go to state 20
    function                go to state 21
    sub_bloc                go to state 22


State 15

   39 stmt_ends: stmt_ends END_OF_LINE .

    $default  reduce using rule 39 (stmt_ends)


State 16

   18 sub_bloc: SUB . IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB
   19         | SUB . IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    IDENTIFIER  shift, and go to state 23


State 17

    8 module: MODULE IDENTIFIER stmt_ends END . MODULE

    MODULE  shift, and go to state 24


State 18

   14 function: FUNCTION . IDENTIFIER arguments stmt_ends END FUNCTION
   15         | FUNCTION . IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION
   16         | FUNCTION . IDENTIFIER arguments stmt_ends stmt_list END FUNCTION
   17         | FUNCTION . IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION

    IDENTIFIER  shift, and go to state 25


State 19

    9 module: MODULE IDENTIFIER stmt_ends functions_and_sub_list . END MODULE
   11 functions_and_sub_list: functions_and_sub_list . stmt_ends function_or_sub

    END          shift, and go to state 26
    END_OF_LINE  shift, and go to state 12

    stmt_ends  go to state 27


State 20

   10 functions_and_sub_list: function_or_sub .

    $default  reduce using rule 10 (functions_and_sub_list)


State 21

   12 function_or_sub: function .

    $default  reduce using rule 12 (function_or_sub)


State 22

   13 function_or_sub: sub_bloc .

    $default  reduce using rule 13 (function_or_sub)


State 23

   18 sub_bloc: SUB IDENTIFIER . '(' parameterlist_or_empty ')' stmt_ends END SUB
   19         | SUB IDENTIFIER . '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    '('  shift, and go to state 28


State 24

    8 module: MODULE IDENTIFIER stmt_ends END MODULE .

    $default  reduce using rule 8 (module)


State 25

   14 function: FUNCTION IDENTIFIER . arguments stmt_ends END FUNCTION
   15         | FUNCTION IDENTIFIER . arguments stmt_ends RETURN expr END FUNCTION
   16         | FUNCTION IDENTIFIER . arguments stmt_ends stmt_list END FUNCTION
   17         | FUNCTION IDENTIFIER . arguments stmt_ends stmt_list RETURN expr END FUNCTION

    '('  shift, and go to state 29

    arguments  go to state 30


State 26

    9 module: MODULE IDENTIFIER stmt_ends functions_and_sub_list END . MODULE

    MODULE  shift, and go to state 31


State 27

   11 functions_and_sub_list: functions_and_sub_list stmt_ends . function_or_sub
   39 stmt_ends: stmt_ends . END_OF_LINE

    SUB          shift, and go to state 16
    FUNCTION     shift, and go to state 18
    END_OF_LINE  shift, and go to state 15

    function_or_sub  go to state 32
    function         go to state 21
    sub_bloc         go to state 22


State 28

   18 sub_bloc: SUB IDENTIFIER '(' . parameterlist_or_empty ')' stmt_ends END SUB
   19         | SUB IDENTIFIER '(' . parameterlist_or_empty ')' stmt_ends stmt_list END SUB

    IDENTIFIER  shift, and go to state 33

    $default  reduce using rule 20 (parameterlist_or_empty)

    parameterlist_or_empty      go to state 34
    parameterlist_with_type     go to state 35
    parameterlist_without_type  go to state 36
    parameter_with_type         go to state 37
    parameter_without_type      go to state 38


State 29

   87 arguments: '(' . expr_list ')'
   88          | '(' . ')'

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45
    ')'         shift, and go to state 46

    expr              go to state 47
    basic_literal     go to state 48
    function_literal  go to state 49
    expr_list         go to state 50


State 30

   14 function: FUNCTION IDENTIFIER arguments . stmt_ends END FUNCTION
   15         | FUNCTION IDENTIFIER arguments . stmt_ends RETURN expr END FUNCTION
   16         | FUNCTION IDENTIFIER arguments . stmt_ends stmt_list END FUNCTION
   17         | FUNCTION IDENTIFIER arguments . stmt_ends stmt_list RETURN expr END FUNCTION

    END_OF_LINE  shift, and go to state 12

    stmt_ends  go to state 51


State 31

    9 module: MODULE IDENTIFIER stmt_ends functions_and_sub_list END MODULE .

    $default  reduce using rule 9 (module)


State 32

   11 functions_and_sub_list: functions_and_sub_list stmt_ends function_or_sub .

    $default  reduce using rule 11 (functions_and_sub_list)


State 33

   27 parameter_with_type: IDENTIFIER . AS basic_literal
   28                    | IDENTIFIER . AS basic_literal '(' ')'
   29 parameter_without_type: IDENTIFIER .

    AS  shift, and go to state 52

    $default  reduce using rule 29 (parameter_without_type)


State 34

   18 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty . ')' stmt_ends END SUB
   19         | SUB IDENTIFIER '(' parameterlist_or_empty . ')' stmt_ends stmt_list END SUB

    ')'  shift, and go to state 53


State 35

   21 parameterlist_or_empty: parameterlist_with_type .
   24 parameterlist_with_type: parameterlist_with_type . ',' parameter_with_type

    ','  shift, and go to state 54

    $default  reduce using rule 21 (parameterlist_or_empty)


State 36

   22 parameterlist_or_empty: parameterlist_without_type .
   26 parameterlist_without_type: parameterlist_without_type . ',' parameter_without_type

    ','  shift, and go to state 55

    $default  reduce using rule 22 (parameterlist_or_empty)


State 37

   23 parameterlist_with_type: parameter_with_type .

    $default  reduce using rule 23 (parameterlist_with_type)


State 38

   25 parameterlist_without_type: parameter_without_type .

    $default  reduce using rule 25 (parameterlist_without_type)


State 39

   82 basic_literal: INT .

    $default  reduce using rule 82 (basic_literal)


State 40

   85 basic_literal: DOUBLE .

    $default  reduce using rule 85 (basic_literal)


State 41

   83 basic_literal: STRING .

    $default  reduce using rule 83 (basic_literal)


State 42

   84 basic_literal: BOOLEAN .

    $default  reduce using rule 84 (basic_literal)


State 43

   86 function_literal: IDENTIFIER . arguments

    '('  shift, and go to state 29

    arguments  go to state 56


State 44

   68 expr: '+' . expr

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 57
    basic_literal     go to state 48
    function_literal  go to state 49


State 45

   67 expr: '-' . expr

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 58
    basic_literal     go to state 48
    function_literal  go to state 49


State 46

   88 arguments: '(' ')' .

    $default  reduce using rule 88 (arguments)


State 47

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr
   89 expr_list: expr .

    '^'            shift, and go to state 59
    '*'            shift, and go to state 60
    '/'            shift, and go to state 61
    INT_DIV        shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71

    $default  reduce using rule 89 (expr_list)


State 48

   65 expr: basic_literal .

    $default  reduce using rule 65 (expr)


State 49

   66 expr: function_literal .

    $default  reduce using rule 66 (expr)


State 50

   87 arguments: '(' expr_list . ')'
   90 expr_list: expr_list . ',' expr

    ')'  shift, and go to state 72
    ','  shift, and go to state 73


State 51

   14 function: FUNCTION IDENTIFIER arguments stmt_ends . END FUNCTION
   15         | FUNCTION IDENTIFIER arguments stmt_ends . RETURN expr END FUNCTION
   16         | FUNCTION IDENTIFIER arguments stmt_ends . stmt_list END FUNCTION
   17         | FUNCTION IDENTIFIER arguments stmt_ends . stmt_list RETURN expr END FUNCTION
   39 stmt_ends: stmt_ends . END_OF_LINE

    IDENTIFIER   shift, and go to state 74
    ACCESS       shift, and go to state 75
    END          shift, and go to state 76
    CONST        shift, and go to state 77
    DIM          shift, and go to state 78
    WHILE        shift, and go to state 79
    IF           shift, and go to state 80
    SELECT       shift, and go to state 81
    RETURN       shift, and go to state 82
    END_OF_LINE  shift, and go to state 15

    stmt_list           go to state 83
    stmt                go to state 84
    multi_line_stmt     go to state 85
    decl_stmt           go to state 86
    assign_stmt         go to state 87
    while_stmt          go to state 88
    if_stmt_multi_line  go to state 89
    select_stmt         go to state 90


State 52

   27 parameter_with_type: IDENTIFIER AS . basic_literal
   28                    | IDENTIFIER AS . basic_literal '(' ')'

    INT      shift, and go to state 39
    DOUBLE   shift, and go to state 40
    STRING   shift, and go to state 41
    BOOLEAN  shift, and go to state 42

    basic_literal  go to state 91


State 53

   18 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' . stmt_ends END SUB
   19         | SUB IDENTIFIER '(' parameterlist_or_empty ')' . stmt_ends stmt_list END SUB

    END_OF_LINE  shift, and go to state 12

    stmt_ends  go to state 92


State 54

   24 parameterlist_with_type: parameterlist_with_type ',' . parameter_with_type

    IDENTIFIER  shift, and go to state 93

    parameter_with_type  go to state 94


State 55

   26 parameterlist_without_type: parameterlist_without_type ',' . parameter_without_type

    IDENTIFIER  shift, and go to state 95

    parameter_without_type  go to state 96


State 56

   86 function_literal: IDENTIFIER arguments .

    $default  reduce using rule 86 (function_literal)


State 57

   68 expr: '+' expr .
   69     | expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    '^'            shift, and go to state 59
    '*'            shift, and go to state 60
    '/'            shift, and go to state 61
    INT_DIV        shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71

    $default  reduce using rule 68 (expr)


State 58

   67 expr: '-' expr .
   69     | expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    '^'            shift, and go to state 59
    '*'            shift, and go to state 60
    '/'            shift, and go to state 61
    INT_DIV        shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71

    $default  reduce using rule 67 (expr)


State 59

   77 expr: expr '^' . expr

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 97
    basic_literal     go to state 48
    function_literal  go to state 49


State 60

   71 expr: expr '*' . expr

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 98
    basic_literal     go to state 48
    function_literal  go to state 49


State 61

   72 expr: expr '/' . expr

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 99
    basic_literal     go to state 48
    function_literal  go to state 49


State 62

   73 expr: expr INT_DIV . expr

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 100
    basic_literal     go to state 48
    function_literal  go to state 49


State 63

   69 expr: expr '+' . expr

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 101
    basic_literal     go to state 48
    function_literal  go to state 49


State 64

   70 expr: expr '-' . expr

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 102
    basic_literal     go to state 48
    function_literal  go to state 49


State 65

   74 expr: expr '=' . expr

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 103
    basic_literal     go to state 48
    function_literal  go to state 49


State 66

   78 expr: expr NOT_EQUAL . expr

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 104
    basic_literal     go to state 48
    function_literal  go to state 49


State 67

   79 expr: expr LESS_OR_EQUAL . expr

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 105
    basic_literal     go to state 48
    function_literal  go to state 49


State 68

   80 expr: expr MORE_OR_EQUAL . expr

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 106
    basic_literal     go to state 48
    function_literal  go to state 49


State 69

   76 expr: expr '>' . expr

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 107
    basic_literal     go to state 48
    function_literal  go to state 49


State 70

   75 expr: expr '<' . expr

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 108
    basic_literal     go to state 48
    function_literal  go to state 49


State 71

   81 expr: expr '&' . expr

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 109
    basic_literal     go to state 48
    function_literal  go to state 49


State 72

   87 arguments: '(' expr_list ')' .

    $default  reduce using rule 87 (arguments)


State 73

   90 expr_list: expr_list ',' . expr

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 110
    basic_literal     go to state 48
    function_literal  go to state 49


State 74

   51 assign_stmt: IDENTIFIER . '=' expr
   52            | IDENTIFIER . '=' IDENTIFIER

    '='  shift, and go to state 111


State 75

   40 decl_stmt: ACCESS . SUB var_name stmt END SUB

    SUB  shift, and go to state 112


State 76

   14 function: FUNCTION IDENTIFIER arguments stmt_ends END . FUNCTION

    FUNCTION  shift, and go to state 113


State 77

   41 decl_stmt: CONST . var_name AS basic_literal '=' END_OF_LINE expr
   42          | CONST . var_name AS basic_literal '=' expr

    IDENTIFIER  shift, and go to state 114

    var_name  go to state 115


State 78

   43 decl_stmt: DIM . var_name AS basic_literal '=' END_OF_LINE expr
   44          | DIM . var_name AS basic_literal '=' expr
   45          | DIM . var_name AS basic_literal
   46          | DIM . var_name '=' END_OF_LINE expr
   47          | DIM . var_name '=' expr
   48          | DIM . var_name

    IDENTIFIER  shift, and go to state 114

    var_name  go to state 116


State 79

   53 while_stmt: WHILE . expr stmt_ends stmt END WHILE

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 117
    basic_literal     go to state 48
    function_literal  go to state 49


State 80

   54 if_stmt_multi_line: IF . expr THEN stmt_ends stmt ELSE stmt END IF
   55                   | IF . expr THEN stmt_ends stmt elseif_list ELSE stmt END IF

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 118
    basic_literal     go to state 48
    function_literal  go to state 49


State 81

   58 select_stmt: SELECT . CASE expr stmt_ends case_list END SELECT

    CASE  shift, and go to state 119


State 82

   15 function: FUNCTION IDENTIFIER arguments stmt_ends RETURN . expr END FUNCTION

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 120
    basic_literal     go to state 48
    function_literal  go to state 49


State 83

   16 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list . END FUNCTION
   17         | FUNCTION IDENTIFIER arguments stmt_ends stmt_list . RETURN expr END FUNCTION
   31 stmt_list: stmt_list . stmt

    IDENTIFIER  shift, and go to state 74
    ACCESS      shift, and go to state 75
    END         shift, and go to state 121
    CONST       shift, and go to state 77
    DIM         shift, and go to state 78
    WHILE       shift, and go to state 79
    IF          shift, and go to state 80
    SELECT      shift, and go to state 81
    RETURN      shift, and go to state 122

    stmt                go to state 123
    multi_line_stmt     go to state 85
    decl_stmt           go to state 86
    assign_stmt         go to state 87
    while_stmt          go to state 88
    if_stmt_multi_line  go to state 89
    select_stmt         go to state 90


State 84

   30 stmt_list: stmt .

    $default  reduce using rule 30 (stmt_list)


State 85

   32 stmt: multi_line_stmt .

    $default  reduce using rule 32 (stmt)


State 86

   33 multi_line_stmt: decl_stmt . stmt_ends

    END_OF_LINE  shift, and go to state 12

    stmt_ends  go to state 124


State 87

   34 multi_line_stmt: assign_stmt . stmt_ends

    END_OF_LINE  shift, and go to state 12

    stmt_ends  go to state 125


State 88

   35 multi_line_stmt: while_stmt . stmt_ends

    END_OF_LINE  shift, and go to state 12

    stmt_ends  go to state 126


State 89

   37 multi_line_stmt: if_stmt_multi_line . stmt_ends

    END_OF_LINE  shift, and go to state 12

    stmt_ends  go to state 127


State 90

   36 multi_line_stmt: select_stmt . stmt_ends

    END_OF_LINE  shift, and go to state 12

    stmt_ends  go to state 128


State 91

   27 parameter_with_type: IDENTIFIER AS basic_literal .
   28                    | IDENTIFIER AS basic_literal . '(' ')'

    '('  shift, and go to state 129

    $default  reduce using rule 27 (parameter_with_type)


State 92

   18 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends . END SUB
   19         | SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends . stmt_list END SUB
   39 stmt_ends: stmt_ends . END_OF_LINE

    IDENTIFIER   shift, and go to state 74
    ACCESS       shift, and go to state 75
    END          shift, and go to state 130
    CONST        shift, and go to state 77
    DIM          shift, and go to state 78
    WHILE        shift, and go to state 79
    IF           shift, and go to state 80
    SELECT       shift, and go to state 81
    END_OF_LINE  shift, and go to state 15

    stmt_list           go to state 131
    stmt                go to state 84
    multi_line_stmt     go to state 85
    decl_stmt           go to state 86
    assign_stmt         go to state 87
    while_stmt          go to state 88
    if_stmt_multi_line  go to state 89
    select_stmt         go to state 90


State 93

   27 parameter_with_type: IDENTIFIER . AS basic_literal
   28                    | IDENTIFIER . AS basic_literal '(' ')'

    AS  shift, and go to state 52


State 94

   24 parameterlist_with_type: parameterlist_with_type ',' parameter_with_type .

    $default  reduce using rule 24 (parameterlist_with_type)


State 95

   29 parameter_without_type: IDENTIFIER .

    $default  reduce using rule 29 (parameter_without_type)


State 96

   26 parameterlist_without_type: parameterlist_without_type ',' parameter_without_type .

    $default  reduce using rule 26 (parameterlist_without_type)


State 97

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   77     | expr '^' expr .
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    '*'            shift, and go to state 60
    '/'            shift, and go to state 61
    INT_DIV        shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71

    $default  reduce using rule 77 (expr)


State 98

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   71     | expr '*' expr .
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    INT_DIV        shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71

    $default  reduce using rule 71 (expr)


State 99

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   72     | expr '/' expr .
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    INT_DIV        shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71

    $default  reduce using rule 72 (expr)


State 100

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   73     | expr INT_DIV expr .
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71

    $default  reduce using rule 73 (expr)


State 101

   69 expr: expr . '+' expr
   69     | expr '+' expr .
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71

    $default  reduce using rule 69 (expr)


State 102

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   70     | expr '-' expr .
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71

    $default  reduce using rule 70 (expr)


State 103

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   74     | expr '=' expr .
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    '&'  shift, and go to state 71

    $default  reduce using rule 74 (expr)


State 104

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   78     | expr NOT_EQUAL expr .
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    '&'  shift, and go to state 71

    $default  reduce using rule 78 (expr)


State 105

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   79     | expr LESS_OR_EQUAL expr .
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    '&'  shift, and go to state 71

    $default  reduce using rule 79 (expr)


State 106

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   80     | expr MORE_OR_EQUAL expr .
   81     | expr . '&' expr

    '&'  shift, and go to state 71

    $default  reduce using rule 80 (expr)


State 107

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   76     | expr '>' expr .
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    '&'  shift, and go to state 71

    $default  reduce using rule 76 (expr)


State 108

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   75     | expr '<' expr .
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    '&'  shift, and go to state 71

    $default  reduce using rule 75 (expr)


State 109

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr
   81     | expr '&' expr .

    $default  reduce using rule 81 (expr)


State 110

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr
   90 expr_list: expr_list ',' expr .

    '^'            shift, and go to state 59
    '*'            shift, and go to state 60
    '/'            shift, and go to state 61
    INT_DIV        shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71

    $default  reduce using rule 90 (expr_list)


State 111

   51 assign_stmt: IDENTIFIER '=' . expr
   52            | IDENTIFIER '=' . IDENTIFIER

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 132
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 133
    basic_literal     go to state 48
    function_literal  go to state 49


State 112

   40 decl_stmt: ACCESS SUB . var_name stmt END SUB

    IDENTIFIER  shift, and go to state 114

    var_name  go to state 134


State 113

   14 function: FUNCTION IDENTIFIER arguments stmt_ends END FUNCTION .

    $default  reduce using rule 14 (function)


State 114

   49 var_name: IDENTIFIER . '(' expr ')'
   50         | IDENTIFIER .

    '('  shift, and go to state 135

    $default  reduce using rule 50 (var_name)


State 115

   41 decl_stmt: CONST var_name . AS basic_literal '=' END_OF_LINE expr
   42          | CONST var_name . AS basic_literal '=' expr

    AS  shift, and go to state 136


State 116

   43 decl_stmt: DIM var_name . AS basic_literal '=' END_OF_LINE expr
   44          | DIM var_name . AS basic_literal '=' expr
   45          | DIM var_name . AS basic_literal
   46          | DIM var_name . '=' END_OF_LINE expr
   47          | DIM var_name . '=' expr
   48          | DIM var_name .

    AS   shift, and go to state 137
    '='  shift, and go to state 138

    $default  reduce using rule 48 (decl_stmt)


State 117

   53 while_stmt: WHILE expr . stmt_ends stmt END WHILE
   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    END_OF_LINE    shift, and go to state 12
    '^'            shift, and go to state 59
    '*'            shift, and go to state 60
    '/'            shift, and go to state 61
    INT_DIV        shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71

    stmt_ends  go to state 139


State 118

   54 if_stmt_multi_line: IF expr . THEN stmt_ends stmt ELSE stmt END IF
   55                   | IF expr . THEN stmt_ends stmt elseif_list ELSE stmt END IF
   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    THEN           shift, and go to state 140
    '^'            shift, and go to state 59
    '*'            shift, and go to state 60
    '/'            shift, and go to state 61
    INT_DIV        shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71


State 119

   58 select_stmt: SELECT CASE . expr stmt_ends case_list END SELECT

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 141
    basic_literal     go to state 48
    function_literal  go to state 49


State 120

   15 function: FUNCTION IDENTIFIER arguments stmt_ends RETURN expr . END FUNCTION
   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    END            shift, and go to state 142
    '^'            shift, and go to state 59
    '*'            shift, and go to state 60
    '/'            shift, and go to state 61
    INT_DIV        shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71


State 121

   16 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list END . FUNCTION

    FUNCTION  shift, and go to state 143


State 122

   17 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN . expr END FUNCTION

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 144
    basic_literal     go to state 48
    function_literal  go to state 49


State 123

   31 stmt_list: stmt_list stmt .

    $default  reduce using rule 31 (stmt_list)


State 124

   33 multi_line_stmt: decl_stmt stmt_ends .
   39 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 15

    $default  reduce using rule 33 (multi_line_stmt)


State 125

   34 multi_line_stmt: assign_stmt stmt_ends .
   39 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 15

    $default  reduce using rule 34 (multi_line_stmt)


State 126

   35 multi_line_stmt: while_stmt stmt_ends .
   39 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 15

    $default  reduce using rule 35 (multi_line_stmt)


State 127

   37 multi_line_stmt: if_stmt_multi_line stmt_ends .
   39 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 15

    $default  reduce using rule 37 (multi_line_stmt)


State 128

   36 multi_line_stmt: select_stmt stmt_ends .
   39 stmt_ends: stmt_ends . END_OF_LINE

    END_OF_LINE  shift, and go to state 15

    $default  reduce using rule 36 (multi_line_stmt)


State 129

   28 parameter_with_type: IDENTIFIER AS basic_literal '(' . ')'

    ')'  shift, and go to state 145


State 130

   18 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END . SUB

    SUB  shift, and go to state 146


State 131

   19 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list . END SUB
   31 stmt_list: stmt_list . stmt

    IDENTIFIER  shift, and go to state 74
    ACCESS      shift, and go to state 75
    END         shift, and go to state 147
    CONST       shift, and go to state 77
    DIM         shift, and go to state 78
    WHILE       shift, and go to state 79
    IF          shift, and go to state 80
    SELECT      shift, and go to state 81

    stmt                go to state 123
    multi_line_stmt     go to state 85
    decl_stmt           go to state 86
    assign_stmt         go to state 87
    while_stmt          go to state 88
    if_stmt_multi_line  go to state 89
    select_stmt         go to state 90


State 132

   52 assign_stmt: IDENTIFIER '=' IDENTIFIER .
   86 function_literal: IDENTIFIER . arguments

    '('  shift, and go to state 29

    $default  reduce using rule 52 (assign_stmt)

    arguments  go to state 56


State 133

   51 assign_stmt: IDENTIFIER '=' expr .
   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    '^'            shift, and go to state 59
    '*'            shift, and go to state 60
    '/'            shift, and go to state 61
    INT_DIV        shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71

    $default  reduce using rule 51 (assign_stmt)


State 134

   40 decl_stmt: ACCESS SUB var_name . stmt END SUB

    IDENTIFIER  shift, and go to state 74
    ACCESS      shift, and go to state 75
    CONST       shift, and go to state 77
    DIM         shift, and go to state 78
    WHILE       shift, and go to state 79
    IF          shift, and go to state 80
    SELECT      shift, and go to state 81

    stmt                go to state 148
    multi_line_stmt     go to state 85
    decl_stmt           go to state 86
    assign_stmt         go to state 87
    while_stmt          go to state 88
    if_stmt_multi_line  go to state 89
    select_stmt         go to state 90


State 135

   49 var_name: IDENTIFIER '(' . expr ')'

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 149
    basic_literal     go to state 48
    function_literal  go to state 49


State 136

   41 decl_stmt: CONST var_name AS . basic_literal '=' END_OF_LINE expr
   42          | CONST var_name AS . basic_literal '=' expr

    INT      shift, and go to state 39
    DOUBLE   shift, and go to state 40
    STRING   shift, and go to state 41
    BOOLEAN  shift, and go to state 42

    basic_literal  go to state 150


State 137

   43 decl_stmt: DIM var_name AS . basic_literal '=' END_OF_LINE expr
   44          | DIM var_name AS . basic_literal '=' expr
   45          | DIM var_name AS . basic_literal

    INT      shift, and go to state 39
    DOUBLE   shift, and go to state 40
    STRING   shift, and go to state 41
    BOOLEAN  shift, and go to state 42

    basic_literal  go to state 151


State 138

   46 decl_stmt: DIM var_name '=' . END_OF_LINE expr
   47          | DIM var_name '=' . expr

    INT          shift, and go to state 39
    DOUBLE       shift, and go to state 40
    STRING       shift, and go to state 41
    BOOLEAN      shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    END_OF_LINE  shift, and go to state 152
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45

    expr              go to state 153
    basic_literal     go to state 48
    function_literal  go to state 49


State 139

   39 stmt_ends: stmt_ends . END_OF_LINE
   53 while_stmt: WHILE expr stmt_ends . stmt END WHILE

    IDENTIFIER   shift, and go to state 74
    ACCESS       shift, and go to state 75
    CONST        shift, and go to state 77
    DIM          shift, and go to state 78
    WHILE        shift, and go to state 79
    IF           shift, and go to state 80
    SELECT       shift, and go to state 81
    END_OF_LINE  shift, and go to state 15

    stmt                go to state 154
    multi_line_stmt     go to state 85
    decl_stmt           go to state 86
    assign_stmt         go to state 87
    while_stmt          go to state 88
    if_stmt_multi_line  go to state 89
    select_stmt         go to state 90


State 140

   54 if_stmt_multi_line: IF expr THEN . stmt_ends stmt ELSE stmt END IF
   55                   | IF expr THEN . stmt_ends stmt elseif_list ELSE stmt END IF

    END_OF_LINE  shift, and go to state 12

    stmt_ends  go to state 155


State 141

   58 select_stmt: SELECT CASE expr . stmt_ends case_list END SELECT
   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    END_OF_LINE    shift, and go to state 12
    '^'            shift, and go to state 59
    '*'            shift, and go to state 60
    '/'            shift, and go to state 61
    INT_DIV        shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71

    stmt_ends  go to state 156


State 142

   15 function: FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END . FUNCTION

    FUNCTION  shift, and go to state 157


State 143

   16 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list END FUNCTION .

    $default  reduce using rule 16 (function)


State 144

   17 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr . END FUNCTION
   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    END            shift, and go to state 158
    '^'            shift, and go to state 59
    '*'            shift, and go to state 60
    '/'            shift, and go to state 61
    INT_DIV        shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71


State 145

   28 parameter_with_type: IDENTIFIER AS basic_literal '(' ')' .

    $default  reduce using rule 28 (parameter_with_type)


State 146

   18 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends END SUB .

    $default  reduce using rule 18 (sub_bloc)


State 147

   19 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END . SUB

    SUB  shift, and go to state 159


State 148

   40 decl_stmt: ACCESS SUB var_name stmt . END SUB

    END  shift, and go to state 160


State 149

   49 var_name: IDENTIFIER '(' expr . ')'
   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    '^'            shift, and go to state 59
    '*'            shift, and go to state 60
    '/'            shift, and go to state 61
    INT_DIV        shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71
    ')'            shift, and go to state 161


State 150

   41 decl_stmt: CONST var_name AS basic_literal . '=' END_OF_LINE expr
   42          | CONST var_name AS basic_literal . '=' expr

    '='  shift, and go to state 162


State 151

   43 decl_stmt: DIM var_name AS basic_literal . '=' END_OF_LINE expr
   44          | DIM var_name AS basic_literal . '=' expr
   45          | DIM var_name AS basic_literal .

    '='  shift, and go to state 163

    $default  reduce using rule 45 (decl_stmt)


State 152

   46 decl_stmt: DIM var_name '=' END_OF_LINE . expr

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 164
    basic_literal     go to state 48
    function_literal  go to state 49


State 153

   47 decl_stmt: DIM var_name '=' expr .
   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    '^'            shift, and go to state 59
    '*'            shift, and go to state 60
    '/'            shift, and go to state 61
    INT_DIV        shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71

    $default  reduce using rule 47 (decl_stmt)


State 154

   53 while_stmt: WHILE expr stmt_ends stmt . END WHILE

    END  shift, and go to state 165


State 155

   39 stmt_ends: stmt_ends . END_OF_LINE
   54 if_stmt_multi_line: IF expr THEN stmt_ends . stmt ELSE stmt END IF
   55                   | IF expr THEN stmt_ends . stmt elseif_list ELSE stmt END IF

    IDENTIFIER   shift, and go to state 74
    ACCESS       shift, and go to state 75
    CONST        shift, and go to state 77
    DIM          shift, and go to state 78
    WHILE        shift, and go to state 79
    IF           shift, and go to state 80
    SELECT       shift, and go to state 81
    END_OF_LINE  shift, and go to state 15

    stmt                go to state 166
    multi_line_stmt     go to state 85
    decl_stmt           go to state 86
    assign_stmt         go to state 87
    while_stmt          go to state 88
    if_stmt_multi_line  go to state 89
    select_stmt         go to state 90


State 156

   39 stmt_ends: stmt_ends . END_OF_LINE
   58 select_stmt: SELECT CASE expr stmt_ends . case_list END SELECT

    CASE         shift, and go to state 167
    END_OF_LINE  shift, and go to state 15

    case_list  go to state 168
    case_stmt  go to state 169


State 157

   15 function: FUNCTION IDENTIFIER arguments stmt_ends RETURN expr END FUNCTION .

    $default  reduce using rule 15 (function)


State 158

   17 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END . FUNCTION

    FUNCTION  shift, and go to state 170


State 159

   19 sub_bloc: SUB IDENTIFIER '(' parameterlist_or_empty ')' stmt_ends stmt_list END SUB .

    $default  reduce using rule 19 (sub_bloc)


State 160

   40 decl_stmt: ACCESS SUB var_name stmt END . SUB

    SUB  shift, and go to state 171


State 161

   49 var_name: IDENTIFIER '(' expr ')' .

    $default  reduce using rule 49 (var_name)


State 162

   41 decl_stmt: CONST var_name AS basic_literal '=' . END_OF_LINE expr
   42          | CONST var_name AS basic_literal '=' . expr

    INT          shift, and go to state 39
    DOUBLE       shift, and go to state 40
    STRING       shift, and go to state 41
    BOOLEAN      shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    END_OF_LINE  shift, and go to state 172
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45

    expr              go to state 173
    basic_literal     go to state 48
    function_literal  go to state 49


State 163

   43 decl_stmt: DIM var_name AS basic_literal '=' . END_OF_LINE expr
   44          | DIM var_name AS basic_literal '=' . expr

    INT          shift, and go to state 39
    DOUBLE       shift, and go to state 40
    STRING       shift, and go to state 41
    BOOLEAN      shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    END_OF_LINE  shift, and go to state 174
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45

    expr              go to state 175
    basic_literal     go to state 48
    function_literal  go to state 49


State 164

   46 decl_stmt: DIM var_name '=' END_OF_LINE expr .
   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    '^'            shift, and go to state 59
    '*'            shift, and go to state 60
    '/'            shift, and go to state 61
    INT_DIV        shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71

    $default  reduce using rule 46 (decl_stmt)


State 165

   53 while_stmt: WHILE expr stmt_ends stmt END . WHILE

    WHILE  shift, and go to state 176


State 166

   54 if_stmt_multi_line: IF expr THEN stmt_ends stmt . ELSE stmt END IF
   55                   | IF expr THEN stmt_ends stmt . elseif_list ELSE stmt END IF

    ELSE    shift, and go to state 177
    ELSEIF  shift, and go to state 178

    elseif_list  go to state 179


State 167

   61 case_stmt: CASE . expr stmt
   62          | CASE . IS expr stmt
   63          | CASE . expr TO expr stmt
   64          | CASE . ELSE stmt

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    ELSE        shift, and go to state 180
    IS          shift, and go to state 181
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 182
    basic_literal     go to state 48
    function_literal  go to state 49


State 168

   58 select_stmt: SELECT CASE expr stmt_ends case_list . END SELECT
   60 case_list: case_list . case_stmt

    END   shift, and go to state 183
    CASE  shift, and go to state 167

    case_stmt  go to state 184


State 169

   59 case_list: case_stmt .

    $default  reduce using rule 59 (case_list)


State 170

   17 function: FUNCTION IDENTIFIER arguments stmt_ends stmt_list RETURN expr END FUNCTION .

    $default  reduce using rule 17 (function)


State 171

   40 decl_stmt: ACCESS SUB var_name stmt END SUB .

    $default  reduce using rule 40 (decl_stmt)


State 172

   41 decl_stmt: CONST var_name AS basic_literal '=' END_OF_LINE . expr

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 185
    basic_literal     go to state 48
    function_literal  go to state 49


State 173

   42 decl_stmt: CONST var_name AS basic_literal '=' expr .
   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    '^'            shift, and go to state 59
    '*'            shift, and go to state 60
    '/'            shift, and go to state 61
    INT_DIV        shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71

    $default  reduce using rule 42 (decl_stmt)


State 174

   43 decl_stmt: DIM var_name AS basic_literal '=' END_OF_LINE . expr

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 186
    basic_literal     go to state 48
    function_literal  go to state 49


State 175

   44 decl_stmt: DIM var_name AS basic_literal '=' expr .
   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    '^'            shift, and go to state 59
    '*'            shift, and go to state 60
    '/'            shift, and go to state 61
    INT_DIV        shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71

    $default  reduce using rule 44 (decl_stmt)


State 176

   53 while_stmt: WHILE expr stmt_ends stmt END WHILE .

    $default  reduce using rule 53 (while_stmt)


State 177

   54 if_stmt_multi_line: IF expr THEN stmt_ends stmt ELSE . stmt END IF

    IDENTIFIER  shift, and go to state 74
    ACCESS      shift, and go to state 75
    CONST       shift, and go to state 77
    DIM         shift, and go to state 78
    WHILE       shift, and go to state 79
    IF          shift, and go to state 80
    SELECT      shift, and go to state 81

    stmt                go to state 187
    multi_line_stmt     go to state 85
    decl_stmt           go to state 86
    assign_stmt         go to state 87
    while_stmt          go to state 88
    if_stmt_multi_line  go to state 89
    select_stmt         go to state 90


State 178

   56 elseif_list: ELSEIF . expr THEN stmt

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 188
    basic_literal     go to state 48
    function_literal  go to state 49


State 179

   55 if_stmt_multi_line: IF expr THEN stmt_ends stmt elseif_list . ELSE stmt END IF
   57 elseif_list: elseif_list . ELSEIF expr THEN stmt

    ELSE    shift, and go to state 189
    ELSEIF  shift, and go to state 190


State 180

   64 case_stmt: CASE ELSE . stmt

    IDENTIFIER  shift, and go to state 74
    ACCESS      shift, and go to state 75
    CONST       shift, and go to state 77
    DIM         shift, and go to state 78
    WHILE       shift, and go to state 79
    IF          shift, and go to state 80
    SELECT      shift, and go to state 81

    stmt                go to state 191
    multi_line_stmt     go to state 85
    decl_stmt           go to state 86
    assign_stmt         go to state 87
    while_stmt          go to state 88
    if_stmt_multi_line  go to state 89
    select_stmt         go to state 90


State 181

   62 case_stmt: CASE IS . expr stmt

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 192
    basic_literal     go to state 48
    function_literal  go to state 49


State 182

   61 case_stmt: CASE expr . stmt
   63          | CASE expr . TO expr stmt
   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    IDENTIFIER     shift, and go to state 74
    ACCESS         shift, and go to state 75
    CONST          shift, and go to state 77
    DIM            shift, and go to state 78
    WHILE          shift, and go to state 79
    IF             shift, and go to state 80
    SELECT         shift, and go to state 81
    TO             shift, and go to state 193
    '^'            shift, and go to state 59
    '*'            shift, and go to state 60
    '/'            shift, and go to state 61
    INT_DIV        shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71

    stmt                go to state 194
    multi_line_stmt     go to state 85
    decl_stmt           go to state 86
    assign_stmt         go to state 87
    while_stmt          go to state 88
    if_stmt_multi_line  go to state 89
    select_stmt         go to state 90


State 183

   58 select_stmt: SELECT CASE expr stmt_ends case_list END . SELECT

    SELECT  shift, and go to state 195


State 184

   60 case_list: case_list case_stmt .

    $default  reduce using rule 60 (case_list)


State 185

   41 decl_stmt: CONST var_name AS basic_literal '=' END_OF_LINE expr .
   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    '^'            shift, and go to state 59
    '*'            shift, and go to state 60
    '/'            shift, and go to state 61
    INT_DIV        shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71

    $default  reduce using rule 41 (decl_stmt)


State 186

   43 decl_stmt: DIM var_name AS basic_literal '=' END_OF_LINE expr .
   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    '^'            shift, and go to state 59
    '*'            shift, and go to state 60
    '/'            shift, and go to state 61
    INT_DIV        shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71

    $default  reduce using rule 43 (decl_stmt)


State 187

   54 if_stmt_multi_line: IF expr THEN stmt_ends stmt ELSE stmt . END IF

    END  shift, and go to state 196


State 188

   56 elseif_list: ELSEIF expr . THEN stmt
   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    THEN           shift, and go to state 197
    '^'            shift, and go to state 59
    '*'            shift, and go to state 60
    '/'            shift, and go to state 61
    INT_DIV        shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71


State 189

   55 if_stmt_multi_line: IF expr THEN stmt_ends stmt elseif_list ELSE . stmt END IF

    IDENTIFIER  shift, and go to state 74
    ACCESS      shift, and go to state 75
    CONST       shift, and go to state 77
    DIM         shift, and go to state 78
    WHILE       shift, and go to state 79
    IF          shift, and go to state 80
    SELECT      shift, and go to state 81

    stmt                go to state 198
    multi_line_stmt     go to state 85
    decl_stmt           go to state 86
    assign_stmt         go to state 87
    while_stmt          go to state 88
    if_stmt_multi_line  go to state 89
    select_stmt         go to state 90


State 190

   57 elseif_list: elseif_list ELSEIF . expr THEN stmt

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 199
    basic_literal     go to state 48
    function_literal  go to state 49


State 191

   64 case_stmt: CASE ELSE stmt .

    $default  reduce using rule 64 (case_stmt)


State 192

   62 case_stmt: CASE IS expr . stmt
   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    IDENTIFIER     shift, and go to state 74
    ACCESS         shift, and go to state 75
    CONST          shift, and go to state 77
    DIM            shift, and go to state 78
    WHILE          shift, and go to state 79
    IF             shift, and go to state 80
    SELECT         shift, and go to state 81
    '^'            shift, and go to state 59
    '*'            shift, and go to state 60
    '/'            shift, and go to state 61
    INT_DIV        shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71

    stmt                go to state 200
    multi_line_stmt     go to state 85
    decl_stmt           go to state 86
    assign_stmt         go to state 87
    while_stmt          go to state 88
    if_stmt_multi_line  go to state 89
    select_stmt         go to state 90


State 193

   63 case_stmt: CASE expr TO . expr stmt

    INT         shift, and go to state 39
    DOUBLE      shift, and go to state 40
    STRING      shift, and go to state 41
    BOOLEAN     shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    '+'         shift, and go to state 44
    '-'         shift, and go to state 45

    expr              go to state 201
    basic_literal     go to state 48
    function_literal  go to state 49


State 194

   61 case_stmt: CASE expr stmt .

    $default  reduce using rule 61 (case_stmt)


State 195

   58 select_stmt: SELECT CASE expr stmt_ends case_list END SELECT .

    $default  reduce using rule 58 (select_stmt)


State 196

   54 if_stmt_multi_line: IF expr THEN stmt_ends stmt ELSE stmt END . IF

    IF  shift, and go to state 202


State 197

   56 elseif_list: ELSEIF expr THEN . stmt

    IDENTIFIER  shift, and go to state 74
    ACCESS      shift, and go to state 75
    CONST       shift, and go to state 77
    DIM         shift, and go to state 78
    WHILE       shift, and go to state 79
    IF          shift, and go to state 80
    SELECT      shift, and go to state 81

    stmt                go to state 203
    multi_line_stmt     go to state 85
    decl_stmt           go to state 86
    assign_stmt         go to state 87
    while_stmt          go to state 88
    if_stmt_multi_line  go to state 89
    select_stmt         go to state 90


State 198

   55 if_stmt_multi_line: IF expr THEN stmt_ends stmt elseif_list ELSE stmt . END IF

    END  shift, and go to state 204


State 199

   57 elseif_list: elseif_list ELSEIF expr . THEN stmt
   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    THEN           shift, and go to state 205
    '^'            shift, and go to state 59
    '*'            shift, and go to state 60
    '/'            shift, and go to state 61
    INT_DIV        shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71


State 200

   62 case_stmt: CASE IS expr stmt .

    $default  reduce using rule 62 (case_stmt)


State 201

   63 case_stmt: CASE expr TO expr . stmt
   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . INT_DIV expr
   74     | expr . '=' expr
   75     | expr . '<' expr
   76     | expr . '>' expr
   77     | expr . '^' expr
   78     | expr . NOT_EQUAL expr
   79     | expr . LESS_OR_EQUAL expr
   80     | expr . MORE_OR_EQUAL expr
   81     | expr . '&' expr

    IDENTIFIER     shift, and go to state 74
    ACCESS         shift, and go to state 75
    CONST          shift, and go to state 77
    DIM            shift, and go to state 78
    WHILE          shift, and go to state 79
    IF             shift, and go to state 80
    SELECT         shift, and go to state 81
    '^'            shift, and go to state 59
    '*'            shift, and go to state 60
    '/'            shift, and go to state 61
    INT_DIV        shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64
    '='            shift, and go to state 65
    NOT_EQUAL      shift, and go to state 66
    LESS_OR_EQUAL  shift, and go to state 67
    MORE_OR_EQUAL  shift, and go to state 68
    '>'            shift, and go to state 69
    '<'            shift, and go to state 70
    '&'            shift, and go to state 71

    stmt                go to state 206
    multi_line_stmt     go to state 85
    decl_stmt           go to state 86
    assign_stmt         go to state 87
    while_stmt          go to state 88
    if_stmt_multi_line  go to state 89
    select_stmt         go to state 90


State 202

   54 if_stmt_multi_line: IF expr THEN stmt_ends stmt ELSE stmt END IF .

    $default  reduce using rule 54 (if_stmt_multi_line)


State 203

   56 elseif_list: ELSEIF expr THEN stmt .

    $default  reduce using rule 56 (elseif_list)


State 204

   55 if_stmt_multi_line: IF expr THEN stmt_ends stmt elseif_list ELSE stmt END . IF

    IF  shift, and go to state 207


State 205

   57 elseif_list: elseif_list ELSEIF expr THEN . stmt

    IDENTIFIER  shift, and go to state 74
    ACCESS      shift, and go to state 75
    CONST       shift, and go to state 77
    DIM         shift, and go to state 78
    WHILE       shift, and go to state 79
    IF          shift, and go to state 80
    SELECT      shift, and go to state 81

    stmt                go to state 208
    multi_line_stmt     go to state 85
    decl_stmt           go to state 86
    assign_stmt         go to state 87
    while_stmt          go to state 88
    if_stmt_multi_line  go to state 89
    select_stmt         go to state 90


State 206

   63 case_stmt: CASE expr TO expr stmt .

    $default  reduce using rule 63 (case_stmt)


State 207

   55 if_stmt_multi_line: IF expr THEN stmt_ends stmt elseif_list ELSE stmt END IF .

    $default  reduce using rule 55 (if_stmt_multi_line)


State 208

   57 elseif_list: elseif_list ELSEIF expr THEN stmt .

    $default  reduce using rule 57 (elseif_list)
